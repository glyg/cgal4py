/* Generated by Cython 0.28.3 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "define_macros": [
            [
                "NPY_NO_DEPRECATED_API",
                null
            ]
        ],
        "depends": [
            "/home/guillaume/miniconda3/envs/py36/lib/python3.6/site-packages/numpy/core/include/numpy/arrayobject.h",
            "/home/guillaume/miniconda3/envs/py36/lib/python3.6/site-packages/numpy/core/include/numpy/ufuncobject.h",
            "cgal4py/delaunay/c_delaunay3.hpp",
            "cgal4py/delaunay/c_tools.hpp"
        ],
        "extra_compile_args": [
            "-std=gnu++11"
        ],
        "extra_link_args": [
            "-lgmp"
        ],
        "include_dirs": [
            "cgal4py/delaunay",
            "./cgal4py/delaunay",
            "/home/guillaume/miniconda3/envs/py36/lib/python3.6/site-packages/numpy/core/include",
            "/home/guillaume/miniconda3/envs/py36/include",
            "/usr/include/eigen3",
            "/usr/include/boost"
        ],
        "language": "c++",
        "libraries": [
            "gmp",
            "CGAL"
        ],
        "name": "cgal4py.delaunay.delaunay3",
        "sources": [
            "cgal4py/delaunay/delaunay3.pyx",
            "cgal4py/delaunay/c_delaunay3.cpp"
        ]
    },
    "module_name": "cgal4py.delaunay.delaunay3"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_28_3"
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (0 && PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0; // PyThread_create_key reports success always
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif // TSS (Thread Specific Storage) API
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__cgal4py__delaunay__delaunay3
#define __PYX_HAVE_API__cgal4py__delaunay__delaunay3
/* Early includes */
#include <string.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <utility>
#include <set>
#include <stdint.h>
#include "c_delaunay3.hpp"
#include "c_tools.hpp"
#include <stdlib.h>
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "cgal4py/delaunay/delaunay3.pyx",
  "stringsource",
  "__init__.pxd",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};
/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;

/* NoFastGil.proto */
#define __Pyx_PyGILState_Ensure PyGILState_Ensure
#define __Pyx_PyGILState_Release PyGILState_Release
#define __Pyx_FastGIL_Remember()
#define __Pyx_FastGIL_Forget()
#define __Pyx_FastGilFuncInit()

/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif


/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":730
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":731
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":732
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":733
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":737
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":738
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":739
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":740
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":744
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":745
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":754
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":755
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":756
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":758
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":759
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":763
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":765
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":766
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":767
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

/* "cgal4py/delaunay/delaunay3.pyx":27
 * from libc.stdint cimport uint32_t, uint64_t, int32_t, int64_t
 * 
 * ctypedef uint32_t info_t             # <<<<<<<<<<<<<<
 * cdef object np_info = np.uint32
 * ctypedef np.uint32_t np_info_t
 */
typedef uint32_t __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t;

/* "cgal4py/delaunay/delaunay3.pyx":29
 * ctypedef uint32_t info_t
 * cdef object np_info = np.uint32
 * ctypedef np.uint32_t np_info_t             # <<<<<<<<<<<<<<
 * 
 * def is_valid():
 */
typedef __pyx_t_5numpy_uint32_t __pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess;
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":769
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":773
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "cgal4py/delaunay/tools.pxd":76
 *         void add_inf()
 * 
 * ctypedef SerializedLeaf[uint32_t] sLeaf32             # <<<<<<<<<<<<<<
 * ctypedef SerializedLeaf[uint64_t] sLeaf64
 * ctypedef vector[sLeaf32] sLeaves32
 */
typedef SerializedLeaf<uint32_t>  __pyx_t_7cgal4py_8delaunay_5tools_sLeaf32;

/* "cgal4py/delaunay/tools.pxd":77
 * 
 * ctypedef SerializedLeaf[uint32_t] sLeaf32
 * ctypedef SerializedLeaf[uint64_t] sLeaf64             # <<<<<<<<<<<<<<
 * ctypedef vector[sLeaf32] sLeaves32
 * ctypedef vector[sLeaf64] sLeaves64
 */
typedef SerializedLeaf<uint64_t>  __pyx_t_7cgal4py_8delaunay_5tools_sLeaf64;

/* "cgal4py/delaunay/tools.pxd":78
 * ctypedef SerializedLeaf[uint32_t] sLeaf32
 * ctypedef SerializedLeaf[uint64_t] sLeaf64
 * ctypedef vector[sLeaf32] sLeaves32             # <<<<<<<<<<<<<<
 * ctypedef vector[sLeaf64] sLeaves64
 */
typedef std::vector<__pyx_t_7cgal4py_8delaunay_5tools_sLeaf32>  __pyx_t_7cgal4py_8delaunay_5tools_sLeaves32;

/* "cgal4py/delaunay/tools.pxd":79
 * ctypedef SerializedLeaf[uint64_t] sLeaf64
 * ctypedef vector[sLeaf32] sLeaves32
 * ctypedef vector[sLeaf64] sLeaves64             # <<<<<<<<<<<<<<
 */
typedef std::vector<__pyx_t_7cgal4py_8delaunay_5tools_sLeaf64>  __pyx_t_7cgal4py_8delaunay_5tools_sLeaves64;

/* "cgal4py/delaunay/delaunay3.pyx":37
 *         return False
 * 
 * cdef class Delaunay3_vertex:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation vertex.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex x;
};


/* "cgal4py/delaunay/delaunay3.pyx":197
 * 
 * 
 * cdef class Delaunay3_vertex_iter:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation vertex iterator.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter {
  PyObject_HEAD
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_verts_iter x;
};


/* "cgal4py/delaunay/delaunay3.pyx":258
 * 
 * 
 * cdef class Delaunay3_vertex_range:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for iterating over a range of triangulation vertices
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range {
  PyObject_HEAD
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *xstop;
  PyBoolObject *finite;
};


/* "cgal4py/delaunay/delaunay3.pyx":300
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_vertex_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of vertices.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  v;
  int n;
  int i;
};


/* "cgal4py/delaunay/delaunay3.pyx":357
 * 
 * 
 * cdef class Delaunay3_edge:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation edge.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge x;
};


/* "cgal4py/delaunay/delaunay3.pyx":607
 * 
 * 
 * cdef class Delaunay3_edge_iter:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation edge iterator.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter {
  PyObject_HEAD
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_edges_iter x;
};


/* "cgal4py/delaunay/delaunay3.pyx":669
 * 
 * 
 * cdef class Delaunay3_edge_range:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for iterating over a range of triangulation edges.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range {
  PyObject_HEAD
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *xstop;
  PyBoolObject *finite;
};


/* "cgal4py/delaunay/delaunay3.pyx":711
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_edge_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of edges.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  v;
  int n;
  int i;
};


/* "cgal4py/delaunay/delaunay3.pyx":768
 * 
 * 
 * cdef class Delaunay3_facet:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation facet.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet x;
};


/* "cgal4py/delaunay/delaunay3.pyx":1036
 * 
 * 
 * cdef class Delaunay3_facet_iter:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation facet iterator.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter {
  PyObject_HEAD
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_facets_iter x;
};


/* "cgal4py/delaunay/delaunay3.pyx":1098
 * 
 * 
 * cdef class Delaunay3_facet_range:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for iterating over a range of triangulation facets.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range {
  PyObject_HEAD
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *xstop;
  PyBoolObject *finite;
};


/* "cgal4py/delaunay/delaunay3.pyx":1140
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_facet_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of facets.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  v;
  int n;
  int i;
};


/* "cgal4py/delaunay/delaunay3.pyx":1197
 * 
 * 
 * cdef class Delaunay3_cell:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation cell.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell x;
};


/* "cgal4py/delaunay/delaunay3.pyx":1567
 * 
 * 
 * cdef class Delaunay3_cell_iter:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation cell iteration.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter {
  PyObject_HEAD
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_cells_iter x;
};


/* "cgal4py/delaunay/delaunay3.pyx":1629
 * 
 * 
 * cdef class Delaunay3_cell_range:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for iterating over a range of triangulation cells.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range {
  PyObject_HEAD
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *xstop;
  PyBoolObject *finite;
};


/* "cgal4py/delaunay/delaunay3.pyx":1670
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_cell_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of cells.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_vtab;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  v;
  int n;
  int i;
};


/* "cgal4py/delaunay/delaunay3.pyx":1728
 * 
 * 
 * cdef class Delaunay3:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a 3D Delaunay triangulation.
 * 
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 {
  PyObject_HEAD
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *T;
  int n;
  PyObject *n_per_insert;
  PyBoolObject *_locked;
  PyObject *_cache_to_clear_on_update;
};


/* "cgal4py/delaunay/delaunay3.pyx":1769
 * 
 *     @staticmethod
 *     def _update_to_tess(func):             # <<<<<<<<<<<<<<
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess {
  PyObject_HEAD
  PyObject *__pyx_v_func;
};


/* "cgal4py/delaunay/delaunay3.pyx":1780
 * 
 *     @staticmethod
 *     def _dependent_property(fget):             # <<<<<<<<<<<<<<
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 */
struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property {
  PyObject_HEAD
  PyObject *__pyx_v_attr;
  PyObject *__pyx_v_fget;
};



/* "cgal4py/delaunay/delaunay3.pyx":37
 *         return False
 * 
 * cdef class Delaunay3_vertex:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation vertex.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex);
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex;


/* "cgal4py/delaunay/delaunay3.pyx":300
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_vertex_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of vertices.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex> );
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector;


/* "cgal4py/delaunay/delaunay3.pyx":357
 * 
 * 
 * cdef class Delaunay3_edge:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation edge.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge);
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge;


/* "cgal4py/delaunay/delaunay3.pyx":711
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_edge_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of edges.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge> );
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector;


/* "cgal4py/delaunay/delaunay3.pyx":768
 * 
 * 
 * cdef class Delaunay3_facet:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation facet.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet);
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet;


/* "cgal4py/delaunay/delaunay3.pyx":1140
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_facet_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of facets.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> );
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector;


/* "cgal4py/delaunay/delaunay3.pyx":1197
 * 
 * 
 * cdef class Delaunay3_cell:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a triangulation cell.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell);
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell;


/* "cgal4py/delaunay/delaunay3.pyx":1670
 *             raise StopIteration()
 * 
 * cdef class Delaunay3_cell_vector:             # <<<<<<<<<<<<<<
 *     r"""Wrapper class for a vector of cells.
 * 
 */

struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector {
  void (*assign)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> );
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

/* BufferGetAndValidate.proto */
#define __Pyx_GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack)\
    ((obj == Py_None || obj == NULL) ?\
    (__Pyx_ZeroBuffer(buf), 0) :\
    __Pyx__GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack))
static int  __Pyx__GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static void __Pyx_ZeroBuffer(Py_buffer* buf);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static Py_ssize_t __Pyx_minusones[] = { -1, -1, -1, -1, -1, -1, -1, -1 };
static Py_ssize_t __Pyx_zeros[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

/* BufferIndexError.proto */
static void __Pyx_RaiseBufferIndexError(int axis);

#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_DivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_DivideObjC(op1, op2, floatval, inplace)\
    ((inplace ? __Pyx_PyNumber_InPlaceDivide(op1, op2) : __Pyx_PyNumber_Divide(op1, op2)))
    #endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunction.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code)\
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* BufferFallbackError.proto */
static void __Pyx_RaiseBufferFallbackError(void);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_EqObjC(op1, op2, intval, inplace)\
    PyObject_RichCompare(op1, op2, Py_EQ)
    #endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* decode_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_bytes(
         PyObject* string, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    return __Pyx_decode_c_bytes(
        PyBytes_AS_STRING(string), PyBytes_GET_SIZE(string),
        start, stop, encoding, errors, decode_func);
}

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

#define __Pyx_BufPtrStrided2d(type, buf, i0, s0, i1, s1) (type)((char*)buf + i0 * s0 + i1 * s1)
#define __Pyx_BufPtrCContig2d(type, buf, i0, s0, i1, s1) ((type)((char*)buf + i0 * s0) + i1)
/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* SetItemInt.proto */
#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* GetNameInClass.proto */
static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

/* ClassMethod.proto */
#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint32_t(uint32_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int32_t(int32_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int64_t(int64_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint64_t(uint64_t value);

/* Print.proto */
static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE uint32_t __Pyx_PyInt_As_uint32_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE npy_uint32 __Pyx_PyInt_As_npy_uint32(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE uint64_t __Pyx_PyInt_As_uint64_t(PyObject *);

/* PrintOne.proto */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_x); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  __pyx_v_v); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge __pyx_v_x); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  __pyx_v_v); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet __pyx_v_x); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  __pyx_v_v); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell __pyx_v_x); /* proto*/
static void __pyx_f_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  __pyx_v_v); /* proto*/

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.set' */

/* Module declarations from 'libcpp.pair' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'cython' */

/* Module declarations from 'cgal4py.delaunay.tools' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'cgal4py.delaunay.delaunay3' */
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3 = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess = 0;
static PyTypeObject *__pyx_ptype_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property = 0;
static PyObject *__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info = 0;
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t = { "float64_t", NULL, sizeof(__pyx_t_5numpy_float64_t), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t = { "np_info_t", NULL, sizeof(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t = { "int32_t", NULL, sizeof(__pyx_t_5numpy_int32_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_int32_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_int32_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_uint32_t = { "uint32_t", NULL, sizeof(__pyx_t_5numpy_uint32_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_uint32_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_uint32_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t = { "int64_t", NULL, sizeof(__pyx_t_5numpy_int64_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_int64_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_int64_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t = { "uint64_t", NULL, sizeof(__pyx_t_5numpy_uint64_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_uint64_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_uint64_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t = { "info_t", NULL, sizeof(__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t), 0 };
#define __Pyx_MODULE_NAME "cgal4py.delaunay.delaunay3"
extern int __pyx_module_is_main_cgal4py__delaunay__delaunay3;
int __pyx_module_is_main_cgal4py__delaunay__delaunay3 = 0;

/* Implementation of 'cgal4py.delaunay.delaunay3' */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_StopIteration;
static PyObject *__pyx_builtin_property;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_T[] = "T";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_v[] = "v";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_c1[] = "c1";
static const char __pyx_k_c2[] = "c2";
static const char __pyx_k_c3[] = "c3";
static const char __pyx_k_c4[] = "c4";
static const char __pyx_k_cc[] = "cc";
static const char __pyx_k_i1[] = "i1";
static const char __pyx_k_i2[] = "i2";
static const char __pyx_k_i3[] = "i3";
static const char __pyx_k_i4[] = "i4";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_v1[] = "v1";
static const char __pyx_k_v2[] = "v2";
static const char __pyx_k_v3[] = "v3";
static const char __pyx_k_v4[] = "v4";
static const char __pyx_k__59[] = "_";
static const char __pyx_k_buf[] = "buf";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_idx[] = "idx";
static const char __pyx_k_inf[] = "inf";
static const char __pyx_k_max[] = "max";
static const char __pyx_k_not[] = "not {}";
static const char __pyx_k_out[] = "out";
static const char __pyx_k_pos[] = "pos";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_attr[] = "attr";
static const char __pyx_k_cell[] = "cell";
static const char __pyx_k_char[] = "char";
static const char __pyx_k_edge[] = "edge";
static const char __pyx_k_fget[] = "fget";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_flip[] = "flip";
static const char __pyx_k_func[] = "func";
static const char __pyx_k_info[] = "info";
static const char __pyx_k_lock[] = "_lock";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_move[] = "move";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_ones[] = "ones";
static const char __pyx_k_pack[] = "pack";
static const char __pyx_k_plot[] = "plot";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_solf[] = "solf";
static const char __pyx_k_sort[] = "sort";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_vert[] = "vert";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_ascii[] = "ascii";
static const char __pyx_k_cells[] = "cells";
static const char __pyx_k_clear[] = "clear";
static const char __pyx_k_count[] = "count";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_edges[] = "edges";
static const char __pyx_k_empty[] = "empty";
static const char __pyx_k_facet[] = "facet";
static const char __pyx_k_float[] = "float";
static const char __pyx_k_iinfo[] = "iinfo";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_int32[] = "int32";
static const char __pyx_k_int64[] = "int64";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_point[] = "point";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_start[] = "start";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_xstop[] = "xstop";
static const char __pyx_k_zeros[] = "zeros";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_arange[] = "arange";
static const char __pyx_k_astype[] = "astype";
static const char __pyx_k_center[] = "center";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_finite[] = "finite";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_insert[] = "insert";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_locked[] = "_locked";
static const char __pyx_k_mirror[] = "mirror";
static const char __pyx_k_plot3D[] = "plot3D";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_remove[] = "remove";
static const char __pyx_k_resize[] = "resize";
static const char __pyx_k_struct[] = "struct";
static const char __pyx_k_uint32[] = "uint32";
static const char __pyx_k_uint64[] = "uint64";
static const char __pyx_k_unlock[] = "_unlock";
static const char __pyx_k_unpack[] = "unpack";
static const char __pyx_k_vertex[] = "vertex";
static const char __pyx_k_xstart[] = "xstart";
static const char __pyx_k_all_end[] = "all_end";
static const char __pyx_k_cgal4py[] = "cgal4py";
static const char __pyx_k_float64[] = "float64";
static const char __pyx_k_idx_inf[] = "idx_inf";
static const char __pyx_k_reshape[] = "reshape";
static const char __pyx_k_tobytes[] = "tobytes";
static const char __pyx_k_vertex1[] = "vertex1";
static const char __pyx_k_vertex2[] = "vertex2";
static const char __pyx_k_calcsize[] = "calcsize";
static const char __pyx_k_encoding[] = "encoding";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_is_valid[] = "is_valid";
static const char __pyx_k_max_info[] = "max_info";
static const char __pyx_k_periodic[] = "periodic";
static const char __pyx_k_property[] = "property";
static const char __pyx_k_refcheck[] = "refcheck";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_vertices[] = "vertices";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_all_begin[] = "all_begin";
static const char __pyx_k_from_cell[] = "from_cell";
static const char __pyx_k_from_file[] = "from_file";
static const char __pyx_k_increment[] = "increment";
static const char __pyx_k_left_edge[] = "left_edge";
static const char __pyx_k_neighbors[] = "neighbors";
static const char __pyx_k_num_cells[] = "num_cells";
static const char __pyx_k_num_edges[] = "num_edges";
static const char __pyx_k_num_verts[] = "num_verts";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_serialize[] = "serialize";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_frombuffer[] = "frombuffer";
static const char __pyx_k_left_edges[] = "left_edges";
static const char __pyx_k_num_facets[] = "num_facets";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_right_edge[] = "right_edge";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_deserialize[] = "deserialize";
static const char __pyx_k_from_serial[] = "from_serial";
static const char __pyx_k_is_infinite[] = "is_infinite";
static const char __pyx_k_right_edges[] = "right_edges";
static const char __pyx_k_set_updated[] = "_set_updated";
static const char __pyx_k_update_tess[] = "_update_tess";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_mirror_index[] = "mirror_index";
static const char __pyx_k_return_index[] = "return_index";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_wrapped_fget[] = "wrapped_fget";
static const char __pyx_k_wrapped_func[] = "wrapped_func";
static const char __pyx_k_StopIteration[] = "StopIteration";
static const char __pyx_k_all_cells_end[] = "all_cells_end";
static const char __pyx_k_all_edges_end[] = "all_edges_end";
static const char __pyx_k_all_verts_end[] = "all_verts_end";
static const char __pyx_k_mirror_vertex[] = "mirror_vertex";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_Delaunay2_cell[] = "Delaunay2_cell[{},{},{},{}]";
static const char __pyx_k_Delaunay3_edge[] = "Delaunay3_edge[{},{}]";
static const char __pyx_k_all_facets_end[] = "all_facets_end";
static const char __pyx_k_flip_flippable[] = "flip_flippable";
static const char __pyx_k_read_from_file[] = "read_from_file";
static const char __pyx_k_update_to_tess[] = "_update_to_tess";
static const char __pyx_k_Delaunay3_facet[] = "Delaunay3_facet[{},{},{}]";
static const char __pyx_k_all_cells_begin[] = "all_cells_begin";
static const char __pyx_k_all_edges_begin[] = "all_edges_begin";
static const char __pyx_k_all_verts_begin[] = "all_verts_begin";
static const char __pyx_k_infinite_vertex[] = "infinite_vertex";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_PY_MAJOR_VERSION[] = "PY_MAJOR_VERSION";
static const char __pyx_k_all_facets_begin[] = "all_facets_begin";
static const char __pyx_k_num_finite_cells[] = "num_finite_cells";
static const char __pyx_k_num_finite_edges[] = "num_finite_edges";
static const char __pyx_k_num_finite_verts[] = "num_finite_verts";
static const char __pyx_k_num_finite_facets[] = "num_finite_facets";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_dependent_property[] = "_dependent_property";
static const char __pyx_k_from_serial_buffer[] = "from_serial_buffer";
static const char __pyx_k_num_infinite_cells[] = "num_infinite_cells";
static const char __pyx_k_num_infinite_edges[] = "num_infinite_edges";
static const char __pyx_k_num_infinite_verts[] = "num_infinite_verts";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_num_infinite_facets[] = "num_infinite_facets";
static const char __pyx_k_move_if_no_collision[] = "move_if_no_collision";
static const char __pyx_k_deserialize_with_info[] = "deserialize_with_info";
static const char __pyx_k_deserialize_from_buffer[] = "deserialize_from_buffer";
static const char __pyx_k_cache_to_clear_on_update[] = "_cache_to_clear_on_update";
static const char __pyx_k_serialize_info2idx_int32[] = "_serialize_info2idx_int32";
static const char __pyx_k_serialize_info2idx_int64[] = "_serialize_info2idx_int64";
static const char __pyx_k_serialize_info2idx_uint32[] = "_serialize_info2idx_uint32";
static const char __pyx_k_serialize_info2idx_uint64[] = "_serialize_info2idx_uint64";
static const char __pyx_k_cgal4py_delaunay_delaunay3[] = "cgal4py.delaunay.delaunay3";
static const char __pyx_k_idx_dtype_is_not_supported[] = "idx.dtype = {} is not supported.";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_cgal4py_delaunay_delaunay3_pyx[] = "cgal4py/delaunay/delaunay3.pyx";
static const char __pyx_k_delaunay3_pyx_Wrapper_for_CGAL[] = "\ndelaunay3.pyx\n\nWrapper for CGAL 3D Delaunay Triangulation\n";
static const char __pyx_k_Delaunay3_vertex_at_7_2e_7_2e_7[] = "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]";
static const char __pyx_k_Delaunay3_vertex_vector_indices[] = "Delaunay3_vertex_vector indices must be itegers, ";
static const char __pyx_k_Value_of_not_expected_from_CGAL[] = "Value of {} not expected from CGAL locate.";
static const char __pyx_k_dependent_property_locals_wrapp[] = "_dependent_property.<locals>.wrapped_fget";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_update_to_tess_locals_wrapped_f[] = "_update_to_tess.<locals>.wrapped_func";
static const char __pyx_k_Cannot_get_dependent_property_wh[] = "Cannot get dependent property '{}' while triangulation is locked.";
static const char __pyx_k_Delaunay3_cell_vector_indices_mu[] = "Delaunay3_cell_vector indices must be itegers, ";
static const char __pyx_k_Delaunay3_edge_vector_indices_mu[] = "Delaunay3_edge_vector indices must be itegers, ";
static const char __pyx_k_Delaunay3_facet_vector_indices_m[] = "Delaunay3_facet_vector indices must be itegers, ";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_Point_is_outside_the_affine_hull[] = "Point {} is outside the affine hull.";
static const char __pyx_k_Point_is_outside_the_convex_hull[] = "Point {} is outside the convex hull.";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_self_T_self_v_cannot_be_converte[] = "self.T,self.v cannot be converted to a Python object for pickling";
static const char __pyx_k_self_T_self_x_cannot_be_converte[] = "self.T,self.x cannot be converted to a Python object for pickling";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_kp_s_Cannot_get_dependent_property_wh;
static PyObject *__pyx_kp_s_Delaunay2_cell;
static PyObject *__pyx_kp_s_Delaunay3_cell_vector_indices_mu;
static PyObject *__pyx_kp_s_Delaunay3_edge;
static PyObject *__pyx_kp_s_Delaunay3_edge_vector_indices_mu;
static PyObject *__pyx_kp_s_Delaunay3_facet;
static PyObject *__pyx_kp_s_Delaunay3_facet_vector_indices_m;
static PyObject *__pyx_kp_s_Delaunay3_vertex_at_7_2e_7_2e_7;
static PyObject *__pyx_kp_s_Delaunay3_vertex_vector_indices;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_PY_MAJOR_VERSION;
static PyObject *__pyx_kp_s_Point_is_outside_the_affine_hull;
static PyObject *__pyx_kp_s_Point_is_outside_the_convex_hull;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_StopIteration;
static PyObject *__pyx_n_s_T;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_s_Value_of_not_expected_from_CGAL;
static PyObject *__pyx_n_s__59;
static PyObject *__pyx_n_s_all_begin;
static PyObject *__pyx_n_s_all_cells_begin;
static PyObject *__pyx_n_s_all_cells_end;
static PyObject *__pyx_n_s_all_edges_begin;
static PyObject *__pyx_n_s_all_edges_end;
static PyObject *__pyx_n_s_all_end;
static PyObject *__pyx_n_s_all_facets_begin;
static PyObject *__pyx_n_s_all_facets_end;
static PyObject *__pyx_n_s_all_verts_begin;
static PyObject *__pyx_n_s_all_verts_end;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_arange;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_ascii;
static PyObject *__pyx_n_s_astype;
static PyObject *__pyx_n_s_attr;
static PyObject *__pyx_n_s_buf;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_s_c1;
static PyObject *__pyx_n_s_c2;
static PyObject *__pyx_n_s_c3;
static PyObject *__pyx_n_s_c4;
static PyObject *__pyx_n_s_cache_to_clear_on_update;
static PyObject *__pyx_n_s_calcsize;
static PyObject *__pyx_n_s_cc;
static PyObject *__pyx_n_s_cell;
static PyObject *__pyx_n_s_cells;
static PyObject *__pyx_n_s_center;
static PyObject *__pyx_n_s_cgal4py;
static PyObject *__pyx_n_s_cgal4py_delaunay_delaunay3;
static PyObject *__pyx_kp_s_cgal4py_delaunay_delaunay3_pyx;
static PyObject *__pyx_n_s_char;
static PyObject *__pyx_n_s_clear;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_count;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_dependent_property;
static PyObject *__pyx_n_s_dependent_property_locals_wrapp;
static PyObject *__pyx_n_s_deserialize;
static PyObject *__pyx_n_s_deserialize_from_buffer;
static PyObject *__pyx_n_s_deserialize_with_info;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_edge;
static PyObject *__pyx_n_s_edges;
static PyObject *__pyx_n_s_empty;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_encoding;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_facet;
static PyObject *__pyx_n_s_fget;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_finite;
static PyObject *__pyx_n_s_flip;
static PyObject *__pyx_n_s_flip_flippable;
static PyObject *__pyx_n_s_float;
static PyObject *__pyx_n_s_float64;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_from_cell;
static PyObject *__pyx_n_s_from_file;
static PyObject *__pyx_n_s_from_serial;
static PyObject *__pyx_n_s_from_serial_buffer;
static PyObject *__pyx_n_s_frombuffer;
static PyObject *__pyx_n_s_func;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_i1;
static PyObject *__pyx_n_s_i2;
static PyObject *__pyx_n_s_i3;
static PyObject *__pyx_n_s_i4;
static PyObject *__pyx_n_s_idx;
static PyObject *__pyx_kp_s_idx_dtype_is_not_supported;
static PyObject *__pyx_n_s_idx_inf;
static PyObject *__pyx_n_s_iinfo;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_increment;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_inf;
static PyObject *__pyx_n_s_infinite_vertex;
static PyObject *__pyx_n_s_info;
static PyObject *__pyx_n_s_insert;
static PyObject *__pyx_n_s_int32;
static PyObject *__pyx_n_s_int64;
static PyObject *__pyx_n_s_is_infinite;
static PyObject *__pyx_n_s_is_valid;
static PyObject *__pyx_n_s_j;
static PyObject *__pyx_n_s_kwargs;
static PyObject *__pyx_n_s_left_edge;
static PyObject *__pyx_n_s_left_edges;
static PyObject *__pyx_n_s_lock;
static PyObject *__pyx_n_s_locked;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_max;
static PyObject *__pyx_n_s_max_info;
static PyObject *__pyx_n_s_mirror;
static PyObject *__pyx_n_s_mirror_index;
static PyObject *__pyx_n_s_mirror_vertex;
static PyObject *__pyx_n_s_move;
static PyObject *__pyx_n_s_move_if_no_collision;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_neighbors;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_kp_s_not;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_num_cells;
static PyObject *__pyx_n_s_num_edges;
static PyObject *__pyx_n_s_num_facets;
static PyObject *__pyx_n_s_num_finite_cells;
static PyObject *__pyx_n_s_num_finite_edges;
static PyObject *__pyx_n_s_num_finite_facets;
static PyObject *__pyx_n_s_num_finite_verts;
static PyObject *__pyx_n_s_num_infinite_cells;
static PyObject *__pyx_n_s_num_infinite_edges;
static PyObject *__pyx_n_s_num_infinite_facets;
static PyObject *__pyx_n_s_num_infinite_verts;
static PyObject *__pyx_n_s_num_verts;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_ones;
static PyObject *__pyx_n_s_out;
static PyObject *__pyx_n_s_pack;
static PyObject *__pyx_n_s_periodic;
static PyObject *__pyx_n_s_plot;
static PyObject *__pyx_n_s_plot3D;
static PyObject *__pyx_n_s_point;
static PyObject *__pyx_n_s_pos;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_property;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_read_from_file;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_refcheck;
static PyObject *__pyx_n_s_remove;
static PyObject *__pyx_n_s_reshape;
static PyObject *__pyx_n_s_resize;
static PyObject *__pyx_n_s_return_index;
static PyObject *__pyx_n_s_right_edge;
static PyObject *__pyx_n_s_right_edges;
static PyObject *__pyx_kp_s_self_T_self_v_cannot_be_converte;
static PyObject *__pyx_kp_s_self_T_self_x_cannot_be_converte;
static PyObject *__pyx_n_s_serialize;
static PyObject *__pyx_n_s_serialize_info2idx_int32;
static PyObject *__pyx_n_s_serialize_info2idx_int64;
static PyObject *__pyx_n_s_serialize_info2idx_uint32;
static PyObject *__pyx_n_s_serialize_info2idx_uint64;
static PyObject *__pyx_n_s_set_updated;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_solf;
static PyObject *__pyx_n_s_sort;
static PyObject *__pyx_n_s_start;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_struct;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_tobytes;
static PyObject *__pyx_n_s_uint32;
static PyObject *__pyx_n_s_uint64;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_unlock;
static PyObject *__pyx_n_s_unpack;
static PyObject *__pyx_n_s_update_tess;
static PyObject *__pyx_n_s_update_to_tess;
static PyObject *__pyx_n_s_update_to_tess_locals_wrapped_f;
static PyObject *__pyx_n_s_v;
static PyObject *__pyx_n_s_v1;
static PyObject *__pyx_n_s_v2;
static PyObject *__pyx_n_s_v3;
static PyObject *__pyx_n_s_v4;
static PyObject *__pyx_n_s_vert;
static PyObject *__pyx_n_s_vertex;
static PyObject *__pyx_n_s_vertex1;
static PyObject *__pyx_n_s_vertex2;
static PyObject *__pyx_n_s_vertices;
static PyObject *__pyx_n_s_wrapped_fget;
static PyObject *__pyx_n_s_wrapped_func;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_xstart;
static PyObject *__pyx_n_s_xstop;
static PyObject *__pyx_n_s_zeros;
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_is_valid(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex___repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_6set_point(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, PyArrayObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_8set_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5point___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5index___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11dual_volume___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_10incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_12incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_14incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_16incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_vert); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6vertex___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_from_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i, int __pyx_v_j); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_2__repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8is_Gabriel(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_10is_equivalent(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_solf); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_12vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex1___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex2___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind1___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind2___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6center___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8midpoint___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6length___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_14incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_16incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_18incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_20incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_22side(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, PyArrayObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_24flip(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_26flip_flippable(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_28__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_30__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4edge___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_from_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_2__repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_8is_Gabriel(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_10is_equivalent(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_solf); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_12vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_14edge(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6center___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4area___get__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3ind___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6mirror___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_16incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_18incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_20incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_22incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_24side(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, PyArrayObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_26flip(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_28flip_flippable(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_30__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_32__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_facet); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5facet___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell___repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6mirror_index(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_8mirror_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_10facet(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_14has_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v, PyBoolObject *__pyx_v_return_index); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_16ind_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_18neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_20has_neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_v, PyBoolObject *__pyx_v_return_index); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_22ind_neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_24set_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_26set_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v4); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_28reset_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_30set_neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_n); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_32set_neighbors(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c4); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_34reset_neighbors(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6center___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12circumcenter___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9min_angle___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_36incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_38incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_40incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_42incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_44side(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, PyArrayObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_46side_of_sphere(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, PyArrayObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_48__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_50__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_cell); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_solf, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_2_lock(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_4_unlock(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_6_set_updated(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_8_update_tess(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_wrapped_func(PyObject *__pyx_self, PyObject *__pyx_v_solf, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10_update_to_tess(PyObject *__pyx_v_func); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_wrapped_fget(PyObject *__pyx_self, PyObject *__pyx_v_solf); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12_dependent_property(PyObject *__pyx_v_fget); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14is_valid(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16is_equivalent(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_solf); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_18from_file(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_fname); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_20from_serial(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_22from_serial_buffer(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_24serialize_to_buffer(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_buf, PyObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_26deserialize_from_buffer(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_buf, PyObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_28write_to_file(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_fname); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_30read_from_file(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_fname); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_32serialize(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyBoolObject *__pyx_v_sort); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_34_serialize_info2idx_int32(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_36_serialize_info2idx_uint32(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_38_serialize_info2idx_int64(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_40_serialize_info2idx_uint64(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_42serialize_info2idx(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_max_info, PyObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_44deserialize(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_cells, PyArrayObject *__pyx_v_neighbors, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_46deserialize_with_info(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_info, PyArrayObject *__pyx_v_cells, PyArrayObject *__pyx_v_neighbors, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_48plot(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_50num_finite_verts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_52num_finite_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_54num_finite_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_56num_finite_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_58num_infinite_verts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_60num_infinite_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_62num_infinite_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_64num_infinite_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_66num_verts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_68num_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_70num_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_72num_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_74infinite_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_76insert(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pts); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_78clear(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_80vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_82edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_84voronoi_volumes(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_86minimum_angles(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_88remove(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_90move(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x, PyArrayObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_92move_if_no_collision(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x, PyArrayObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_94flip(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_96flip_flippable(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_98get_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t __pyx_v_index); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_100locate(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_verts_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_verts_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_verts___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_verts___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_edges_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_edges_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_edges___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_edges___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16all_facets_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14all_facets_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10all_facets___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13finite_facets___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_cells_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_cells_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_cells___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_cells___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_102is_edge(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i1, int __pyx_v_i2); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_104is_facet(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i1, int __pyx_v_i2, int __pyx_v_i3); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_106is_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v4, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i1, int __pyx_v_i2, int __pyx_v_i3, int __pyx_v_i4); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_108nearest_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_110mirror_facet(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_112mirror_index(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_114mirror_vertex(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_116get_boundary_of_conflicts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_118get_conflicts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_120get_conflicts_and_boundary(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_122outgoing_points(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_left_edges, PyArrayObject *__pyx_v_right_edges); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_124boundary_points(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_left_edge, PyArrayObject *__pyx_v_right_edge, PyBoolObject *__pyx_v_periodic); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1n___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_2__set__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_4__del__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_locked___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_2__set__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_4__del__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_126__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_128__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyString_Type_encode = {0, &__pyx_n_s_encode, 0, 0, 0};
static PyObject *__pyx_float_2_0;
static PyObject *__pyx_float_3_0;
static PyObject *__pyx_float_4_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_k__64;
static struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_k__65;
static struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_k__66;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_slice__3;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__55;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__67;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__73;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_codeobj__58;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__78;
static PyObject *__pyx_codeobj__80;
static PyObject *__pyx_codeobj__82;
static PyObject *__pyx_codeobj__84;
static PyObject *__pyx_codeobj__86;
/* Late includes */

/* "cgal4py/delaunay/delaunay3.pyx":31
 * ctypedef np.uint32_t np_info_t
 * 
 * def is_valid():             # <<<<<<<<<<<<<<
 *     if (VALID == 1):
 *         return True
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_1is_valid(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_1is_valid = {"is_valid", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_1is_valid, METH_NOARGS, 0};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_1is_valid(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_valid (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_is_valid(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_is_valid(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("is_valid", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":32
 * 
 * def is_valid():
 *     if (VALID == 1):             # <<<<<<<<<<<<<<
 *         return True
 *     else:
 */
  __pyx_t_1 = ((VALID == 1) != 0);
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":33
 * def is_valid():
 *     if (VALID == 1):
 *         return True             # <<<<<<<<<<<<<<
 *     else:
 *         return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":32
 * 
 * def is_valid():
 *     if (VALID == 1):             # <<<<<<<<<<<<<<
 *         return True
 *     else:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":35
 *         return True
 *     else:
 *         return False             # <<<<<<<<<<<<<<
 * 
 * cdef class Delaunay3_vertex:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":31
 * ctypedef np.uint32_t np_info_t
 * 
 * def is_valid():             # <<<<<<<<<<<<<<
 *     if (VALID == 1):
 *         return True
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":50
 *     cdef Delaunay_with_info_3[info_t].Vertex x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Vertex x):
 *         r"""Assign C++ objects to attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_x) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":61
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.x = x
 * 
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":62
 *         """
 *         self.T = T
 *         self.x = x             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_v_self->x = __pyx_v_x;

  /* "cgal4py/delaunay/delaunay3.pyx":50
 *     cdef Delaunay_with_info_3[info_t].Vertex x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Vertex x):
 *         r"""Assign C++ objects to attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":64
 *         self.x = x
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(
 *             self.index, *list(self.point))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_1__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_1__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex___repr__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex___repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":65
 * 
 *     def __repr__(self):
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(             # <<<<<<<<<<<<<<
 *             self.index, *list(self.point))
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Delaunay3_vertex_at_7_2e_7_2e_7, __pyx_n_s_format); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":66
 *     def __repr__(self):
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(
 *             self.index, *list(self.point))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":65
 * 
 *     def __repr__(self):
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(             # <<<<<<<<<<<<<<
 *             self.index, *list(self.point))
 * 
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":66
 *     def __repr__(self):
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(
 *             self.index, *list(self.point))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PySequence_List(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":65
 * 
 *     def __repr__(self):
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(             # <<<<<<<<<<<<<<
 *             self.index, *list(self.point))
 * 
 */
  __pyx_t_2 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":64
 *         self.x = x
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay3_vertex[{} at {:+7.2e},{:+7.2e},{:+7.2e}]".format(
 *             self.index, *list(self.point))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":68
 *             self.index, *list(self.point))
 * 
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "solf", 0))) __PYX_ERR(0, 68, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_2__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":69
 * 
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":70
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":69
 * 
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":71
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":72
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":71
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":74
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 74, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":68
 *             self.index, *list(self.point))
 * 
 *     def __richcmp__(Delaunay3_vertex self, Delaunay3_vertex solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":76
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the vertex is the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4is_infinite[] = "Determine if the vertex is the infinite vertex.\n        \n        Returns:\n            bool: True if the vertex is the infinite vertex, False otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":83
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def set_point(self, np.ndarray[np.float64_t, ndim=1] pos):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":76
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the vertex is the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":85
 *         return self.T.is_infinite(self.x)
 * 
 *     def set_point(self, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Set this vertex's corrdinates.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_7set_point(PyObject *__pyx_v_self, PyObject *__pyx_v_pos); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_6set_point[] = "Set this vertex's corrdinates.\n\n        Args:\n            pos (:obj:`ndarray` of float64): new x,y,z coordinates for vertex.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_7set_point(PyObject *__pyx_v_self, PyObject *__pyx_v_pos) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_point (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 85, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_6set_point(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self), ((PyArrayObject *)__pyx_v_pos));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_6set_point(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, PyArrayObject *__pyx_v_pos) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("set_point", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 85, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":92
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         assert(len(pos) == 3)
 *         self.x.set_point(&pos[0])
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":93
 *         """
 *         self.T.updated = <cbool>True
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         self.x.set_point(&pos[0])
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 93, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 93, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":94
 *         self.T.updated = <cbool>True
 *         assert(len(pos) == 3)
 *         self.x.set_point(&pos[0])             # <<<<<<<<<<<<<<
 * 
 *     def set_cell(self, Delaunay3_cell c):
 */
  __pyx_t_2 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_pybuffernd_pos.diminfo[0].shape;
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_2 >= __pyx_pybuffernd_pos.diminfo[0].shape)) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(0, 94, __pyx_L1_error)
  }
  __pyx_v_self->x.set_point((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_pos.diminfo[0].strides))));

  /* "cgal4py/delaunay/delaunay3.pyx":85
 *         return self.T.is_infinite(self.x)
 * 
 *     def set_point(self, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Set this vertex's corrdinates.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.set_point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":96
 *         self.x.set_point(&pos[0])
 * 
 *     def set_cell(self, Delaunay3_cell c):             # <<<<<<<<<<<<<<
 *         r"""Set the designated cell for this vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_9set_cell(PyObject *__pyx_v_self, PyObject *__pyx_v_c); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_8set_cell[] = "Set the designated cell for this vertex.\n\n        Args:\n            c (Delaunay3_cell): Cell that should be set as the designated cell.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_9set_cell(PyObject *__pyx_v_self, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cell (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c", 0))) __PYX_ERR(0, 96, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_8set_cell(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_c));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_8set_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cell", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":103
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_cell(c.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":104
 *         """
 *         self.T.updated = <cbool>True
 *         self.x.set_cell(c.x)             # <<<<<<<<<<<<<<
 * 
 *     property point:
 */
  __pyx_v_self->x.set_cell(__pyx_v_c->x);

  /* "cgal4py/delaunay/delaunay3.pyx":96
 *         self.x.set_point(&pos[0])
 * 
 *     def set_cell(self, Delaunay3_cell c):             # <<<<<<<<<<<<<<
 *         r"""Set the designated cell for this vertex.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":109
 *         r""":obj:`ndarray` of :obj:`float64`: The cartesian (x,y,z) coordinates
 *         of the vertex."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             if self.is_infinite():
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5point_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5point_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5point___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5point___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  PyArrayObject *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_out;
  __Pyx_Buffer __pyx_pybuffer_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyArrayObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_pybuffer_out.pybuffer.buf = NULL;
  __pyx_pybuffer_out.refcount = 0;
  __pyx_pybuffernd_out.data = NULL;
  __pyx_pybuffernd_out.rcbuffer = &__pyx_pybuffer_out;

  /* "cgal4py/delaunay/delaunay3.pyx":110
 *         of the vertex."""
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 out[:] = np.float('inf')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 110, __pyx_L1_error)
  __pyx_t_3 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_t_3, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_out = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_out.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 110, __pyx_L1_error)
    } else {__pyx_pybuffernd_out.diminfo[0].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_out.diminfo[0].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_3 = 0;
  __pyx_v_out = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":111
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 out[:] = np.float('inf')
 *             else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "cgal4py/delaunay/delaunay3.pyx":112
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             if self.is_infinite():
 *                 out[:] = np.float('inf')             # <<<<<<<<<<<<<<
 *             else:
 *                 self.x.point(&out[0])
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_out), __pyx_slice__3, __pyx_t_1) < 0)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":111
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 out[:] = np.float('inf')
 *             else:
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":114
 *                 out[:] = np.float('inf')
 *             else:
 *                 self.x.point(&out[0])             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  /*else*/ {
    __pyx_t_6 = 0;
    __pyx_t_7 = -1;
    if (__pyx_t_6 < 0) {
      __pyx_t_6 += __pyx_pybuffernd_out.diminfo[0].shape;
      if (unlikely(__pyx_t_6 < 0)) __pyx_t_7 = 0;
    } else if (unlikely(__pyx_t_6 >= __pyx_pybuffernd_out.diminfo[0].shape)) __pyx_t_7 = 0;
    if (unlikely(__pyx_t_7 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_7);
      __PYX_ERR(0, 114, __pyx_L1_error)
    }
    __pyx_v_self->x.point((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_out.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_out.diminfo[0].strides))));
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":115
 *             else:
 *                 self.x.point(&out[0])
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property index:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":109
 *         r""":obj:`ndarray` of :obj:`float64`: The cartesian (x,y,z) coordinates
 *         of the vertex."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             if self.is_infinite():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.point.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":119
 *     property index:
 *         r"""info_t: The index of the vertex point in the input array."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef info_t out
 *             if self.is_infinite():
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5index_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5index_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5index___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5index___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_t_6;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":121
 *         def __get__(self):
 *             cdef info_t out
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 out = <info_t>np.iinfo(np_info).max
 *             else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 121, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 121, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":122
 *             cdef info_t out
 *             if self.is_infinite():
 *                 out = <info_t>np.iinfo(np_info).max             # <<<<<<<<<<<<<<
 *             else:
 *                 out = self.x.info()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_iinfo); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_2) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[2] = {__pyx_t_2, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[2] = {__pyx_t_2, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
        __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
        __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_max); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyInt_As_uint32_t(__pyx_t_3); if (unlikely((__pyx_t_6 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_out = ((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_t_6);

    /* "cgal4py/delaunay/delaunay3.pyx":121
 *         def __get__(self):
 *             cdef info_t out
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 out = <info_t>np.iinfo(np_info).max
 *             else:
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":124
 *                 out = <info_t>np.iinfo(np_info).max
 *             else:
 *                 out = self.x.info()             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  /*else*/ {
    __pyx_v_out = __pyx_v_self->x.info();
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":125
 *             else:
 *                 out = self.x.info()
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property dual_volume:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyInt_From_uint32_t(__pyx_v_out); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":119
 *     property index:
 *         r"""info_t: The index of the vertex point in the input array."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef info_t out
 *             if self.is_infinite():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.index.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":130
 *         r"""float64: The volume of the dual Voronoi cell. If the volume is
 *         infinite, -1.0 is returned."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.float64_t out = self.T.dual_volume(self.x)
 *             return out
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11dual_volume_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11dual_volume_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11dual_volume___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11dual_volume___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  __pyx_t_5numpy_float64_t __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":131
 *         infinite, -1.0 is returned."""
 *         def __get__(self):
 *             cdef np.float64_t out = self.T.dual_volume(self.x)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  __pyx_v_out = __pyx_v_self->T->dual_volume(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":132
 *         def __get__(self):
 *             cdef np.float64_t out = self.T.dual_volume(self.x)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property cell:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":130
 *         r"""float64: The volume of the dual Voronoi cell. If the volume is
 *         infinite, -1.0 is returned."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.float64_t out = self.T.dual_volume(self.x)
 *             return out
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.dual_volume.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":136
 *     property cell:
 *         r"""Delaunay3_cell: Designated cell for this vertex."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4cell_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4cell_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4cell___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell __pyx_v_c;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":138
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)
 */
  __pyx_v_c = __pyx_v_self->x.cell();

  /* "cgal4py/delaunay/delaunay3.pyx":139
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 *             cdef Delaunay3_cell out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, c)
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":140
 *             c = self.x.cell()
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_c);

  /* "cgal4py/delaunay/delaunay3.pyx":141
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_vertices(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":136
 *     property cell:
 *         r"""Delaunay3_cell: Designated cell for this vertex."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.cell.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":143
 *             return out
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are adjacent to this vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_10incident_vertices[] = "Find vertices that are adjacent to this vertex.\n\n        Returns:\n            Delaunay3_vertex_vector: Iterator over vertices incident to this \n                vertex.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_10incident_vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_10incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_vertices", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":152
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_vertices(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":153
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":154
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":155
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":143
 *             return out
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are adjacent to this vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.incident_vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":157
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_13incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_12incident_edges[] = "Find edges that are incident to this vertex.\n\n        Returns:\n            Delaunay3_edge_vector: Iterator over edges incident to this vertex.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_13incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_12incident_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_12incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":165
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_edges(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":166
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":167
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":168
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":157
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.incident_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":170
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_15incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_14incident_facets[] = "Find facets that are incident to this vertex.\n\n        Returns:\n            Delaunay3_facet_vector: Iterator over facets incident to this vertex.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_15incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_14incident_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_14incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":178
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_facets(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":179
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":180
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":181
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":170
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.incident_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":183
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_17incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_16incident_cells[] = "Find cells that are incident to this vertex.\n\n        Returns:\n            Delaunay3_cell_vector: Iterator over cells incident to this vertex.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_17incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_16incident_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_16incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":191
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_cells(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":192
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":193
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":194
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":183
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.incident_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_18__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_20__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":217
 *     cdef Delaunay_with_info_3[info_t].All_verts_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str vert = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if vert == 'all_begin':
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T = 0;
  PyObject *__pyx_v_vert = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_vert,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject*)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_vert);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 217, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_T = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)values[0]);
    __pyx_v_vert = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 217, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_T), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, 1, "T", 0))) __PYX_ERR(0, 217, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vert), (&PyString_Type), 1, "vert", 1))) __PYX_ERR(0, 217, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self), __pyx_v_T, __pyx_v_vert);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_vert) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":218
 * 
 *     def __cinit__(self, Delaunay3 T, str vert = None):
 *         self.T = T.T             # <<<<<<<<<<<<<<
 *         if vert == 'all_begin':
 *             self.x = self.T.all_verts_begin()
 */
  __pyx_t_1 = __pyx_v_T->T;
  __pyx_v_self->T = __pyx_t_1;

  /* "cgal4py/delaunay/delaunay3.pyx":219
 *     def __cinit__(self, Delaunay3 T, str vert = None):
 *         self.T = T.T
 *         if vert == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_verts_begin()
 *         elif vert == 'all_end':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_vert, __pyx_n_s_all_begin, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 219, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":220
 *         self.T = T.T
 *         if vert == 'all_begin':
 *             self.x = self.T.all_verts_begin()             # <<<<<<<<<<<<<<
 *         elif vert == 'all_end':
 *             self.x = self.T.all_verts_end()
 */
    __pyx_v_self->x = __pyx_v_self->T->all_verts_begin();

    /* "cgal4py/delaunay/delaunay3.pyx":219
 *     def __cinit__(self, Delaunay3 T, str vert = None):
 *         self.T = T.T
 *         if vert == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_verts_begin()
 *         elif vert == 'all_end':
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":221
 *         if vert == 'all_begin':
 *             self.x = self.T.all_verts_begin()
 *         elif vert == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_verts_end()
 * 
 */
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_v_vert, __pyx_n_s_all_end, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 221, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "cgal4py/delaunay/delaunay3.pyx":222
 *             self.x = self.T.all_verts_begin()
 *         elif vert == 'all_end':
 *             self.x = self.T.all_verts_end()             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_vertex_iter self, Delaunay3_vertex_iter solf,
 */
    __pyx_v_self->x = __pyx_v_self->T->all_verts_end();

    /* "cgal4py/delaunay/delaunay3.pyx":221
 *         if vert == 'all_begin':
 *             self.x = self.T.all_verts_begin()
 *         elif vert == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_verts_end()
 * 
 */
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":217
 *     cdef Delaunay_with_info_3[info_t].All_verts_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str vert = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if vert == 'all_begin':
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":224
 *             self.x = self.T.all_verts_end()
 * 
 *     def __richcmp__(Delaunay3_vertex_iter self, Delaunay3_vertex_iter solf,             # <<<<<<<<<<<<<<
 *                     int op):
 *         if (op == 2):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, 1, "solf", 0))) __PYX_ERR(0, 224, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_2__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":226
 *     def __richcmp__(Delaunay3_vertex_iter self, Delaunay3_vertex_iter solf,
 *                     int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":227
 *                     int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 227, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":226
 *     def __richcmp__(Delaunay3_vertex_iter self, Delaunay3_vertex_iter solf,
 *                     int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":228
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":229
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 229, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":228
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":231
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 231, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":224
 *             self.x = self.T.all_verts_end()
 * 
 *     def __richcmp__(Delaunay3_vertex_iter self, Delaunay3_vertex_iter solf,             # <<<<<<<<<<<<<<
 *                     int op):
 *         if (op == 2):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":233
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the vertex is the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_4is_infinite[] = "Determine if the vertex is the infinite vertex.\n        \n        Returns:\n            bool: True if the vertex is the infinite vertex, False otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_4is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":240
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def increment(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":233
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the vertex is the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":242
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next vertex in the triangulation."""
 *         preincrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6increment[] = "Advance to the next vertex in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6increment(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":244
 *     def increment(self):
 *         r"""Advance to the next vertex in the triangulation."""
 *         preincrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def decrement(self):
 */
  (void)((++__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":242
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next vertex in the triangulation."""
 *         preincrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":246
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous vertex in the triangulation."""
 *         predecrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_8decrement[] = "Advance to the previous vertex in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_8decrement(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":248
 *     def decrement(self):
 *         r"""Advance to the previous vertex in the triangulation."""
 *         predecrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     property vertex:
 */
  (void)((--__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":246
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous vertex in the triangulation."""
 *         predecrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":252
 *     property vertex:
 *         r"""Delaunay3_vertex: Corresponding vertex object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Vertex(self.x))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6vertex_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6vertex_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6vertex___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6vertex___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":253
 *         r"""Delaunay3_vertex: Corresponding vertex object."""
 *         def __get__(self):
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Vertex(self.x))
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":254
 *         def __get__(self):
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Vertex(self.x))             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex(__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":255
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Vertex(self.x))
 *             return out             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":252
 *     property vertex:
 *         r"""Delaunay3_vertex: Corresponding vertex object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Vertex(self.x))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.vertex.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_10__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_12__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":278
 *     cdef Delaunay3_vertex_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_vertex_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_vertex_iter xstop,
 *                   pybool finite = False):
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_xstart = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_xstop = 0;
  PyBoolObject *__pyx_v_finite = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xstart,&__pyx_n_s_xstop,&__pyx_n_s_finite,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":280
 *     def __cinit__(self, Delaunay3_vertex_iter xstart,
 *                   Delaunay3_vertex_iter xstop,
 *                   pybool finite = False):             # <<<<<<<<<<<<<<
 *         self.x = xstart
 *         self.xstop = xstop
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstart)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_finite);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 278, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xstart = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)values[0]);
    __pyx_v_xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)values[1]);
    __pyx_v_finite = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 278, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_range.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstart), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, 1, "xstart", 0))) __PYX_ERR(0, 278, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstop), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, 1, "xstop", 0))) __PYX_ERR(0, 279, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_finite), __pyx_ptype_7cpython_4bool_bool, 1, "finite", 0))) __PYX_ERR(0, 280, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)__pyx_v_self), __pyx_v_xstart, __pyx_v_xstop, __pyx_v_finite);

  /* "cgal4py/delaunay/delaunay3.pyx":278
 *     cdef Delaunay3_vertex_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_vertex_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_vertex_iter xstop,
 *                   pybool finite = False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":281
 *                   Delaunay3_vertex_iter xstop,
 *                   pybool finite = False):
 *         self.x = xstart             # <<<<<<<<<<<<<<
 *         self.xstop = xstop
 *         self.finite = finite
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GOTREF(__pyx_v_self->x);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->x));
  __pyx_v_self->x = __pyx_v_xstart;

  /* "cgal4py/delaunay/delaunay3.pyx":282
 *                   pybool finite = False):
 *         self.x = xstart
 *         self.xstop = xstop             # <<<<<<<<<<<<<<
 *         self.finite = finite
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GOTREF(__pyx_v_self->xstop);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->xstop));
  __pyx_v_self->xstop = __pyx_v_xstop;

  /* "cgal4py/delaunay/delaunay3.pyx":283
 *         self.x = xstart
 *         self.xstop = xstop
 *         self.finite = finite             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_finite));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_finite));
  __Pyx_GOTREF(__pyx_v_self->finite);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->finite));
  __pyx_v_self->finite = __pyx_v_finite;

  /* "cgal4py/delaunay/delaunay3.pyx":278
 *     cdef Delaunay3_vertex_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_vertex_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_vertex_iter xstop,
 *                   pybool finite = False):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":285
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_2__iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":286
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":285
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":288
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out
 *         if self.finite:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_5__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_5__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_4__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":290
 *     def __next__(self):
 *         cdef Delaunay3_vertex out
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_self->finite)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 290, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":291
 *         cdef Delaunay3_vertex out
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():             # <<<<<<<<<<<<<<
 *                 self.x.increment()
 *         if self.x != self.xstop:
 */
    while (1) {
      __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 291, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 291, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_3) {
      } else {
        __pyx_t_1 = __pyx_t_3;
        goto __pyx_L6_bool_binop_done;
      }
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 291, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 291, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 291, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_1 = __pyx_t_3;
      __pyx_L6_bool_binop_done:;
      if (!__pyx_t_1) break;

      /* "cgal4py/delaunay/delaunay3.pyx":292
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()             # <<<<<<<<<<<<<<
 *         if self.x != self.xstop:
 *             out = self.x.vertex
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 292, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 292, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 292, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":290
 *     def __next__(self):
 *         cdef Delaunay3_vertex out
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":293
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.vertex
 *             self.x.increment()
 */
  __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 293, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":294
 *                 self.x.increment()
 *         if self.x != self.xstop:
 *             out = self.x.vertex             # <<<<<<<<<<<<<<
 *             self.x.increment()
 *             return out
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex))))) __PYX_ERR(0, 294, __pyx_L1_error)
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":295
 *         if self.x != self.xstop:
 *             out = self.x.vertex
 *             self.x.increment()             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 295, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 295, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":296
 *             out = self.x.vertex
 *             self.x.increment()
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":293
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.vertex
 *             self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":298
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 * cdef class Delaunay3_vertex_vector:
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 298, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":288
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out
 *         if self.finite:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_range.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_range.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_range.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":317
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Vertex] v):
 *         r"""Assign C++ attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  __pyx_v_v) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":328
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.v = v
 *         self.n = v.size()
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":329
 *         """
 *         self.T = T
 *         self.v = v             # <<<<<<<<<<<<<<
 *         self.n = v.size()
 *         self.i = 0
 */
  __pyx_v_self->v = __pyx_v_v;

  /* "cgal4py/delaunay/delaunay3.pyx":330
 *         self.T = T
 *         self.v = v
 *         self.n = v.size()             # <<<<<<<<<<<<<<
 *         self.i = 0
 * 
 */
  __pyx_v_self->n = __pyx_v_v.size();

  /* "cgal4py/delaunay/delaunay3.pyx":331
 *         self.v = v
 *         self.n = v.size()
 *         self.i = 0             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_v_self->i = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":317
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Vertex] v):
 *         r"""Assign C++ attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":333
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_1__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_1__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector___iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":334
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":333
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":336
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out
 *         if self.i < self.n:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_3__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_3__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_2__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":338
 *     def __next__(self):
 *         cdef Delaunay3_vertex out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[self.i])
 */
  __pyx_t_1 = ((__pyx_v_self->i < __pyx_v_self->n) != 0);
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":339
 *         cdef Delaunay3_vertex out
 *         if self.i < self.n:
 *             out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":340
 *         if self.i < self.n:
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[self.i])             # <<<<<<<<<<<<<<
 *             self.i += 1
 *             return out
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_v_self->i]));

    /* "cgal4py/delaunay/delaunay3.pyx":341
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_v_self->i = (__pyx_v_self->i + 1);

    /* "cgal4py/delaunay/delaunay3.pyx":342
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":338
 *     def __next__(self):
 *         cdef Delaunay3_vertex out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[self.i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":344
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, i):
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 344, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":336
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out
 *         if self.i < self.n:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_vector.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":346
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out
 *         if isinstance(i, int):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_4__getitem__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self, PyObject *__pyx_v_i) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex> ::size_type __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":348
 *     def __getitem__(self, i):
 *         cdef Delaunay3_vertex out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[i])
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_i); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (likely(__pyx_t_2)) {

    /* "cgal4py/delaunay/delaunay3.pyx":349
 *         cdef Delaunay3_vertex out
 *         if isinstance(i, int):
 *             out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[i])
 *             return out
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":350
 *         if isinstance(i, int):
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[i])             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_4 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 350, __pyx_L1_error)
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_t_4]));

    /* "cgal4py/delaunay/delaunay3.pyx":351
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[i])
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Delaunay3_vertex_vector indices must be itegers, "+
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":348
 *     def __getitem__(self, i):
 *         cdef Delaunay3_vertex out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_vertex()
 *             out.assign(self.T, self.v[i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":353
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_vertex_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
  /*else*/ {

    /* "cgal4py/delaunay/delaunay3.pyx":354
 *         else:
 *             raise TypeError("Delaunay3_vertex_vector indices must be itegers, "+
 *                             "not {}".format(type(i)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_not, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)Py_TYPE(__pyx_v_i))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, ((PyObject *)Py_TYPE(__pyx_v_i)));
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":353
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_vertex_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
    __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Delaunay3_vertex_vector_indices, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 353, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":346
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out
 *         if isinstance(i, int):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_vector.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_vector.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_vertex_vector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":370
 *     cdef Delaunay_with_info_3[info_t].Edge x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Edge x):
 *         r"""Assign C++ objects to attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge __pyx_v_x) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":381
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.x = x
 * 
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":382
 *         """
 *         self.T = T
 *         self.x = x             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __pyx_v_self->x = __pyx_v_x;

  /* "cgal4py/delaunay/delaunay3.pyx":370
 *     cdef Delaunay_with_info_3[info_t].Edge x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Edge x):
 *         r"""Assign C++ objects to attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":385
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i, int j):             # <<<<<<<<<<<<<<
 *         r"""Construct an edges from a cell and indices of the two vertices
 *         in the cell that are incident to the edge.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_1from_cell(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_from_cell[] = "Construct an edges from a cell and indices of the two vertices \n        in the cell that are incident to the edge.\n\n        Args:\n            c (Delaunay3_cell): Cell \n            i (int): Index of one vertex in c, incident to the edge.\n            j (int): Index of second vertex in c, incident to the edge.\n\n        Returns:\n            Delaunay3_edge: Edge incident to c and vertices i & j of cell c.\n\n        ";
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_1from_cell = {"from_cell", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_1from_cell, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_from_cell};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_1from_cell(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  int __pyx_v_i;
  int __pyx_v_j;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_cell (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_c,&__pyx_n_s_i,&__pyx_n_s_j,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("from_cell", 1, 3, 3, 1); __PYX_ERR(0, 385, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_j)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("from_cell", 1, 3, 3, 2); __PYX_ERR(0, 385, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_cell") < 0)) __PYX_ERR(0, 385, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_c = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_i = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 385, __pyx_L3_error)
    __pyx_v_j = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_j == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 385, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_cell", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 385, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.from_cell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c", 0))) __PYX_ERR(0, 385, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_from_cell(__pyx_v_c, __pyx_v_i, __pyx_v_j);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_from_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i, int __pyx_v_j) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_out = 0;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge __pyx_v_e;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("from_cell", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":398
 * 
 *         """
 *         cdef Delaunay3_edge out = Delaunay3_edge()             # <<<<<<<<<<<<<<
 *         cdef Delaunay_with_info_3[info_t].Edge e
 *         e = Delaunay_with_info_3[info_t].Edge(c.x, i, j)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":400
 *         cdef Delaunay3_edge out = Delaunay3_edge()
 *         cdef Delaunay_with_info_3[info_t].Edge e
 *         e = Delaunay_with_info_3[info_t].Edge(c.x, i, j)             # <<<<<<<<<<<<<<
 *         out.assign(c.T, e)
 *         return out
 */
  __pyx_v_e = Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge(__pyx_v_c->x, __pyx_v_i, __pyx_v_j);

  /* "cgal4py/delaunay/delaunay3.pyx":401
 *         cdef Delaunay_with_info_3[info_t].Edge e
 *         e = Delaunay_with_info_3[info_t].Edge(c.x, i, j)
 *         out.assign(c.T, e)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_c->T, __pyx_v_e);

  /* "cgal4py/delaunay/delaunay3.pyx":402
 *         e = Delaunay_with_info_3[info_t].Edge(c.x, i, j)
 *         out.assign(c.T, e)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":385
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i, int j):             # <<<<<<<<<<<<<<
 *         r"""Construct an edges from a cell and indices of the two vertices
 *         in the cell that are incident to the edge.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.from_cell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":404
 *         return out
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay3_edge[{},{}]".format(repr(self.vertex1),
 *                                               repr(self.vertex2))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_2__repr__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_2__repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":405
 * 
 *     def __repr__(self):
 *         return "Delaunay3_edge[{},{}]".format(repr(self.vertex1),             # <<<<<<<<<<<<<<
 *                                               repr(self.vertex2))
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Delaunay3_edge, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Repr(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":406
 *     def __repr__(self):
 *         return "Delaunay3_edge[{},{}]".format(repr(self.vertex1),
 *                                               repr(self.vertex2))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_edge self, Delaunay3_edge solf, int op):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyObject_Repr(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 405, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 405, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_5);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":404
 *         return out
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay3_edge[{},{}]".format(repr(self.vertex1),
 *                                               repr(self.vertex2))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":408
 *                                               repr(self.vertex2))
 * 
 *     def __richcmp__(Delaunay3_edge self, Delaunay3_edge solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_5__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_5__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, 1, "solf", 0))) __PYX_ERR(0, 408, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":409
 * 
 *     def __richcmp__(Delaunay3_edge self, Delaunay3_edge solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":410
 *     def __richcmp__(Delaunay3_edge self, Delaunay3_edge solf, int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":409
 * 
 *     def __richcmp__(Delaunay3_edge self, Delaunay3_edge solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":411
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":412
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 412, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 412, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":411
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":414
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 414, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":408
 *                                               repr(self.vertex2))
 * 
 *     def __richcmp__(Delaunay3_edge self, Delaunay3_edge solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":416
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the edge is incident to the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6is_infinite[] = "Determine if the edge is incident to the infinite vertex.\n        \n        Returns:\n            bool: True if the edge is incident to the infinite vertex, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":424
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def is_Gabriel(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 424, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":416
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the edge is incident to the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":426
 *         return self.T.is_infinite(self.x)
 * 
 *     def is_Gabriel(self):             # <<<<<<<<<<<<<<
 *         r"""Determines if the edge is Gabriel (does not contain any other
 *             vertices in it's smallest circumsphere).
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_9is_Gabriel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8is_Gabriel[] = "Determines if the edge is Gabriel (does not contain any other \n            vertices in it's smallest circumsphere).\n\n        Returns:\n            bool: True if the edge is Gabriel, False otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_9is_Gabriel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_Gabriel (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8is_Gabriel(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8is_Gabriel(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_Gabriel", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":434
 * 
 *         """
 *         return <pybool>self.T.is_Gabriel(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def is_equivalent(self, Delaunay3_edge solf):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_Gabriel(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":426
 *         return self.T.is_infinite(self.x)
 * 
 *     def is_Gabriel(self):             # <<<<<<<<<<<<<<
 *         r"""Determines if the edge is Gabriel (does not contain any other
 *             vertices in it's smallest circumsphere).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.is_Gabriel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":436
 *         return <pybool>self.T.is_Gabriel(self.x)
 * 
 *     def is_equivalent(self, Delaunay3_edge solf):             # <<<<<<<<<<<<<<
 *         r"""Determine if another edge has the same vertices as this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_11is_equivalent(PyObject *__pyx_v_self, PyObject *__pyx_v_solf); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_10is_equivalent[] = "Determine if another edge has the same vertices as this edge.\n\n        Args:\n            solf (Delaunay3_edge): Edge for comparison.\n\n        Returns:\n            bool: True if the two edges share the same vertices, False otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_11is_equivalent(PyObject *__pyx_v_self, PyObject *__pyx_v_solf) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_equivalent (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, 1, "solf", 0))) __PYX_ERR(0, 436, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_10is_equivalent(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_solf));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_10is_equivalent(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_solf) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_equivalent", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":446
 * 
 *         """
 *         return <pybool>self.T.are_equal(self.x, solf.x)             # <<<<<<<<<<<<<<
 * 
 *     def vertex(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->are_equal(__pyx_v_self->x, __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 446, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":436
 *         return <pybool>self.T.is_Gabriel(self.x)
 * 
 *     def is_equivalent(self, Delaunay3_edge solf):             # <<<<<<<<<<<<<<
 *         r"""Determine if another edge has the same vertices as this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.is_equivalent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":448
 *         return <pybool>self.T.are_equal(self.x, solf.x)
 * 
 *     def vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the ith vertex on this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_13vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_12vertex[] = "Get the ith vertex on this edge.\n\n        Args:\n            i (int): Index of vertex to return.\n\n        Returns:\n            Delaunay3_vertex: ith vertex on this edge.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_13vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vertex (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 448, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_12vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_12vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":459
 *         """
 *         cdef Delaunay_with_info_3[info_t].Vertex x
 *         x = self.x.vertex(i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, x)
 */
  __pyx_v_x = __pyx_v_self->x.vertex(__pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":460
 *         cdef Delaunay_with_info_3[info_t].Vertex x
 *         x = self.x.vertex(i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, x)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":461
 *         x = self.x.vertex(i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, x)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_x);

  /* "cgal4py/delaunay/delaunay3.pyx":462
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, x)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     property vertex1:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":448
 *         return <pybool>self.T.are_equal(self.x, solf.x)
 * 
 *     def vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the ith vertex on this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":466
 *     property vertex1:
 *         r"""Delaunay3_vertex: The first vertex in the edge."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v1()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex1___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex1___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":467
 *         r"""Delaunay3_vertex: The first vertex in the edge."""
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v1()             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, x)
 */
  __pyx_v_x = __pyx_v_self->x.v1();

  /* "cgal4py/delaunay/delaunay3.pyx":468
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v1()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, x)
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":469
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v1()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, x)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_x);

  /* "cgal4py/delaunay/delaunay3.pyx":470
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, x)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property vertex2:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":466
 *     property vertex1:
 *         r"""Delaunay3_vertex: The first vertex in the edge."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v1()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.vertex1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":474
 *     property vertex2:
 *         r"""Delaunay3_vertex: The second vertex in the edge."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v2()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex2___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex2___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":475
 *         r"""Delaunay3_vertex: The second vertex in the edge."""
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v2()             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, x)
 */
  __pyx_v_x = __pyx_v_self->x.v2();

  /* "cgal4py/delaunay/delaunay3.pyx":476
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v2()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, x)
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":477
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v2()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, x)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_x);

  /* "cgal4py/delaunay/delaunay3.pyx":478
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 *             out.assign(self.T, x)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property cell:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":474
 *     property vertex2:
 *         r"""Delaunay3_vertex: The second vertex in the edge."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Vertex x = self.x.v2()
 *             cdef Delaunay3_vertex out = Delaunay3_vertex()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.vertex2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":482
 *     property cell:
 *         r"""Delaunay3_cell: The cell this edge is assigned to."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4cell_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4cell_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4cell___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell __pyx_v_c;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":484
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)
 */
  __pyx_v_c = __pyx_v_self->x.cell();

  /* "cgal4py/delaunay/delaunay3.pyx":485
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 *             cdef Delaunay3_cell out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, c)
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":486
 *             c = self.x.cell()
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_c);

  /* "cgal4py/delaunay/delaunay3.pyx":487
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property ind1:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":482
 *     property cell:
 *         r"""Delaunay3_cell: The cell this edge is assigned to."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.cell.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":491
 *     property ind1:
 *         r"""int: The index of the 1st vertex of this edge in its cell."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.ind1()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind1___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind1___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":492
 *         r"""int: The index of the 1st vertex of this edge in its cell."""
 *         def __get__(self):
 *             return self.x.ind1()             # <<<<<<<<<<<<<<
 * 
 *     property ind2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->x.ind1()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 492, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":491
 *     property ind1:
 *         r"""int: The index of the 1st vertex of this edge in its cell."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.ind1()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.ind1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":496
 *     property ind2:
 *         r"""int: The index of the 2nd vertex of this edge in its cell."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.ind2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind2___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind2___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":497
 *         r"""int: The index of the 2nd vertex of this edge in its cell."""
 *         def __get__(self):
 *             return self.x.ind2()             # <<<<<<<<<<<<<<
 * 
 *     property center:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->x.ind2()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":496
 *     property ind2:
 *         r"""int: The index of the 2nd vertex of this edge in its cell."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.ind2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.ind2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":501
 *     property center:
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge center."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6center_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6center_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6center___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6center___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":502
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge center."""
 *         def __get__(self):
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 502, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 502, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":503
 *         def __get__(self):
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')             # <<<<<<<<<<<<<<
 *             else:
 *                 return (self.vertex1.point + self.vertex2.point)/2.0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":502
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge center."""
 *         def __get__(self):
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":505
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex1.point + self.vertex2.point)/2.0             # <<<<<<<<<<<<<<
 * 
 *     property midpoint:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_point); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyFloat_DivideObjC(__pyx_t_3, __pyx_float_2_0, 2.0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":501
 *     property center:
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge center."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.center.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":509
 *     property midpoint:
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge midpoint."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.center
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8midpoint_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8midpoint_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8midpoint___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8midpoint___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":510
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge midpoint."""
 *         def __get__(self):
 *             return self.center             # <<<<<<<<<<<<<<
 * 
 *     property length:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_center); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 510, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":509
 *     property midpoint:
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of edge midpoint."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.center
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.midpoint.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":514
 *     property length:
 *         r"""float64: The length of the edge. If infinite, -1 is returned"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.float64_t out = self.T.length(self.x)
 *             return out
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6length_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6length_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6length___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6length___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  __pyx_t_5numpy_float64_t __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":515
 *         r"""float64: The length of the edge. If infinite, -1 is returned"""
 *         def __get__(self):
 *             cdef np.float64_t out = self.T.length(self.x)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  __pyx_v_out = __pyx_v_self->T->length(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":516
 *         def __get__(self):
 *             cdef np.float64_t out = self.T.length(self.x)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_vertices(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":514
 *     property length:
 *         r"""float64: The length of the edge. If infinite, -1 is returned"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.float64_t out = self.T.length(self.x)
 *             return out
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.length.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":518
 *             return out
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are incident to this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_15incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_14incident_vertices[] = "Find vertices that are incident to this edge.\n\n        Returns:\n            Delaunay3_vertex_vector: Iterator over vertices incident to this \n                edge.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_15incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_14incident_vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_14incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_vertices", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":527
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_vertices(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":528
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":529
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":530
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":518
 *             return out
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are incident to this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.incident_vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":532
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_17incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_16incident_edges[] = "Find edges that are incident to this edge.\n\n        Returns:\n            Delaunay3_edge_vector: Iterator over edges incident to this edge. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_17incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_16incident_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_16incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":540
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_edges(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":541
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":542
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":543
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":532
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.incident_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":545
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_19incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_18incident_facets[] = "Find facets that are incident to this edge.\n\n        Returns:\n            Delaunay3_facet_vector: Iterator over facets incident to this edge. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_19incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_18incident_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_18incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":553
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_facets(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":554
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":555
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":556
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":545
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.incident_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":558
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_21incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_20incident_cells[] = "Find cells that are incident to this edge.\n\n        Returns:\n            Delaunay3_cell_vector: Iterator over cells incident to this edge.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_21incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_20incident_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_20incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":566
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_cells(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":567
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":568
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":569
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":558
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.incident_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":571
 *         return out
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):             # <<<<<<<<<<<<<<
 *         r"""Determine if a point is inside, outside or on this edge.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_23side(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_22side[] = "Determine if a point is inside, outside or on this edge.\n\n        Args:\n            p (np.ndarray of float64): x,y,z coordinates.\n\n        Returns:\n            int: -1 if p is inside this edge, 0 if p is one of this edge's \n                vertices, and 1 if p is outside this edge.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_23side(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("side (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5numpy_ndarray, 1, "p", 0))) __PYX_ERR(0, 571, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_22side(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self), ((PyArrayObject *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_22side(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, PyArrayObject *__pyx_v_p) {
  int __pyx_v_lt;
  int __pyx_v_li;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_p;
  __Pyx_Buffer __pyx_pybuffer_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("side", 0);
  __pyx_pybuffer_p.pybuffer.buf = NULL;
  __pyx_pybuffer_p.refcount = 0;
  __pyx_pybuffernd_p.data = NULL;
  __pyx_pybuffernd_p.rcbuffer = &__pyx_pybuffer_p;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_p.rcbuffer->pybuffer, (PyObject*)__pyx_v_p, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 571, __pyx_L1_error)
  }
  __pyx_pybuffernd_p.diminfo[0].strides = __pyx_pybuffernd_p.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_p.diminfo[0].shape = __pyx_pybuffernd_p.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":583
 *         """
 *         cdef int lt, li
 *         lt = li = 999             # <<<<<<<<<<<<<<
 *         return self.T.side_of_edge(&p[0], self.x, lt, li)
 * 
 */
  __pyx_v_lt = 0x3E7;
  __pyx_v_li = 0x3E7;

  /* "cgal4py/delaunay/delaunay3.pyx":584
 *         cdef int lt, li
 *         lt = li = 999
 *         return self.T.side_of_edge(&p[0], self.x, lt, li)             # <<<<<<<<<<<<<<
 * 
 *     def flip(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_p.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_p.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 584, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->T->side_of_edge((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_p.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_p.diminfo[0].strides))), __pyx_v_self->x, __pyx_v_lt, __pyx_v_li)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":571
 *         return out
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):             # <<<<<<<<<<<<<<
 *         r"""Determine if a point is inside, outside or on this edge.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_p.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.side", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_p.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":586
 *         return self.T.side_of_edge(&p[0], self.x, lt, li)
 * 
 *     def flip(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this edge to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this edge after first testing that the edge
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_25flip(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_24flip[] = "Flip this edge to the other diagonal of the quadrilateral formed by\n        the two cells incident to this edge after first testing that the edge \n        can be flipped.\n\n        Returns:\n            bool: True if the edge could be flipped, False otherwise. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_25flip(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_24flip(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_24flip(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("flip", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":595
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         return self.T.flip(self.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":596
 *         """
 *         self.T.updated = <cbool>True
 *         return self.T.flip(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def flip_flippable(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->flip(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":586
 *         return self.T.side_of_edge(&p[0], self.x, lt, li)
 * 
 *     def flip(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this edge to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this edge after first testing that the edge
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.flip", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":598
 *         return self.T.flip(self.x)
 * 
 *     def flip_flippable(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this edge to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this edge. The edge is assumed flippable to
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_27flip_flippable(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_26flip_flippable[] = "Flip this edge to the other diagonal of the quadrilateral formed by\n        the two cells incident to this edge. The edge is assumed flippable to\n        save time.\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_27flip_flippable(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip_flippable (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_26flip_flippable(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_26flip_flippable(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip_flippable", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":603
 *         save time.
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.T.flip_flippable(self.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":604
 *         """
 *         self.T.updated = <cbool>True
 *         self.T.flip_flippable(self.x)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->T->flip_flippable(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":598
 *         return self.T.flip(self.x)
 * 
 *     def flip_flippable(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this edge to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this edge. The edge is assumed flippable to
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_29__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_29__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_28__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_28__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_31__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_31__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_30__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_30__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":627
 *     cdef Delaunay_with_info_3[info_t].All_edges_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str edge = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if edge == 'all_begin':
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T = 0;
  PyObject *__pyx_v_edge = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_edge,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject*)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_edge);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 627, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_T = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)values[0]);
    __pyx_v_edge = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 627, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_T), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, 1, "T", 0))) __PYX_ERR(0, 627, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), (&PyString_Type), 1, "edge", 1))) __PYX_ERR(0, 627, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self), __pyx_v_T, __pyx_v_edge);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_edge) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":628
 * 
 *     def __cinit__(self, Delaunay3 T, str edge = None):
 *         self.T = T.T             # <<<<<<<<<<<<<<
 *         if edge == 'all_begin':
 *             self.x = self.T.all_edges_begin()
 */
  __pyx_t_1 = __pyx_v_T->T;
  __pyx_v_self->T = __pyx_t_1;

  /* "cgal4py/delaunay/delaunay3.pyx":629
 *     def __cinit__(self, Delaunay3 T, str edge = None):
 *         self.T = T.T
 *         if edge == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_edges_begin()
 *         elif edge == 'all_end':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_edge, __pyx_n_s_all_begin, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 629, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":630
 *         self.T = T.T
 *         if edge == 'all_begin':
 *             self.x = self.T.all_edges_begin()             # <<<<<<<<<<<<<<
 *         elif edge == 'all_end':
 *             self.x = self.T.all_edges_end()
 */
    __pyx_v_self->x = __pyx_v_self->T->all_edges_begin();

    /* "cgal4py/delaunay/delaunay3.pyx":629
 *     def __cinit__(self, Delaunay3 T, str edge = None):
 *         self.T = T.T
 *         if edge == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_edges_begin()
 *         elif edge == 'all_end':
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":631
 *         if edge == 'all_begin':
 *             self.x = self.T.all_edges_begin()
 *         elif edge == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_edges_end()
 * 
 */
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_v_edge, __pyx_n_s_all_end, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 631, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "cgal4py/delaunay/delaunay3.pyx":632
 *             self.x = self.T.all_edges_begin()
 *         elif edge == 'all_end':
 *             self.x = self.T.all_edges_end()             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_edge_iter self, Delaunay3_edge_iter solf,
 */
    __pyx_v_self->x = __pyx_v_self->T->all_edges_end();

    /* "cgal4py/delaunay/delaunay3.pyx":631
 *         if edge == 'all_begin':
 *             self.x = self.T.all_edges_begin()
 *         elif edge == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_edges_end()
 * 
 */
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":627
 *     cdef Delaunay_with_info_3[info_t].All_edges_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str edge = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if edge == 'all_begin':
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":634
 *             self.x = self.T.all_edges_end()
 * 
 *     def __richcmp__(Delaunay3_edge_iter self, Delaunay3_edge_iter solf,             # <<<<<<<<<<<<<<
 *                     int op):
 *         if (op == 2):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, 1, "solf", 0))) __PYX_ERR(0, 634, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_2__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":636
 *     def __richcmp__(Delaunay3_edge_iter self, Delaunay3_edge_iter solf,
 *                     int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":637
 *                     int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 637, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":636
 *     def __richcmp__(Delaunay3_edge_iter self, Delaunay3_edge_iter solf,
 *                     int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":638
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":639
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":638
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":641
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 641, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":634
 *             self.x = self.T.all_edges_end()
 * 
 *     def __richcmp__(Delaunay3_edge_iter self, Delaunay3_edge_iter solf,             # <<<<<<<<<<<<<<
 *                     int op):
 *         if (op == 2):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":643
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the edge is incident to the the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4is_infinite[] = "Determine if the edge is incident to the the infinite vertex.\n        \n        Returns:\n            bool: True if the edge is incident to the infinite vertex, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":651
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def increment(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":643
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the edge is incident to the the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":653
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next edge in the triangulation."""
 *         preincrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_6increment[] = "Advance to the next edge in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_6increment(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":655
 *     def increment(self):
 *         r"""Advance to the next edge in the triangulation."""
 *         preincrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def decrement(self):
 */
  (void)((++__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":653
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next edge in the triangulation."""
 *         preincrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":657
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous edge in the triangulation."""
 *         predecrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_8decrement[] = "Advance to the previous edge in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_8decrement(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":659
 *     def decrement(self):
 *         r"""Advance to the previous edge in the triangulation."""
 *         predecrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     property edge:
 */
  (void)((--__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":657
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous edge in the triangulation."""
 *         predecrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":663
 *     property edge:
 *         r"""Delaunay3_edge: Corresponding edge object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_edge out = Delaunay3_edge()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Edge(self.x))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4edge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4edge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4edge___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4edge___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":664
 *         r"""Delaunay3_edge: Corresponding edge object."""
 *         def __get__(self):
 *             cdef Delaunay3_edge out = Delaunay3_edge()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Edge(self.x))
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":665
 *         def __get__(self):
 *             cdef Delaunay3_edge out = Delaunay3_edge()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Edge(self.x))             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge(__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":666
 *             cdef Delaunay3_edge out = Delaunay3_edge()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Edge(self.x))
 *             return out             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":663
 *     property edge:
 *         r"""Delaunay3_edge: Corresponding edge object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_edge out = Delaunay3_edge()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Edge(self.x))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.edge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_10__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_12__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_iter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":689
 *     cdef Delaunay3_edge_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_edge_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_edge_iter xstop,
 *                   pybool finite = False):
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_xstart = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_xstop = 0;
  PyBoolObject *__pyx_v_finite = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xstart,&__pyx_n_s_xstop,&__pyx_n_s_finite,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":691
 *     def __cinit__(self, Delaunay3_edge_iter xstart,
 *                   Delaunay3_edge_iter xstop,
 *                   pybool finite = False):             # <<<<<<<<<<<<<<
 *         self.x = xstart
 *         self.xstop = xstop
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstart)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 689, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_finite);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 689, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xstart = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)values[0]);
    __pyx_v_xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)values[1]);
    __pyx_v_finite = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 689, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_range.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstart), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, 1, "xstart", 0))) __PYX_ERR(0, 689, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstop), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, 1, "xstop", 0))) __PYX_ERR(0, 690, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_finite), __pyx_ptype_7cpython_4bool_bool, 1, "finite", 0))) __PYX_ERR(0, 691, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)__pyx_v_self), __pyx_v_xstart, __pyx_v_xstop, __pyx_v_finite);

  /* "cgal4py/delaunay/delaunay3.pyx":689
 *     cdef Delaunay3_edge_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_edge_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_edge_iter xstop,
 *                   pybool finite = False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":692
 *                   Delaunay3_edge_iter xstop,
 *                   pybool finite = False):
 *         self.x = xstart             # <<<<<<<<<<<<<<
 *         self.xstop = xstop
 *         self.finite = finite
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GOTREF(__pyx_v_self->x);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->x));
  __pyx_v_self->x = __pyx_v_xstart;

  /* "cgal4py/delaunay/delaunay3.pyx":693
 *                   pybool finite = False):
 *         self.x = xstart
 *         self.xstop = xstop             # <<<<<<<<<<<<<<
 *         self.finite = finite
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GOTREF(__pyx_v_self->xstop);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->xstop));
  __pyx_v_self->xstop = __pyx_v_xstop;

  /* "cgal4py/delaunay/delaunay3.pyx":694
 *         self.x = xstart
 *         self.xstop = xstop
 *         self.finite = finite             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_finite));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_finite));
  __Pyx_GOTREF(__pyx_v_self->finite);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->finite));
  __pyx_v_self->finite = __pyx_v_finite;

  /* "cgal4py/delaunay/delaunay3.pyx":689
 *     cdef Delaunay3_edge_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_edge_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_edge_iter xstop,
 *                   pybool finite = False):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":696
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_2__iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":697
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":696
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":699
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_5__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_5__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_4__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":700
 * 
 *     def __next__(self):
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_self->finite)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 700, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":701
 *     def __next__(self):
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():             # <<<<<<<<<<<<<<
 *                 self.x.increment()
 *         cdef Delaunay3_edge out
 */
    while (1) {
      __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 701, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_3) {
      } else {
        __pyx_t_1 = __pyx_t_3;
        goto __pyx_L6_bool_binop_done;
      }
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 701, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 701, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_1 = __pyx_t_3;
      __pyx_L6_bool_binop_done:;
      if (!__pyx_t_1) break;

      /* "cgal4py/delaunay/delaunay3.pyx":702
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge out
 *         if self.x != self.xstop:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 702, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 702, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":700
 * 
 *     def __next__(self):
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":704
 *                 self.x.increment()
 *         cdef Delaunay3_edge out
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.edge
 *             self.x.increment()
 */
  __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 704, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 704, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":705
 *         cdef Delaunay3_edge out
 *         if self.x != self.xstop:
 *             out = self.x.edge             # <<<<<<<<<<<<<<
 *             self.x.increment()
 *             return out
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_edge); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge))))) __PYX_ERR(0, 705, __pyx_L1_error)
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":706
 *         if self.x != self.xstop:
 *             out = self.x.edge
 *             self.x.increment()             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 706, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 706, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":707
 *             out = self.x.edge
 *             self.x.increment()
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":704
 *                 self.x.increment()
 *         cdef Delaunay3_edge out
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.edge
 *             self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":709
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 * cdef class Delaunay3_edge_vector:
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 709, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":699
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_range.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_range.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_range.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":728
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Edge] v):
 *         r"""Assign C++ attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  __pyx_v_v) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":739
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.v = v
 *         self.n = v.size()
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":740
 *         """
 *         self.T = T
 *         self.v = v             # <<<<<<<<<<<<<<
 *         self.n = v.size()
 *         self.i = 0
 */
  __pyx_v_self->v = __pyx_v_v;

  /* "cgal4py/delaunay/delaunay3.pyx":741
 *         self.T = T
 *         self.v = v
 *         self.n = v.size()             # <<<<<<<<<<<<<<
 *         self.i = 0
 * 
 */
  __pyx_v_self->n = __pyx_v_v.size();

  /* "cgal4py/delaunay/delaunay3.pyx":742
 *         self.v = v
 *         self.n = v.size()
 *         self.i = 0             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_v_self->i = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":728
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Edge] v):
 *         r"""Assign C++ attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":744
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_1__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_1__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector___iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":745
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":744
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":747
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge out
 *         if self.i < self.n:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_3__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_3__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_2__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":749
 *     def __next__(self):
 *         cdef Delaunay3_edge out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[self.i])
 */
  __pyx_t_1 = ((__pyx_v_self->i < __pyx_v_self->n) != 0);
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":750
 *         cdef Delaunay3_edge out
 *         if self.i < self.n:
 *             out = Delaunay3_edge()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 750, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":751
 *         if self.i < self.n:
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[self.i])             # <<<<<<<<<<<<<<
 *             self.i += 1
 *             return out
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_v_self->i]));

    /* "cgal4py/delaunay/delaunay3.pyx":752
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_v_self->i = (__pyx_v_self->i + 1);

    /* "cgal4py/delaunay/delaunay3.pyx":753
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":749
 *     def __next__(self):
 *         cdef Delaunay3_edge out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[self.i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":755
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, i):
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 755, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":747
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge out
 *         if self.i < self.n:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_vector.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":757
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge out
 *         if isinstance(i, int):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_4__getitem__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self, PyObject *__pyx_v_i) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge> ::size_type __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":759
 *     def __getitem__(self, i):
 *         cdef Delaunay3_edge out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[i])
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_i); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (likely(__pyx_t_2)) {

    /* "cgal4py/delaunay/delaunay3.pyx":760
 *         cdef Delaunay3_edge out
 *         if isinstance(i, int):
 *             out = Delaunay3_edge()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[i])
 *             return out
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":761
 *         if isinstance(i, int):
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[i])             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_4 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 761, __pyx_L1_error)
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_t_4]));

    /* "cgal4py/delaunay/delaunay3.pyx":762
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[i])
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Delaunay3_edge_vector indices must be itegers, "+
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":759
 *     def __getitem__(self, i):
 *         cdef Delaunay3_edge out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_edge()
 *             out.assign(self.T, self.v[i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":764
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_edge_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
  /*else*/ {

    /* "cgal4py/delaunay/delaunay3.pyx":765
 *         else:
 *             raise TypeError("Delaunay3_edge_vector indices must be itegers, "+
 *                             "not {}".format(type(i)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_not, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)Py_TYPE(__pyx_v_i))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 765, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, ((PyObject *)Py_TYPE(__pyx_v_i)));
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":764
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_edge_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
    __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Delaunay3_edge_vector_indices_mu, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 764, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 764, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 764, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":757
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge out
 *         if isinstance(i, int):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_vector.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_vector.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_edge_vector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":781
 *     cdef Delaunay_with_info_3[info_t].Facet x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Facet x):
 *         r"""Assign C++ objects to attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet __pyx_v_x) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":792
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.x = x
 * 
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":793
 *         """
 *         self.T = T
 *         self.x = x             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __pyx_v_self->x = __pyx_v_x;

  /* "cgal4py/delaunay/delaunay3.pyx":781
 *     cdef Delaunay_with_info_3[info_t].Facet x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Facet x):
 *         r"""Assign C++ objects to attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":796
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i):             # <<<<<<<<<<<<<<
 *         r"""Construct a facet from a cell and index of the vertex in the cell
 *         opposite the desired facet.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_1from_cell(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_from_cell[] = "Construct a facet from a cell and index of the vertex in the cell \n        opposite the desired facet.\n\n        Args:\n            c (Delaunay3_cell): Cell \n            i (int): Index of vertex in c that is opposite the facet.\n\n        Returns:\n            Delaunay3_facet: Facet incident to c and opposite vertex i in c.\n\n        ";
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_1from_cell = {"from_cell", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_1from_cell, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_from_cell};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_1from_cell(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_cell (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_c,&__pyx_n_s_i,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("from_cell", 1, 2, 2, 1); __PYX_ERR(0, 796, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_cell") < 0)) __PYX_ERR(0, 796, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_c = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_i = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 796, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_cell", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 796, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.from_cell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c", 0))) __PYX_ERR(0, 796, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_from_cell(__pyx_v_c, __pyx_v_i);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_from_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet __pyx_v_e;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("from_cell", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":808
 * 
 *         """
 *         cdef Delaunay3_facet out = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *         cdef Delaunay_with_info_3[info_t].Facet e
 *         e = Delaunay_with_info_3[info_t].Facet(c.x, i)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":810
 *         cdef Delaunay3_facet out = Delaunay3_facet()
 *         cdef Delaunay_with_info_3[info_t].Facet e
 *         e = Delaunay_with_info_3[info_t].Facet(c.x, i)             # <<<<<<<<<<<<<<
 *         out.assign(c.T, e)
 *         return out
 */
  __pyx_v_e = Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet(__pyx_v_c->x, __pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":811
 *         cdef Delaunay_with_info_3[info_t].Facet e
 *         e = Delaunay_with_info_3[info_t].Facet(c.x, i)
 *         out.assign(c.T, e)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_c->T, __pyx_v_e);

  /* "cgal4py/delaunay/delaunay3.pyx":812
 *         e = Delaunay_with_info_3[info_t].Facet(c.x, i)
 *         out.assign(c.T, e)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":796
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i):             # <<<<<<<<<<<<<<
 *         r"""Construct a facet from a cell and index of the vertex in the cell
 *         opposite the desired facet.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.from_cell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":814
 *         return out
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),
 *                                                   repr(self.vertex(1)),
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_2__repr__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_2__repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":815
 * 
 *     def __repr__(self):
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),             # <<<<<<<<<<<<<<
 *                                                   repr(self.vertex(1)),
 *                                                   repr(self.vertex(2)))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Delaunay3_facet, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Repr(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":816
 *     def __repr__(self):
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),
 *                                                   repr(self.vertex(1)),             # <<<<<<<<<<<<<<
 *                                                   repr(self.vertex(2)))
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 816, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 816, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Repr(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 816, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":817
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),
 *                                                   repr(self.vertex(1)),
 *                                                   repr(self.vertex(2)))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_Repr(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":814
 *         return out
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),
 *                                                   repr(self.vertex(1)),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":819
 *                                                   repr(self.vertex(2)))
 * 
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_5__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_5__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, 1, "solf", 0))) __PYX_ERR(0, 819, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":820
 * 
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":821
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":820
 * 
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":822
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":823
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 823, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":822
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":825
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 825, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":819
 *                                                   repr(self.vertex(2)))
 * 
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":827
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the facet is incident to the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_7is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6is_infinite[] = "Determine if the facet is incident to the infinite vertex.\n        \n        Returns:\n            bool: True if the facet is incident to the infinite vertex, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_7is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":835
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def is_Gabriel(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 835, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":827
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the facet is incident to the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":837
 *         return self.T.is_infinite(self.x)
 * 
 *     def is_Gabriel(self):             # <<<<<<<<<<<<<<
 *         r"""Determines if the facet is Gabriel (does not contain any other
 *             vertices in it's smallest circumsphere).
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_9is_Gabriel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_8is_Gabriel[] = "Determines if the facet is Gabriel (does not contain any other \n            vertices in it's smallest circumsphere).\n\n        Returns:\n            bool: True if the facet is Gabriel, False otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_9is_Gabriel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_Gabriel (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_8is_Gabriel(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_8is_Gabriel(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_Gabriel", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":845
 * 
 *         """
 *         return <pybool>self.T.is_Gabriel(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def is_equivalent(self, Delaunay3_facet solf):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_Gabriel(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":837
 *         return self.T.is_infinite(self.x)
 * 
 *     def is_Gabriel(self):             # <<<<<<<<<<<<<<
 *         r"""Determines if the facet is Gabriel (does not contain any other
 *             vertices in it's smallest circumsphere).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.is_Gabriel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":847
 *         return <pybool>self.T.is_Gabriel(self.x)
 * 
 *     def is_equivalent(self, Delaunay3_facet solf):             # <<<<<<<<<<<<<<
 *         r"""Determine if another facet has the same vertices as this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_11is_equivalent(PyObject *__pyx_v_self, PyObject *__pyx_v_solf); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_10is_equivalent[] = "Determine if another facet has the same vertices as this facet.\n\n        Args:\n            solf (Delaunay3_facet): Facet for comparison.\n\n        Returns:\n            bool: True if the two facets share the same vertices, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_11is_equivalent(PyObject *__pyx_v_self, PyObject *__pyx_v_solf) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_equivalent (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, 1, "solf", 0))) __PYX_ERR(0, 847, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_10is_equivalent(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_solf));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_10is_equivalent(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_solf) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_equivalent", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":858
 * 
 *         """
 *         return <pybool>self.T.are_equal(self.x, solf.x)             # <<<<<<<<<<<<<<
 * 
 *     def vertex(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->are_equal(__pyx_v_self->x, __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 858, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":847
 *         return <pybool>self.T.is_Gabriel(self.x)
 * 
 *     def is_equivalent(self, Delaunay3_facet solf):             # <<<<<<<<<<<<<<
 *         r"""Determine if another facet has the same vertices as this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.is_equivalent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":860
 *         return <pybool>self.T.are_equal(self.x, solf.x)
 * 
 *     def vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the ith vertex incident to this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_13vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_12vertex[] = "Get the ith vertex incident to this facet.\n\n        Args:\n            i (int): Index of vertex that should be returned.\n\n        Returns:\n            Delaunay_vertex: ith vertex of this facet.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_13vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vertex (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 860, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_12vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_12vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_v;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":871
 *         """
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         v = self.x.vertex(i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 */
  __pyx_v_v = __pyx_v_self->x.vertex(__pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":872
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         v = self.x.vertex(i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, v)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":873
 *         v = self.x.vertex(i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_v);

  /* "cgal4py/delaunay/delaunay3.pyx":874
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def edge(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":860
 *         return <pybool>self.T.are_equal(self.x, solf.x)
 * 
 *     def vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the ith vertex incident to this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":876
 *         return out
 * 
 *     def edge(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the edge opposite the ith vertex incident to this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_15edge(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_14edge[] = "Get the edge opposite the ith vertex incident to this facet.\n\n        Args:\n            i (int): Index of the edge that should be returned.\n        \n        Returns:\n            Delaunay3_edge: Edge opposite the ith vertex of this facet.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_15edge(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edge (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 876, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.edge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_14edge(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_14edge(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge __pyx_v_e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("edge", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":887
 *         """
 *         cdef Delaunay_with_info_3[info_t].Edge e
 *         e = self.x.edge(i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge out = Delaunay3_edge()
 *         out.assign(self.T, e)
 */
  __pyx_v_e = __pyx_v_self->x.edge(__pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":888
 *         cdef Delaunay_with_info_3[info_t].Edge e
 *         e = self.x.edge(i)
 *         cdef Delaunay3_edge out = Delaunay3_edge()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, e)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":889
 *         e = self.x.edge(i)
 *         cdef Delaunay3_edge out = Delaunay3_edge()
 *         out.assign(self.T, e)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_e);

  /* "cgal4py/delaunay/delaunay3.pyx":890
 *         cdef Delaunay3_edge out = Delaunay3_edge()
 *         out.assign(self.T, e)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     property center:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":876
 *         return out
 * 
 *     def edge(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the edge opposite the ith vertex incident to this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.edge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":894
 *     property center:
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6center_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6center_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6center___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6center___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":895
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 895, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 895, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 895, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 895, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":896
 *         def __get__(self):
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')             # <<<<<<<<<<<<<<
 *             else:
 *                 return (self.vertex(0).point + \
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":895
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":898
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);

    /* "cgal4py/delaunay/delaunay3.pyx":900
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0             # <<<<<<<<<<<<<<
 * 
 *     property area:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "cgal4py/delaunay/delaunay3.pyx":898
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_point); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":899
 *             else:
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(2).point)/3.0
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":898
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0
 */
    __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":900
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0             # <<<<<<<<<<<<<<
 * 
 *     property area:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":899
 *             else:
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(2).point)/3.0
 * 
 */
    __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":900
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0             # <<<<<<<<<<<<<<
 * 
 *     property area:
 */
    __pyx_t_2 = __Pyx_PyFloat_DivideObjC(__pyx_t_3, __pyx_float_3_0, 3.0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":894
 *     property center:
 *         r""":obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.center.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":904
 *     property area:
 *         r"""float64: The area of the facet. If infinite, -1 is returned"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             raise NotImplementedError
 *             # return -1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4area_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4area_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4area___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4area___get__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":905
 *         r"""float64: The area of the facet. If infinite, -1 is returned"""
 *         def __get__(self):
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 *             # return -1
 * 
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 905, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":904
 *     property area:
 *         r"""float64: The area of the facet. If infinite, -1 is returned"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             raise NotImplementedError
 *             # return -1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.area.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":910
 *     property cell:
 *         r"""Delaunay3_cell: The cell this facet is assigned to."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4cell_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4cell_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4cell___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell __pyx_v_c;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":912
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)
 */
  __pyx_v_c = __pyx_v_self->x.cell();

  /* "cgal4py/delaunay/delaunay3.pyx":913
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 *             cdef Delaunay3_cell out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, c)
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 913, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":914
 *             c = self.x.cell()
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_c);

  /* "cgal4py/delaunay/delaunay3.pyx":915
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.assign(self.T, c)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property ind:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":910
 *     property cell:
 *         r"""Delaunay3_cell: The cell this facet is assigned to."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Cell c
 *             c = self.x.cell()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.cell.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":919
 *     property ind:
 *         r"""int: The index of the vertex this facet is opposite on its cell."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.ind()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3ind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3ind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3ind___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3ind___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":920
 *         r"""int: The index of the vertex this facet is opposite on its cell."""
 *         def __get__(self):
 *             return self.x.ind()             # <<<<<<<<<<<<<<
 * 
 *     property mirror:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->x.ind()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":919
 *     property ind:
 *         r"""int: The index of the vertex this facet is opposite on its cell."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.ind()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.ind.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":925
 *         r"""Delaunay3_facet: The same facet as this one, but referenced from its
 *         other incident cell"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Facet ec
 *             ec = self.T.mirror_facet(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6mirror_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6mirror_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6mirror___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6mirror___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet __pyx_v_ec;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":927
 *         def __get__(self):
 *             cdef Delaunay_with_info_3[info_t].Facet ec
 *             ec = self.T.mirror_facet(self.x)             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, ec)
 */
  __pyx_v_ec = __pyx_v_self->T->mirror_facet(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":928
 *             cdef Delaunay_with_info_3[info_t].Facet ec
 *             ec = self.T.mirror_facet(self.x)
 *             cdef Delaunay3_facet out = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, ec)
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":929
 *             ec = self.T.mirror_facet(self.x)
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, ec)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_ec);

  /* "cgal4py/delaunay/delaunay3.pyx":930
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, ec)
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_vertices(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":925
 *         r"""Delaunay3_facet: The same facet as this one, but referenced from its
 *         other incident cell"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay_with_info_3[info_t].Facet ec
 *             ec = self.T.mirror_facet(self.x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.mirror.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":932
 *             return out
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are incident to this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_17incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_16incident_vertices[] = "Find vertices that are incident to this facet.\n\n        Returns:\n            Delaunay3_vertex_vector: Iterator over vertices incident to this \n                facet.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_17incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_16incident_vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_16incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_vertices", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":941
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_vertices(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":942
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":943
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":944
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":932
 *             return out
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are incident to this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.incident_vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":946
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_19incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_18incident_edges[] = "Find edges that are incident to this facet.\n\n        Returns:\n            Delaunay3_edge_vector: Iterator over edges incident to this facet. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_19incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_18incident_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_18incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":954
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_edges(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":955
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 955, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":956
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":957
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":946
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.incident_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":959
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_21incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_20incident_facets[] = "Find facets that are incident to this facet.\n\n        Returns:\n            Delaunay3_facet_vector: Iterator over facets incident to this facet. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_21incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_20incident_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_20incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":967
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_facets(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":968
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":969
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":970
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":959
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.incident_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":972
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_23incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_22incident_cells[] = "Find cells that are incident to this facet.\n\n        Returns:\n            Delaunay3_cell_vector: Iterator over cells incident to this facet.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_23incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_22incident_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_22incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":980
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_cells(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":981
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":982
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":983
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":972
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.incident_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":985
 *         return out
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):             # <<<<<<<<<<<<<<
 *         r"""Determine if a point is inside, outside or on this facet.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_25side(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_24side[] = "Determine if a point is inside, outside or on this facet.\n\n        Args:\n            p (np.ndarray of float64): x,y,z coordinates.\n\n        Returns:\n            int: -1 if p is inside this facet, 0 if p is on one of this facet's \n                vertices or edges, and 1 if p is outside this facet.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_25side(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("side (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5numpy_ndarray, 1, "p", 0))) __PYX_ERR(0, 985, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_24side(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self), ((PyArrayObject *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_24side(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, PyArrayObject *__pyx_v_p) {
  int __pyx_v_lt;
  int __pyx_v_li;
  int __pyx_v_lj;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_p;
  __Pyx_Buffer __pyx_pybuffer_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("side", 0);
  __pyx_pybuffer_p.pybuffer.buf = NULL;
  __pyx_pybuffer_p.refcount = 0;
  __pyx_pybuffernd_p.data = NULL;
  __pyx_pybuffernd_p.rcbuffer = &__pyx_pybuffer_p;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_p.rcbuffer->pybuffer, (PyObject*)__pyx_v_p, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 985, __pyx_L1_error)
  }
  __pyx_pybuffernd_p.diminfo[0].strides = __pyx_pybuffernd_p.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_p.diminfo[0].shape = __pyx_pybuffernd_p.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":997
 *         """
 *         cdef int lt, li, lj
 *         lt = li = lj = 999             # <<<<<<<<<<<<<<
 *         return self.T.side_of_facet(&p[0], self.x, lt, li, lj)
 * 
 */
  __pyx_v_lt = 0x3E7;
  __pyx_v_li = 0x3E7;
  __pyx_v_lj = 0x3E7;

  /* "cgal4py/delaunay/delaunay3.pyx":998
 *         cdef int lt, li, lj
 *         lt = li = lj = 999
 *         return self.T.side_of_facet(&p[0], self.x, lt, li, lj)             # <<<<<<<<<<<<<<
 * 
 *     # Currently segfaults inside CGAL function
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_p.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_p.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 998, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->T->side_of_facet((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_p.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_p.diminfo[0].strides))), __pyx_v_self->x, __pyx_v_lt, __pyx_v_li, __pyx_v_lj)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 998, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":985
 *         return out
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):             # <<<<<<<<<<<<<<
 *         r"""Determine if a point is inside, outside or on this facet.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_p.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.side", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_p.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1015
 *     #     return self.T.side_of_circle(self.x, &pos[0])
 * 
 *     def flip(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this facet to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this facet after first testing that the facet
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_27flip(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_26flip[] = "Flip this facet to the other diagonal of the quadrilateral formed by\n        the two cells incident to this facet after first testing that the facet \n        can be flipped.\n\n        Returns:\n            bool: True if the facet could be flipped, False otherwise. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_27flip(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_26flip(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_26flip(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("flip", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1024
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         return self.T.flip(self.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1025
 *         """
 *         self.T.updated = <cbool>True
 *         return self.T.flip(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def flip_flippable(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->flip(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1015
 *     #     return self.T.side_of_circle(self.x, &pos[0])
 * 
 *     def flip(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this facet to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this facet after first testing that the facet
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.flip", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1027
 *         return self.T.flip(self.x)
 * 
 *     def flip_flippable(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this facet to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this facet. The facet is assumed flippable to
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_29flip_flippable(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_28flip_flippable[] = "Flip this facet to the other diagonal of the quadrilateral formed by\n        the two cells incident to this facet. The facet is assumed flippable to\n        save time.\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_29flip_flippable(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip_flippable (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_28flip_flippable(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_28flip_flippable(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip_flippable", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1032
 *         save time.
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.T.flip_flippable(self.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1033
 *         """
 *         self.T.updated = <cbool>True
 *         self.T.flip_flippable(self.x)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->T->flip_flippable(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1027
 *         return self.T.flip(self.x)
 * 
 *     def flip_flippable(self):             # <<<<<<<<<<<<<<
 *         r"""Flip this facet to the other diagonal of the quadrilateral formed by
 *         the two cells incident to this facet. The facet is assumed flippable to
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_31__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_31__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_30__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_30__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_33__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_33__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_32__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_32__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1056
 *     cdef Delaunay_with_info_3[info_t].All_facets_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str facet = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if facet == 'all_begin':
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T = 0;
  PyObject *__pyx_v_facet = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_facet,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject*)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_facet);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1056, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_T = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)values[0]);
    __pyx_v_facet = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1056, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_T), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, 1, "T", 0))) __PYX_ERR(0, 1056, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_facet), (&PyString_Type), 1, "facet", 1))) __PYX_ERR(0, 1056, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self), __pyx_v_T, __pyx_v_facet);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_facet) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1057
 * 
 *     def __cinit__(self, Delaunay3 T, str facet = None):
 *         self.T = T.T             # <<<<<<<<<<<<<<
 *         if facet == 'all_begin':
 *             self.x = self.T.all_facets_begin()
 */
  __pyx_t_1 = __pyx_v_T->T;
  __pyx_v_self->T = __pyx_t_1;

  /* "cgal4py/delaunay/delaunay3.pyx":1058
 *     def __cinit__(self, Delaunay3 T, str facet = None):
 *         self.T = T.T
 *         if facet == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_facets_begin()
 *         elif facet == 'all_end':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_facet, __pyx_n_s_all_begin, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":1059
 *         self.T = T.T
 *         if facet == 'all_begin':
 *             self.x = self.T.all_facets_begin()             # <<<<<<<<<<<<<<
 *         elif facet == 'all_end':
 *             self.x = self.T.all_facets_end()
 */
    __pyx_v_self->x = __pyx_v_self->T->all_facets_begin();

    /* "cgal4py/delaunay/delaunay3.pyx":1058
 *     def __cinit__(self, Delaunay3 T, str facet = None):
 *         self.T = T.T
 *         if facet == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_facets_begin()
 *         elif facet == 'all_end':
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1060
 *         if facet == 'all_begin':
 *             self.x = self.T.all_facets_begin()
 *         elif facet == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_facets_end()
 * 
 */
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_v_facet, __pyx_n_s_all_end, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "cgal4py/delaunay/delaunay3.pyx":1061
 *             self.x = self.T.all_facets_begin()
 *         elif facet == 'all_end':
 *             self.x = self.T.all_facets_end()             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_facet_iter self, Delaunay3_facet_iter solf,
 */
    __pyx_v_self->x = __pyx_v_self->T->all_facets_end();

    /* "cgal4py/delaunay/delaunay3.pyx":1060
 *         if facet == 'all_begin':
 *             self.x = self.T.all_facets_begin()
 *         elif facet == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_facets_end()
 * 
 */
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":1056
 *     cdef Delaunay_with_info_3[info_t].All_facets_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str facet = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if facet == 'all_begin':
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1063
 *             self.x = self.T.all_facets_end()
 * 
 *     def __richcmp__(Delaunay3_facet_iter self, Delaunay3_facet_iter solf,             # <<<<<<<<<<<<<<
 *                     int op):
 *         if (op == 2):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, 1, "solf", 0))) __PYX_ERR(0, 1063, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_2__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1065
 *     def __richcmp__(Delaunay3_facet_iter self, Delaunay3_facet_iter solf,
 *                     int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":1066
 *                     int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1066, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1065
 *     def __richcmp__(Delaunay3_facet_iter self, Delaunay3_facet_iter solf,
 *                     int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":1067
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":1068
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1068, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1068, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1067
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":1070
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 1070, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1063
 *             self.x = self.T.all_facets_end()
 * 
 *     def __richcmp__(Delaunay3_facet_iter self, Delaunay3_facet_iter solf,             # <<<<<<<<<<<<<<
 *                     int op):
 *         if (op == 2):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1072
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the facet is incident to the the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_4is_infinite[] = "Determine if the facet is incident to the the infinite vertex.\n        \n        Returns:\n            bool: True if the facet is incident to the infinite vertex, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_4is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1080
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def increment(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1072
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the facet is incident to the the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1082
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next facet in the triangulation."""
 *         preincrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_6increment[] = "Advance to the next facet in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_6increment(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1084
 *     def increment(self):
 *         r"""Advance to the next facet in the triangulation."""
 *         preincrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def decrement(self):
 */
  (void)((++__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":1082
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next facet in the triangulation."""
 *         preincrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1086
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous facet in the triangulation."""
 *         predecrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_8decrement[] = "Advance to the previous facet in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_8decrement(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1088
 *     def decrement(self):
 *         r"""Advance to the previous facet in the triangulation."""
 *         predecrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     property facet:
 */
  (void)((--__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":1086
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous facet in the triangulation."""
 *         predecrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1092
 *     property facet:
 *         r"""Delaunay3_facet: Corresponding facet object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Facet(self.x))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5facet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5facet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5facet___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5facet___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1093
 *         r"""Delaunay3_facet: Corresponding facet object."""
 *         def __get__(self):
 *             cdef Delaunay3_facet out = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Facet(self.x))
 *             return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1094
 *         def __get__(self):
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Facet(self.x))             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet(__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":1095
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Facet(self.x))
 *             return out             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1092
 *     property facet:
 *         r"""Delaunay3_facet: Corresponding facet object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_facet out = Delaunay3_facet()
 *             out.assign(self.T, Delaunay_with_info_3[info_t].Facet(self.x))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.facet.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_10__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_12__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_iter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1118
 *     cdef Delaunay3_facet_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_facet_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_facet_iter xstop,
 *                   pybool finite = False):
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_xstart = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_xstop = 0;
  PyBoolObject *__pyx_v_finite = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xstart,&__pyx_n_s_xstop,&__pyx_n_s_finite,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":1120
 *     def __cinit__(self, Delaunay3_facet_iter xstart,
 *                   Delaunay3_facet_iter xstop,
 *                   pybool finite = False):             # <<<<<<<<<<<<<<
 *         self.x = xstart
 *         self.xstop = xstop
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstart)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 1118, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_finite);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1118, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xstart = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)values[0]);
    __pyx_v_xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)values[1]);
    __pyx_v_finite = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1118, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_range.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstart), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, 1, "xstart", 0))) __PYX_ERR(0, 1118, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstop), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, 1, "xstop", 0))) __PYX_ERR(0, 1119, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_finite), __pyx_ptype_7cpython_4bool_bool, 1, "finite", 0))) __PYX_ERR(0, 1120, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)__pyx_v_self), __pyx_v_xstart, __pyx_v_xstop, __pyx_v_finite);

  /* "cgal4py/delaunay/delaunay3.pyx":1118
 *     cdef Delaunay3_facet_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_facet_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_facet_iter xstop,
 *                   pybool finite = False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1121
 *                   Delaunay3_facet_iter xstop,
 *                   pybool finite = False):
 *         self.x = xstart             # <<<<<<<<<<<<<<
 *         self.xstop = xstop
 *         self.finite = finite
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GOTREF(__pyx_v_self->x);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->x));
  __pyx_v_self->x = __pyx_v_xstart;

  /* "cgal4py/delaunay/delaunay3.pyx":1122
 *                   pybool finite = False):
 *         self.x = xstart
 *         self.xstop = xstop             # <<<<<<<<<<<<<<
 *         self.finite = finite
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GOTREF(__pyx_v_self->xstop);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->xstop));
  __pyx_v_self->xstop = __pyx_v_xstop;

  /* "cgal4py/delaunay/delaunay3.pyx":1123
 *         self.x = xstart
 *         self.xstop = xstop
 *         self.finite = finite             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_finite));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_finite));
  __Pyx_GOTREF(__pyx_v_self->finite);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->finite));
  __pyx_v_self->finite = __pyx_v_finite;

  /* "cgal4py/delaunay/delaunay3.pyx":1118
 *     cdef Delaunay3_facet_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_facet_iter xstart,             # <<<<<<<<<<<<<<
 *                   Delaunay3_facet_iter xstop,
 *                   pybool finite = False):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1125
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_2__iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1126
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1125
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1128
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_5__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_5__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_4__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1129
 * 
 *     def __next__(self):
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_self->finite)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1129, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":1130
 *     def __next__(self):
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():             # <<<<<<<<<<<<<<
 *                 self.x.increment()
 *         cdef Delaunay3_facet out
 */
    while (1) {
      __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1130, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_3) {
      } else {
        __pyx_t_1 = __pyx_t_3;
        goto __pyx_L6_bool_binop_done;
      }
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1130, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1130, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_1 = __pyx_t_3;
      __pyx_L6_bool_binop_done:;
      if (!__pyx_t_1) break;

      /* "cgal4py/delaunay/delaunay3.pyx":1131
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet out
 *         if self.x != self.xstop:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1131, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1131, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1131, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":1129
 * 
 *     def __next__(self):
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1133
 *                 self.x.increment()
 *         cdef Delaunay3_facet out
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.facet
 *             self.x.increment()
 */
  __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1134
 *         cdef Delaunay3_facet out
 *         if self.x != self.xstop:
 *             out = self.x.facet             # <<<<<<<<<<<<<<
 *             self.x.increment()
 *             return out
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_facet); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet))))) __PYX_ERR(0, 1134, __pyx_L1_error)
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1135
 *         if self.x != self.xstop:
 *             out = self.x.facet
 *             self.x.increment()             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1135, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1135, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1136
 *             out = self.x.facet
 *             self.x.increment()
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1133
 *                 self.x.increment()
 *         cdef Delaunay3_facet out
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.facet
 *             self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1138
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 * cdef class Delaunay3_facet_vector:
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1138, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1128
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_range.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_range.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_range.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1157
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Facet] v):
 *         r"""Assign C++ attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  __pyx_v_v) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1168
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.v = v
 *         self.n = v.size()
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":1169
 *         """
 *         self.T = T
 *         self.v = v             # <<<<<<<<<<<<<<
 *         self.n = v.size()
 *         self.i = 0
 */
  __pyx_v_self->v = __pyx_v_v;

  /* "cgal4py/delaunay/delaunay3.pyx":1170
 *         self.T = T
 *         self.v = v
 *         self.n = v.size()             # <<<<<<<<<<<<<<
 *         self.i = 0
 * 
 */
  __pyx_v_self->n = __pyx_v_v.size();

  /* "cgal4py/delaunay/delaunay3.pyx":1171
 *         self.v = v
 *         self.n = v.size()
 *         self.i = 0             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_v_self->i = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1157
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Facet] v):
 *         r"""Assign C++ attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":1173
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_1__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_1__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector___iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1174
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1173
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1176
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet out
 *         if self.i < self.n:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_3__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_3__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_2__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1178
 *     def __next__(self):
 *         cdef Delaunay3_facet out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[self.i])
 */
  __pyx_t_1 = ((__pyx_v_self->i < __pyx_v_self->n) != 0);
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1179
 *         cdef Delaunay3_facet out
 *         if self.i < self.n:
 *             out = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1180
 *         if self.i < self.n:
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[self.i])             # <<<<<<<<<<<<<<
 *             self.i += 1
 *             return out
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_v_self->i]));

    /* "cgal4py/delaunay/delaunay3.pyx":1181
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_v_self->i = (__pyx_v_self->i + 1);

    /* "cgal4py/delaunay/delaunay3.pyx":1182
 *             out.assign(self.T, self.v[self.i])
 *             self.i += 1
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1178
 *     def __next__(self):
 *         cdef Delaunay3_facet out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[self.i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1184
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, i):
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1184, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1176
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet out
 *         if self.i < self.n:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_vector.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1186
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet out
 *         if isinstance(i, int):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_4__getitem__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self, PyObject *__pyx_v_i) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ::size_type __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1188
 *     def __getitem__(self, i):
 *         cdef Delaunay3_facet out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[i])
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_i); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (likely(__pyx_t_2)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1189
 *         cdef Delaunay3_facet out
 *         if isinstance(i, int):
 *             out = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[i])
 *             return out
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1190
 *         if isinstance(i, int):
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[i])             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_4 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1190, __pyx_L1_error)
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_t_4]));

    /* "cgal4py/delaunay/delaunay3.pyx":1191
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[i])
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Delaunay3_facet_vector indices must be itegers, "+
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1188
 *     def __getitem__(self, i):
 *         cdef Delaunay3_facet out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_facet()
 *             out.assign(self.T, self.v[i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1193
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_facet_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
  /*else*/ {

    /* "cgal4py/delaunay/delaunay3.pyx":1194
 *         else:
 *             raise TypeError("Delaunay3_facet_vector indices must be itegers, "+
 *                             "not {}".format(type(i)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_not, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)Py_TYPE(__pyx_v_i))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1194, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1194, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1194, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1194, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, ((PyObject *)Py_TYPE(__pyx_v_i)));
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1194, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1193
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_facet_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
    __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Delaunay3_facet_vector_indices_m, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1193, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1186
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet out
 *         if isinstance(i, int):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_vector.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_vector.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_facet_vector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1210
 *     cdef Delaunay_with_info_3[info_t].Cell x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Cell x):
 *         r"""Assign C++ objects to attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell __pyx_v_x) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1221
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.x = x
 * 
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":1222
 *         """
 *         self.T = T
 *         self.x = x             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_v_self->x = __pyx_v_x;

  /* "cgal4py/delaunay/delaunay3.pyx":1210
 *     cdef Delaunay_with_info_3[info_t].Cell x
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      Delaunay_with_info_3[info_t].Cell x):
 *         r"""Assign C++ objects to attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":1224
 *         self.x = x
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),
 *                                                     repr(self.vertex(1)),
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_1__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_1__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell___repr__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell___repr__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1225
 * 
 *     def __repr__(self):
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),             # <<<<<<<<<<<<<<
 *                                                     repr(self.vertex(1)),
 *                                                     repr(self.vertex(2)),
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Delaunay2_cell, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Repr(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1226
 *     def __repr__(self):
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),
 *                                                     repr(self.vertex(1)),             # <<<<<<<<<<<<<<
 *                                                     repr(self.vertex(2)),
 *                                                     repr(self.vertex(3)))
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Repr(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1227
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),
 *                                                     repr(self.vertex(1)),
 *                                                     repr(self.vertex(2)),             # <<<<<<<<<<<<<<
 *                                                     repr(self.vertex(3)))
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_Repr(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1228
 *                                                     repr(self.vertex(1)),
 *                                                     repr(self.vertex(2)),
 *                                                     repr(self.vertex(3)))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_Repr(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_6);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1224
 *         self.x = x
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),
 *                                                     repr(self.vertex(1)),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1230
 *                                                     repr(self.vertex(3)))
 * 
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "solf", 0))) __PYX_ERR(0, 1230, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_2__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1231
 * 
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":1232
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1231
 * 
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":1233
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":1234
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1234, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1233
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":1236
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 1236, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1230
 *                                                     repr(self.vertex(3)))
 * 
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1238
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the cell is incident to the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_4is_infinite[] = "Determine if the cell is incident to the infinite vertex.\n\n        Returns:\n            bool: True if the cell is incident to the infinite vertex, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_4is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1246
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def mirror_index(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1238
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the cell is incident to the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1248
 *         return self.T.is_infinite(self.x)
 * 
 *     def mirror_index(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the index of this cell with respect to its ith neighbor.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_7mirror_index(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6mirror_index[] = "Get the index of this cell with respect to its ith neighbor. \n\n        Args: \n            i (int): Index of neighbor that should be used to determine the \n                mirrored index. \n\n        Returns: \n            int: Index of this cell with respect to its ith neighbor. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_7mirror_index(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mirror_index (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1248, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.mirror_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6mirror_index(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6mirror_index(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i) {
  int __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("mirror_index", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1259
 * 
 *         """
 *         cdef int out = self.T.mirror_index(self.x, i)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  __pyx_v_out = __pyx_v_self->T->mirror_index(__pyx_v_self->x, __pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":1260
 *         """
 *         cdef int out = self.T.mirror_index(self.x, i)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def mirror_vertex(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1248
 *         return self.T.is_infinite(self.x)
 * 
 *     def mirror_index(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the index of this cell with respect to its ith neighbor.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.mirror_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1262
 *         return out
 * 
 *     def mirror_vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex of this cell's ith neighbor that is opposite to this
 *         cell.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9mirror_vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_8mirror_vertex[] = "Get the vertex of this cell's ith neighbor that is opposite to this \n        cell.\n\n        Args: \n            i (int): Index of neighbor that should be used to determine the \n                mirrored vertex. \n\n        Returns:\n            Delaunay3_vertex: Vertex in the ith neighboring cell of this cell, \n                that is opposite to this cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9mirror_vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mirror_vertex (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1262, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.mirror_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_8mirror_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_8mirror_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_vc;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("mirror_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1276
 *         """
 *         cdef Delaunay_with_info_3[info_t].Vertex vc
 *         vc = self.T.mirror_vertex(self.x, i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, vc)
 */
  __pyx_v_vc = __pyx_v_self->T->mirror_vertex(__pyx_v_self->x, __pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":1277
 *         cdef Delaunay_with_info_3[info_t].Vertex vc
 *         vc = self.T.mirror_vertex(self.x, i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, vc)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1278
 *         vc = self.T.mirror_vertex(self.x, i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, vc)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_vc);

  /* "cgal4py/delaunay/delaunay3.pyx":1279
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, vc)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def facet(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1262
 *         return out
 * 
 *     def mirror_vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex of this cell's ith neighbor that is opposite to this
 *         cell.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.mirror_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1281
 *         return out
 * 
 *     def facet(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Find the facet opposite the ith vertex incident to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_11facet(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_10facet[] = "Find the facet opposite the ith vertex incident to this cell.\n\n        Args:\n            i (int): Index of vertex opposite the desired facet.\n\n        Returns:\n            Delaunay3_facet: The facet opposite the ith vertex incident to this \n                cell.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_11facet(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("facet (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1281, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.facet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_10facet(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_10facet(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet __pyx_v_f;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("facet", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1293
 *         """
 *         cdef Delaunay_with_info_3[info_t].Facet f
 *         f = self.x.facet(i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet out = Delaunay3_facet()
 *         out.assign(self.T, f)
 */
  __pyx_v_f = __pyx_v_self->x.facet(__pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":1294
 *         cdef Delaunay_with_info_3[info_t].Facet f
 *         f = self.x.facet(i)
 *         cdef Delaunay3_facet out = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, f)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1295
 *         f = self.x.facet(i)
 *         cdef Delaunay3_facet out = Delaunay3_facet()
 *         out.assign(self.T, f)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_f);

  /* "cgal4py/delaunay/delaunay3.pyx":1296
 *         cdef Delaunay3_facet out = Delaunay3_facet()
 *         out.assign(self.T, f)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def vertex(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1281
 *         return out
 * 
 *     def facet(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Find the facet opposite the ith vertex incident to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.facet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1298
 *         return out
 * 
 *     def vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Find the ith vertex that is incident to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_13vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12vertex[] = "Find the ith vertex that is incident to this cell. \n\n        Args:\n            i (int): The index of the vertex that should be returned.\n\n        Returns:\n            Delaunay3_vertex: The ith vertex incident to this cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_13vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vertex (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_v;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1309
 *         """
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         v = self.x.vertex(i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 */
  __pyx_v_v = __pyx_v_self->x.vertex(__pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":1310
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         v = self.x.vertex(i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, v)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1311
 *         v = self.x.vertex(i)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_v);

  /* "cgal4py/delaunay/delaunay3.pyx":1312
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def has_vertex(self, Delaunay3_vertex v, pybool return_index = False):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1298
 *         return out
 * 
 *     def vertex(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Find the ith vertex that is incident to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1314
 *         return out
 * 
 *     def has_vertex(self, Delaunay3_vertex v, pybool return_index = False):             # <<<<<<<<<<<<<<
 *         r"""Determine if a vertex belongs to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_15has_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_14has_vertex[] = "Determine if a vertex belongs to this cell.\n\n        Args:\n            v (Delaunay3_vertex): Vertex to test ownership for. \n            return_index (:obj:`bool`, optional): If True, the index of the \n                vertex within the cell is returned in the event that it is a \n                vertex of the cell. Otherwise, the index is not returned.  \n        \n        Returns:\n            bool: True if the vertex is part of the cell, False otherwise. In\n                the event that `return_index = True` and the vertex is a part of  \n                the cell, an integer specifying the index of the vertex within\n                the cell will be returned instead. \n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_15has_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v = 0;
  PyBoolObject *__pyx_v_return_index = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("has_vertex (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_v,&__pyx_n_s_return_index,0};
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_return_index);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "has_vertex") < 0)) __PYX_ERR(0, 1314, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_return_index = ((PyBoolObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("has_vertex", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1314, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.has_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v", 0))) __PYX_ERR(0, 1314, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_return_index), __pyx_ptype_7cpython_4bool_bool, 1, "return_index", 0))) __PYX_ERR(0, 1314, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_14has_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), __pyx_v_v, __pyx_v_return_index);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_14has_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v, PyBoolObject *__pyx_v_return_index) {
  int __pyx_v_i;
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("has_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1329
 *                 the cell will be returned instead.
 *         """
 *         cdef int i = -1             # <<<<<<<<<<<<<<
 *         cdef cbool out
 *         if return_index:
 */
  __pyx_v_i = -1;

  /* "cgal4py/delaunay/delaunay3.pyx":1331
 *         cdef int i = -1
 *         cdef cbool out
 *         if return_index:             # <<<<<<<<<<<<<<
 *             out = self.x.has_vertex(v.x, &i)
 *             return i
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_return_index)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1331, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":1332
 *         cdef cbool out
 *         if return_index:
 *             out = self.x.has_vertex(v.x, &i)             # <<<<<<<<<<<<<<
 *             return i
 *         else:
 */
    __pyx_v_out = __pyx_v_self->x.has_vertex(__pyx_v_v->x, (&__pyx_v_i));

    /* "cgal4py/delaunay/delaunay3.pyx":1333
 *         if return_index:
 *             out = self.x.has_vertex(v.x, &i)
 *             return i             # <<<<<<<<<<<<<<
 *         else:
 *             out = self.x.has_vertex(v.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1331
 *         cdef int i = -1
 *         cdef cbool out
 *         if return_index:             # <<<<<<<<<<<<<<
 *             out = self.x.has_vertex(v.x, &i)
 *             return i
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1335
 *             return i
 *         else:
 *             out = self.x.has_vertex(v.x)             # <<<<<<<<<<<<<<
 *             return <pybool>out
 * 
 */
  /*else*/ {
    __pyx_v_out = __pyx_v_self->x.has_vertex(__pyx_v_v->x);

    /* "cgal4py/delaunay/delaunay3.pyx":1336
 *         else:
 *             out = self.x.has_vertex(v.x)
 *             return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     def ind_vertex(self, Delaunay3_vertex v):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1336, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_2));
    __pyx_r = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1314
 *         return out
 * 
 *     def has_vertex(self, Delaunay3_vertex v, pybool return_index = False):             # <<<<<<<<<<<<<<
 *         r"""Determine if a vertex belongs to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.has_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1338
 *             return <pybool>out
 * 
 *     def ind_vertex(self, Delaunay3_vertex v):             # <<<<<<<<<<<<<<
 *         r"""Determine the index of a vertex within a cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_17ind_vertex(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_16ind_vertex[] = "Determine the index of a vertex within a cell. \n\n        Args: \n            v (Delaunay3_vertex): Vertex to find index for. \n\n        Returns: \n            int: Index of vertex within the cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_17ind_vertex(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ind_vertex (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v", 0))) __PYX_ERR(0, 1338, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_16ind_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_v));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_16ind_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ind_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1348
 * 
 *         """
 *         return self.x.ind(v.x)             # <<<<<<<<<<<<<<
 * 
 *     def neighbor(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->x.ind(__pyx_v_v->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1338
 *             return <pybool>out
 * 
 *     def ind_vertex(self, Delaunay3_vertex v):             # <<<<<<<<<<<<<<
 *         r"""Determine the index of a vertex within a cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.ind_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1350
 *         return self.x.ind(v.x)
 * 
 *     def neighbor(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Find the neighboring cell opposite the ith vertex of this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_19neighbor(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_18neighbor[] = "Find the neighboring cell opposite the ith vertex of this cell. \n\n        Args: \n            i (int): The index of the neighboring cell that should be returned. \n\n        Returns: \n            Delaunay2_cell: The neighboring cell opposite the ith vertex. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_19neighbor(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("neighbor (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1350, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.neighbor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_18neighbor(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_18neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell __pyx_v_v;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("neighbor", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1361
 *         """
 *         cdef Delaunay_with_info_3[info_t].Cell v
 *         v = self.x.neighbor(i)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell out = Delaunay3_cell()
 *         out.assign(self.T, v)
 */
  __pyx_v_v = __pyx_v_self->x.neighbor(__pyx_v_i);

  /* "cgal4py/delaunay/delaunay3.pyx":1362
 *         cdef Delaunay_with_info_3[info_t].Cell v
 *         v = self.x.neighbor(i)
 *         cdef Delaunay3_cell out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, v)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1363
 *         v = self.x.neighbor(i)
 *         cdef Delaunay3_cell out = Delaunay3_cell()
 *         out.assign(self.T, v)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_v);

  /* "cgal4py/delaunay/delaunay3.pyx":1364
 *         cdef Delaunay3_cell out = Delaunay3_cell()
 *         out.assign(self.T, v)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def has_neighbor(self, Delaunay3_cell v, pybool return_index = False):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1350
 *         return self.x.ind(v.x)
 * 
 *     def neighbor(self, int i):             # <<<<<<<<<<<<<<
 *         r"""Find the neighboring cell opposite the ith vertex of this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.neighbor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1366
 *         return out
 * 
 *     def has_neighbor(self, Delaunay3_cell v, pybool return_index = False):             # <<<<<<<<<<<<<<
 *         r"""Determine if a cell is a neighbor to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_21has_neighbor(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_20has_neighbor[] = "Determine if a cell is a neighbor to this cell. \n\n        Args: \n            v (Delaunay3_cell): Cell to test as a neighbor. \n            return_index (:obj:`bool`, optional): If True, the index of the \n                neighbor within the cell is returned in the event that it is a \n                neighbor of the cell. Otherwise, the index is not returned. \n\n        Returns: \n            bool: True if the given cell is a neighbor, False otherwise. In \n                the event that `return_index = True` and the v is a neighbor of \n                this cell, an integer specifying the index of the neighbor to \n                will be returned instead. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_21has_neighbor(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_v = 0;
  PyBoolObject *__pyx_v_return_index = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("has_neighbor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_v,&__pyx_n_s_return_index,0};
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_return_index);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "has_neighbor") < 0)) __PYX_ERR(0, 1366, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_return_index = ((PyBoolObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("has_neighbor", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1366, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.has_neighbor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "v", 0))) __PYX_ERR(0, 1366, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_return_index), __pyx_ptype_7cpython_4bool_bool, 1, "return_index", 0))) __PYX_ERR(0, 1366, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_20has_neighbor(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), __pyx_v_v, __pyx_v_return_index);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_20has_neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_v, PyBoolObject *__pyx_v_return_index) {
  int __pyx_v_i;
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("has_neighbor", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1382
 * 
 *         """
 *         cdef int i = -1             # <<<<<<<<<<<<<<
 *         cdef cbool out = self.x.has_neighbor(v.x, &i)
 *         if out and return_index:
 */
  __pyx_v_i = -1;

  /* "cgal4py/delaunay/delaunay3.pyx":1383
 *         """
 *         cdef int i = -1
 *         cdef cbool out = self.x.has_neighbor(v.x, &i)             # <<<<<<<<<<<<<<
 *         if out and return_index:
 *             return i
 */
  __pyx_v_out = __pyx_v_self->x.has_neighbor(__pyx_v_v->x, (&__pyx_v_i));

  /* "cgal4py/delaunay/delaunay3.pyx":1384
 *         cdef int i = -1
 *         cdef cbool out = self.x.has_neighbor(v.x, &i)
 *         if out and return_index:             # <<<<<<<<<<<<<<
 *             return i
 *         else:
 */
  __pyx_t_2 = (__pyx_v_out != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_return_index)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1384, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":1385
 *         cdef cbool out = self.x.has_neighbor(v.x, &i)
 *         if out and return_index:
 *             return i             # <<<<<<<<<<<<<<
 *         else:
 *             return <pybool>out
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1385, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1384
 *         cdef int i = -1
 *         cdef cbool out = self.x.has_neighbor(v.x, &i)
 *         if out and return_index:             # <<<<<<<<<<<<<<
 *             return i
 *         else:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1387
 *             return i
 *         else:
 *             return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     def ind_neighbor(self, Delaunay3_cell v):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1387, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_3));
    __pyx_r = __pyx_t_3;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1366
 *         return out
 * 
 *     def has_neighbor(self, Delaunay3_cell v, pybool return_index = False):             # <<<<<<<<<<<<<<
 *         r"""Determine if a cell is a neighbor to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.has_neighbor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1389
 *             return <pybool>out
 * 
 *     def ind_neighbor(self, Delaunay3_cell v):             # <<<<<<<<<<<<<<
 *         r"""Determine the index of a neighboring cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_23ind_neighbor(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_22ind_neighbor[] = "Determine the index of a neighboring cell. \n\n        Args: \n            v (Delaunay3_cell): Neighboring cell to find index for. \n\n        Returns: \n            int: Index of vertex opposite to neighboring cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_23ind_neighbor(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ind_neighbor (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "v", 0))) __PYX_ERR(0, 1389, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_22ind_neighbor(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_v));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_22ind_neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ind_neighbor", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1399
 * 
 *         """
 *         return self.x.ind(v.x)             # <<<<<<<<<<<<<<
 * 
 *     def set_vertex(self, int i, Delaunay3_vertex v):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->x.ind(__pyx_v_v->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1389
 *             return <pybool>out
 * 
 *     def ind_neighbor(self, Delaunay3_cell v):             # <<<<<<<<<<<<<<
 *         r"""Determine the index of a neighboring cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.ind_neighbor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1401
 *         return self.x.ind(v.x)
 * 
 *     def set_vertex(self, int i, Delaunay3_vertex v):             # <<<<<<<<<<<<<<
 *         r"""Set the ith vertex of this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_25set_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_24set_vertex[] = "Set the ith vertex of this cell. \n\n        Args: \n            i (int): Index of this cell's vertex that should be set. \n            v (Delaunay3_vertex): Vertex to set ith vertex of this cell to. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_25set_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_i;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vertex (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_v,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_vertex", 1, 2, 2, 1); __PYX_ERR(0, 1401, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_vertex") < 0)) __PYX_ERR(0, 1401, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1401, __pyx_L3_error)
    __pyx_v_v = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_vertex", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1401, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.set_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v", 0))) __PYX_ERR(0, 1401, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_24set_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), __pyx_v_i, __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_24set_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1409
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_vertex(i, v.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1410
 *         """
 *         self.T.updated = <cbool>True
 *         self.x.set_vertex(i, v.x)             # <<<<<<<<<<<<<<
 * 
 *     def set_vertices(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 */
  __pyx_v_self->x.set_vertex(__pyx_v_i, __pyx_v_v->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1401
 *         return self.x.ind(v.x)
 * 
 *     def set_vertex(self, int i, Delaunay3_vertex v):             # <<<<<<<<<<<<<<
 *         r"""Set the ith vertex of this cell.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1412
 *         self.x.set_vertex(i, v.x)
 * 
 *     def set_vertices(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                      Delaunay3_vertex v3, Delaunay3_vertex v4):
 *         r"""Set this cell's vertices.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_27set_vertices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_26set_vertices[] = "Set this cell's vertices. \n\n        Args: \n            v1 (Delaunay2_vertex): 1st vertex of cell. \n            v2 (Delaunay2_vertex): 2nd vertex of cell. \n            v3 (Delaunay2_vertex): 3rd vertex of cell. \n            v4 (Delaunay2_vertex): 4th vertex of cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_27set_vertices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v4 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vertices (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_v1,&__pyx_n_s_v2,&__pyx_n_s_v3,&__pyx_n_s_v4,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_vertices", 1, 4, 4, 1); __PYX_ERR(0, 1412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_vertices", 1, 4, 4, 2); __PYX_ERR(0, 1412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_vertices", 1, 4, 4, 3); __PYX_ERR(0, 1412, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_vertices") < 0)) __PYX_ERR(0, 1412, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_v1 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_v2 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[1]);
    __pyx_v_v3 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[2]);
    __pyx_v_v4 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_vertices", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1412, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.set_vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v1), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v1", 0))) __PYX_ERR(0, 1412, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v2), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v2", 0))) __PYX_ERR(0, 1412, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v3), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v3", 0))) __PYX_ERR(0, 1413, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v4), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v4", 0))) __PYX_ERR(0, 1413, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_26set_vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), __pyx_v_v1, __pyx_v_v2, __pyx_v_v3, __pyx_v_v4);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_26set_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v4) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vertices", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1423
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_vertices(v1.x, v2.x, v3.x, v4.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1424
 *         """
 *         self.T.updated = <cbool>True
 *         self.x.set_vertices(v1.x, v2.x, v3.x, v4.x)             # <<<<<<<<<<<<<<
 * 
 *     def reset_vertices(self):
 */
  __pyx_v_self->x.set_vertices(__pyx_v_v1->x, __pyx_v_v2->x, __pyx_v_v3->x, __pyx_v_v4->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1412
 *         self.x.set_vertex(i, v.x)
 * 
 *     def set_vertices(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                      Delaunay3_vertex v3, Delaunay3_vertex v4):
 *         r"""Set this cell's vertices.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1426
 *         self.x.set_vertices(v1.x, v2.x, v3.x, v4.x)
 * 
 *     def reset_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Reset all of this cell's vertices."""
 *         self.T.updated = <cbool>True
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_29reset_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_28reset_vertices[] = "Reset all of this cell's vertices.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_29reset_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_28reset_vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_28reset_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_vertices", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1428
 *     def reset_vertices(self):
 *         r"""Reset all of this cell's vertices."""
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_vertices()
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1429
 *         r"""Reset all of this cell's vertices."""
 *         self.T.updated = <cbool>True
 *         self.x.set_vertices()             # <<<<<<<<<<<<<<
 * 
 *     def set_neighbor(self, int i, Delaunay3_cell n):
 */
  __pyx_v_self->x.set_vertices();

  /* "cgal4py/delaunay/delaunay3.pyx":1426
 *         self.x.set_vertices(v1.x, v2.x, v3.x, v4.x)
 * 
 *     def reset_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Reset all of this cell's vertices."""
 *         self.T.updated = <cbool>True
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1431
 *         self.x.set_vertices()
 * 
 *     def set_neighbor(self, int i, Delaunay3_cell n):             # <<<<<<<<<<<<<<
 *         r"""Set the ith neighboring cell of this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_31set_neighbor(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_30set_neighbor[] = "Set the ith neighboring cell of this cell. \n\n        Args: \n            i (int): Index of this cell's neighbor that should be set. \n            n (Delaunay3_cell): Cell to set ith neighbor of this cell to. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_31set_neighbor(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_i;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_n = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_neighbor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_n,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_neighbor", 1, 2, 2, 1); __PYX_ERR(0, 1431, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_neighbor") < 0)) __PYX_ERR(0, 1431, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L3_error)
    __pyx_v_n = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_neighbor", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1431, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.set_neighbor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_n), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "n", 0))) __PYX_ERR(0, 1431, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_30set_neighbor(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), __pyx_v_i, __pyx_v_n);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_30set_neighbor(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, int __pyx_v_i, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_n) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_neighbor", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1439
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_neighbor(i, n.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1440
 *         """
 *         self.T.updated = <cbool>True
 *         self.x.set_neighbor(i, n.x)             # <<<<<<<<<<<<<<
 * 
 *     def set_neighbors(self, Delaunay3_cell c1, Delaunay3_cell c2,
 */
  __pyx_v_self->x.set_neighbor(__pyx_v_i, __pyx_v_n->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1431
 *         self.x.set_vertices()
 * 
 *     def set_neighbor(self, int i, Delaunay3_cell n):             # <<<<<<<<<<<<<<
 *         r"""Set the ith neighboring cell of this cell.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1442
 *         self.x.set_neighbor(i, n.x)
 * 
 *     def set_neighbors(self, Delaunay3_cell c1, Delaunay3_cell c2,             # <<<<<<<<<<<<<<
 *                       Delaunay3_cell c3, Delaunay3_cell c4):
 *         r"""Set this cell's neighboring cells.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_33set_neighbors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_32set_neighbors[] = "Set this cell's neighboring cells. \n\n        Args: \n            c1 (Delaunay3_cell): 1st neighboring cell. \n            c2 (Delaunay3_cell): 2nd neighboring cell. \n            c3 (Delaunay3_cell): 3rd neighboring cell. \n            c4 (Delaunay3_cell): 4th neighboring cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_33set_neighbors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c1 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c2 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c3 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c4 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_neighbors (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_c3,&__pyx_n_s_c4,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_neighbors", 1, 4, 4, 1); __PYX_ERR(0, 1442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_neighbors", 1, 4, 4, 2); __PYX_ERR(0, 1442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_neighbors", 1, 4, 4, 3); __PYX_ERR(0, 1442, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_neighbors") < 0)) __PYX_ERR(0, 1442, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_c1 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_c2 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[1]);
    __pyx_v_c3 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[2]);
    __pyx_v_c4 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_neighbors", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1442, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.set_neighbors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c1), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c1", 0))) __PYX_ERR(0, 1442, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c2), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c2", 0))) __PYX_ERR(0, 1442, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c3), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c3", 0))) __PYX_ERR(0, 1443, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c4), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c4", 0))) __PYX_ERR(0, 1443, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_32set_neighbors(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), __pyx_v_c1, __pyx_v_c2, __pyx_v_c3, __pyx_v_c4);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_32set_neighbors(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c4) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_neighbors", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1453
 * 
 *         """
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_neighbors(c1.x, c2.x, c3.x, c4.x)
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1454
 *         """
 *         self.T.updated = <cbool>True
 *         self.x.set_neighbors(c1.x, c2.x, c3.x, c4.x)             # <<<<<<<<<<<<<<
 * 
 *     def reset_neighbors(self):
 */
  __pyx_v_self->x.set_neighbors(__pyx_v_c1->x, __pyx_v_c2->x, __pyx_v_c3->x, __pyx_v_c4->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1442
 *         self.x.set_neighbor(i, n.x)
 * 
 *     def set_neighbors(self, Delaunay3_cell c1, Delaunay3_cell c2,             # <<<<<<<<<<<<<<
 *                       Delaunay3_cell c3, Delaunay3_cell c4):
 *         r"""Set this cell's neighboring cells.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1456
 *         self.x.set_neighbors(c1.x, c2.x, c3.x, c4.x)
 * 
 *     def reset_neighbors(self):             # <<<<<<<<<<<<<<
 *         r"""Reset all of this cell's neighboring cells."""
 *         self.T.updated = <cbool>True
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_35reset_neighbors(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_34reset_neighbors[] = "Reset all of this cell's neighboring cells.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_35reset_neighbors(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_neighbors (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_34reset_neighbors(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_34reset_neighbors(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_neighbors", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1458
 *     def reset_neighbors(self):
 *         r"""Reset all of this cell's neighboring cells."""
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 *         self.x.set_neighbors()
 * 
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1459
 *         r"""Reset all of this cell's neighboring cells."""
 *         self.T.updated = <cbool>True
 *         self.x.set_neighbors()             # <<<<<<<<<<<<<<
 * 
 *     property center:
 */
  __pyx_v_self->x.set_neighbors();

  /* "cgal4py/delaunay/delaunay3.pyx":1456
 *         self.x.set_neighbors(c1.x, c2.x, c3.x, c4.x)
 * 
 *     def reset_neighbors(self):             # <<<<<<<<<<<<<<
 *         r"""Reset all of this cell's neighboring cells."""
 *         self.T.updated = <cbool>True
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1463
 *     property center:
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6center_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6center_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6center___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6center___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1464
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1464, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1464, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1464, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":1465
 *         def __get__(self):
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')             # <<<<<<<<<<<<<<
 *             else:
 *                 return (self.vertex(0).point + \
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1464
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):
 *             if self.is_infinite():             # <<<<<<<<<<<<<<
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1467
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);

    /* "cgal4py/delaunay/delaunay3.pyx":1470
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0             # <<<<<<<<<<<<<<
 * 
 *     property circumcenter:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1467, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "cgal4py/delaunay/delaunay3.pyx":1467
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1467, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_point); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1467, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1468
 *             else:
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1467
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 */
    __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1467, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1469
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(3).point)/4.0
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1468
 *             else:
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0
 */
    __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1470
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0             # <<<<<<<<<<<<<<
 * 
 *     property circumcenter:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1469
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(3).point)/4.0
 * 
 */
    __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1470
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0             # <<<<<<<<<<<<<<
 * 
 *     property circumcenter:
 */
    __pyx_t_2 = __Pyx_PyFloat_DivideObjC(__pyx_t_1, __pyx_float_4_0, 4.0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1463
 *     property center:
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell center."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.center.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1474
 *     property circumcenter:
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell circumcenter."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             self.T.circumcenter(self.x, &out[0])
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12circumcenter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12circumcenter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12circumcenter___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12circumcenter___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyArrayObject *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_out;
  __Pyx_Buffer __pyx_pybuffer_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyArrayObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_pybuffer_out.pybuffer.buf = NULL;
  __pyx_pybuffer_out.refcount = 0;
  __pyx_pybuffernd_out.data = NULL;
  __pyx_pybuffernd_out.rcbuffer = &__pyx_pybuffer_out;

  /* "cgal4py/delaunay/delaunay3.pyx":1475
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell circumcenter."""
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')             # <<<<<<<<<<<<<<
 *             self.T.circumcenter(self.x, &out[0])
 *             return out
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1475, __pyx_L1_error)
  __pyx_t_3 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_t_3, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_out = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_out.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1475, __pyx_L1_error)
    } else {__pyx_pybuffernd_out.diminfo[0].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_out.diminfo[0].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_3 = 0;
  __pyx_v_out = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1476
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             self.T.circumcenter(self.x, &out[0])             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_out.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_out.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(0, 1476, __pyx_L1_error)
  }
  __pyx_v_self->T->circumcenter(__pyx_v_self->x, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_out.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_out.diminfo[0].strides))));

  /* "cgal4py/delaunay/delaunay3.pyx":1477
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             self.T.circumcenter(self.x, &out[0])
 *             return out             # <<<<<<<<<<<<<<
 * 
 *     property min_angle:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1474
 *     property circumcenter:
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell circumcenter."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             self.T.circumcenter(self.x, &out[0])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.circumcenter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1481
 *     property min_angle:
 *         r"double: The smallest solid angle in this cell in steradians."
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.min_angle()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9min_angle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9min_angle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9min_angle___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9min_angle___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1482
 *         r"double: The smallest solid angle in this cell in steradians."
 *         def __get__(self):
 *             return self.x.min_angle()             # <<<<<<<<<<<<<<
 * 
 *     def incident_vertices(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x.min_angle()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1481
 *     property min_angle:
 *         r"double: The smallest solid angle in this cell in steradians."
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.x.min_angle()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.min_angle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1484
 *             return self.x.min_angle()
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are incident to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_37incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_36incident_vertices[] = "Find vertices that are incident to this cell.\n\n        Returns:\n            Delaunay3_vertex_vector: Iterator over vertices incident to this \n                cell.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_37incident_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_36incident_vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_36incident_vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_vertices", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1493
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_vertices(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1494
 *         cdef vector[Delaunay_with_info_3[info_t].Vertex] it
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1494, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1495
 *         it = self.T.incident_vertices(self.x)
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":1496
 *         cdef Delaunay3_vertex_vector out = Delaunay3_vertex_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1484
 *             return self.x.min_angle()
 * 
 *     def incident_vertices(self):             # <<<<<<<<<<<<<<
 *         r"""Find vertices that are incident to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.incident_vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1498
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_39incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_38incident_edges[] = "Find edges that are incident to this cell.\n\n        Returns:\n            Delaunay3_edge_vector: Iterator over edges incident to this cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_39incident_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_38incident_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_38incident_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1506
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_edges(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1507
 *         cdef vector[Delaunay_with_info_3[info_t].Edge] it
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1508
 *         it = self.T.incident_edges(self.x)
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":1509
 *         cdef Delaunay3_edge_vector out = Delaunay3_edge_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1498
 *         return out
 * 
 *     def incident_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Find edges that are incident to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.incident_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1511
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_41incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_40incident_facets[] = "Find facets that are incident to this cell.\n\n        Returns:\n            Delaunay3_facet_vector: Iterator over facets incident to this cell. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_41incident_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_40incident_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_40incident_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1519
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_facets(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1520
 *         cdef vector[Delaunay_with_info_3[info_t].Facet] it
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1521
 *         it = self.T.incident_facets(self.x)
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":1522
 *         cdef Delaunay3_facet_vector out = Delaunay3_facet_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def incident_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1511
 *         return out
 * 
 *     def incident_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Find facets that are incident to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.incident_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1524
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_43incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_42incident_cells[] = "Find cells that are incident to this cell.\n\n        Returns:\n            Delaunay3_cell_vector: Iterator over cells incident to this cell.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_43incident_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incident_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_42incident_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_42incident_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  __pyx_v_it;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("incident_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1532
 *         """
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 */
  __pyx_v_it = __pyx_v_self->T->incident_cells(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1533
 *         cdef vector[Delaunay_with_info_3[info_t].Cell] it
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, it)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1534
 *         it = self.T.incident_cells(self.x)
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_it);

  /* "cgal4py/delaunay/delaunay3.pyx":1535
 *         cdef Delaunay3_cell_vector out = Delaunay3_cell_vector()
 *         out.assign(self.T, it)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1524
 *         return out
 * 
 *     def incident_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Find cells that are incident to this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.incident_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1537
 *         return out
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):             # <<<<<<<<<<<<<<
 *         r"""Determine if a point is inside, outside or on this cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_45side(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_44side[] = "Determine if a point is inside, outside or on this cell.\n\n        Args:\n            p (np.ndarray of float64): x,y,z coordinates.\n\n        Returns:\n            int: -1 if p is inside this cell, 0 if p is on one of this cell's \n                vertices, edges, or facets, and 1 if p is outside this cell.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_45side(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("side (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5numpy_ndarray, 1, "p", 0))) __PYX_ERR(0, 1537, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_44side(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((PyArrayObject *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_44side(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, PyArrayObject *__pyx_v_p) {
  int __pyx_v_lt;
  int __pyx_v_li;
  int __pyx_v_lj;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_p;
  __Pyx_Buffer __pyx_pybuffer_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("side", 0);
  __pyx_pybuffer_p.pybuffer.buf = NULL;
  __pyx_pybuffer_p.refcount = 0;
  __pyx_pybuffernd_p.data = NULL;
  __pyx_pybuffernd_p.rcbuffer = &__pyx_pybuffer_p;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_p.rcbuffer->pybuffer, (PyObject*)__pyx_v_p, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1537, __pyx_L1_error)
  }
  __pyx_pybuffernd_p.diminfo[0].strides = __pyx_pybuffernd_p.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_p.diminfo[0].shape = __pyx_pybuffernd_p.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":1549
 *         """
 *         cdef int lt, li, lj
 *         lt = li = lj = 999             # <<<<<<<<<<<<<<
 *         return self.T.side_of_cell(&p[0], self.x, lt, li, lj)
 * 
 */
  __pyx_v_lt = 0x3E7;
  __pyx_v_li = 0x3E7;
  __pyx_v_lj = 0x3E7;

  /* "cgal4py/delaunay/delaunay3.pyx":1550
 *         cdef int lt, li, lj
 *         lt = li = lj = 999
 *         return self.T.side_of_cell(&p[0], self.x, lt, li, lj)             # <<<<<<<<<<<<<<
 * 
 *     def side_of_sphere(self, np.ndarray[np.float64_t, ndim=1] pos):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_p.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_p.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1550, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->T->side_of_cell((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_p.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_p.diminfo[0].strides))), __pyx_v_self->x, __pyx_v_lt, __pyx_v_li, __pyx_v_lj)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1537
 *         return out
 * 
 *     def side(self, np.ndarray[np.float64_t, ndim=1] p):             # <<<<<<<<<<<<<<
 *         r"""Determine if a point is inside, outside or on this cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_p.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.side", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_p.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1552
 *         return self.T.side_of_cell(&p[0], self.x, lt, li, lj)
 * 
 *     def side_of_sphere(self, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Determine where a point is with repect to this cell's
 *             circumsphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_47side_of_sphere(PyObject *__pyx_v_self, PyObject *__pyx_v_pos); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_46side_of_sphere[] = "Determine where a point is with repect to this cell's \n            circumsphere. \n\n        Args: \n            pos (:obj:`ndarray` of np.float64): x,y,z coordinates. \n\n        Returns: \n            int: -1, 0, or 1 if `pos` is within, on, or inside this cell's \n                circumsphere respectively. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_47side_of_sphere(PyObject *__pyx_v_self, PyObject *__pyx_v_pos) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("side_of_sphere (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 1552, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_46side_of_sphere(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((PyArrayObject *)__pyx_v_pos));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_46side_of_sphere(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, PyArrayObject *__pyx_v_pos) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("side_of_sphere", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1552, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":1564
 * 
 *         """
 *         return self.T.side_of_sphere(self.x, &pos[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_pos.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_pos.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1564, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->T->side_of_sphere(__pyx_v_self->x, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_pos.diminfo[0].strides))))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1552
 *         return self.T.side_of_cell(&p[0], self.x, lt, li, lj)
 * 
 *     def side_of_sphere(self, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Determine where a point is with repect to this cell's
 *             circumsphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.side_of_sphere", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_49__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_49__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_48__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_48__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_51__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_51__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_50__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_50__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1587
 *     cdef Delaunay_with_info_3[info_t].All_cells_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str cell = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if cell == 'all_begin':
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T = 0;
  PyObject *__pyx_v_cell = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_cell,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject*)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cell);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1587, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_T = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)values[0]);
    __pyx_v_cell = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1587, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_T), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, 1, "T", 0))) __PYX_ERR(0, 1587, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cell), (&PyString_Type), 1, "cell", 1))) __PYX_ERR(0, 1587, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self), __pyx_v_T, __pyx_v_cell);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_T, PyObject *__pyx_v_cell) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1588
 * 
 *     def __cinit__(self, Delaunay3 T, str cell = None):
 *         self.T = T.T             # <<<<<<<<<<<<<<
 *         if cell == 'all_begin':
 *             self.x = self.T.all_cells_begin()
 */
  __pyx_t_1 = __pyx_v_T->T;
  __pyx_v_self->T = __pyx_t_1;

  /* "cgal4py/delaunay/delaunay3.pyx":1589
 *     def __cinit__(self, Delaunay3 T, str cell = None):
 *         self.T = T.T
 *         if cell == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_cells_begin()
 *         elif cell == 'all_end':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_cell, __pyx_n_s_all_begin, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1589, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":1590
 *         self.T = T.T
 *         if cell == 'all_begin':
 *             self.x = self.T.all_cells_begin()             # <<<<<<<<<<<<<<
 *         elif cell == 'all_end':
 *             self.x = self.T.all_cells_end()
 */
    __pyx_v_self->x = __pyx_v_self->T->all_cells_begin();

    /* "cgal4py/delaunay/delaunay3.pyx":1589
 *     def __cinit__(self, Delaunay3 T, str cell = None):
 *         self.T = T.T
 *         if cell == 'all_begin':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_cells_begin()
 *         elif cell == 'all_end':
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1591
 *         if cell == 'all_begin':
 *             self.x = self.T.all_cells_begin()
 *         elif cell == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_cells_end()
 * 
 */
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_v_cell, __pyx_n_s_all_end, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1591, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "cgal4py/delaunay/delaunay3.pyx":1592
 *             self.x = self.T.all_cells_begin()
 *         elif cell == 'all_end':
 *             self.x = self.T.all_cells_end()             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_cell_iter self, Delaunay3_cell_iter solf, int op):
 */
    __pyx_v_self->x = __pyx_v_self->T->all_cells_end();

    /* "cgal4py/delaunay/delaunay3.pyx":1591
 *         if cell == 'all_begin':
 *             self.x = self.T.all_cells_begin()
 *         elif cell == 'all_end':             # <<<<<<<<<<<<<<
 *             self.x = self.T.all_cells_end()
 * 
 */
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":1587
 *     cdef Delaunay_with_info_3[info_t].All_cells_iter x
 * 
 *     def __cinit__(self, Delaunay3 T, str cell = None):             # <<<<<<<<<<<<<<
 *         self.T = T.T
 *         if cell == 'all_begin':
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1594
 *             self.x = self.T.all_cells_end()
 * 
 *     def __richcmp__(Delaunay3_cell_iter self, Delaunay3_cell_iter solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_3__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, 1, "solf", 0))) __PYX_ERR(0, 1594, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_2__richcmp__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_solf), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_2__richcmp__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_solf, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1595
 * 
 *     def __richcmp__(Delaunay3_cell_iter self, Delaunay3_cell_iter solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
  switch (__pyx_v_op) {
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":1596
 *     def __richcmp__(Delaunay3_cell_iter self, Delaunay3_cell_iter solf, int op):
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)             # <<<<<<<<<<<<<<
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x == __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1596, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1596, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1595
 * 
 *     def __richcmp__(Delaunay3_cell_iter self, Delaunay3_cell_iter solf, int op):
 *         if (op == 2):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":1597
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":1598
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):
 *             return <pybool>(self.x != solf.x)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->x != __pyx_v_solf->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1598, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1598, __pyx_L1_error)
    __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
    __pyx_r = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1597
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 *         elif (op == 3):             # <<<<<<<<<<<<<<
 *             return <pybool>(self.x != solf.x)
 *         else:
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":1600
 *             return <pybool>(self.x != solf.x)
 *         else:
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def is_infinite(self):
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    __PYX_ERR(0, 1600, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1594
 *             self.x = self.T.all_cells_end()
 * 
 *     def __richcmp__(Delaunay3_cell_iter self, Delaunay3_cell_iter solf, int op):             # <<<<<<<<<<<<<<
 *         if (op == 2):
 *             return <pybool>(self.x == solf.x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1602
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the cell is incident to the infinite vertex.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4is_infinite[] = "Determine if the cell is incident to the infinite vertex.\n\n        Returns:\n            bool: True if the cell is incident to the infinite vertex, False \n                otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_5is_infinite(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_infinite (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4is_infinite(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4is_infinite(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_infinite", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1610
 * 
 *         """
 *         return self.T.is_infinite(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def increment(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->T->is_infinite(__pyx_v_self->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1602
 *             raise NotImplementedError
 * 
 *     def is_infinite(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the cell is incident to the infinite vertex.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.is_infinite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1612
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next cell in the triangulation."""
 *         preincrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_6increment[] = "Advance to the next cell in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_7increment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_6increment(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_6increment(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("increment", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1614
 *     def increment(self):
 *         r"""Advance to the next cell in the triangulation."""
 *         preincrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     def decrement(self):
 */
  (void)((++__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":1612
 *         return self.T.is_infinite(self.x)
 * 
 *     def increment(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the next cell in the triangulation."""
 *         preincrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1616
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous cell in the triangulation."""
 *         predecrement(self.x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_8decrement[] = "Advance to the previous cell in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_9decrement(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_8decrement(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_8decrement(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decrement", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1618
 *     def decrement(self):
 *         r"""Advance to the previous cell in the triangulation."""
 *         predecrement(self.x)             # <<<<<<<<<<<<<<
 * 
 *     property cell:
 */
  (void)((--__pyx_v_self->x));

  /* "cgal4py/delaunay/delaunay3.pyx":1616
 *         preincrement(self.x)
 * 
 *     def decrement(self):             # <<<<<<<<<<<<<<
 *         r"""Advance to the previous cell in the triangulation."""
 *         predecrement(self.x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1622
 *     property cell:
 *         r"""Delaunay3_cell: Corresponding cell object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.T = self.T
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4cell_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4cell_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4cell___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4cell___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_2;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1623
 *         r"""Delaunay3_cell: Corresponding cell object."""
 *         def __get__(self):
 *             cdef Delaunay3_cell out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             out.T = self.T
 *             out.x = Delaunay_with_info_3[info_t].Cell(self.x)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1624
 *         def __get__(self):
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.T = self.T             # <<<<<<<<<<<<<<
 *             out.x = Delaunay_with_info_3[info_t].Cell(self.x)
 *             return out
 */
  __pyx_t_2 = __pyx_v_self->T;
  __pyx_v_out->T = __pyx_t_2;

  /* "cgal4py/delaunay/delaunay3.pyx":1625
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.T = self.T
 *             out.x = Delaunay_with_info_3[info_t].Cell(self.x)             # <<<<<<<<<<<<<<
 *             return out
 * 
 */
  __pyx_v_out->x = Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell(__pyx_v_self->x);

  /* "cgal4py/delaunay/delaunay3.pyx":1626
 *             out.T = self.T
 *             out.x = Delaunay_with_info_3[info_t].Cell(self.x)
 *             return out             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1622
 *     property cell:
 *         r"""Delaunay3_cell: Corresponding cell object."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Delaunay3_cell out = Delaunay3_cell()
 *             out.T = self.T
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.cell.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_10__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_12__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_iter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1649
 *     cdef Delaunay3_cell_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_cell_iter xstart, Delaunay3_cell_iter xstop,             # <<<<<<<<<<<<<<
 *                   pybool finite = False):
 *         self.x = xstart
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_xstart = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_xstop = 0;
  PyBoolObject *__pyx_v_finite = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xstart,&__pyx_n_s_xstop,&__pyx_n_s_finite,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":1650
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_cell_iter xstart, Delaunay3_cell_iter xstop,
 *                   pybool finite = False):             # <<<<<<<<<<<<<<
 *         self.x = xstart
 *         self.xstop = xstop
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstart)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xstop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 1649, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_finite);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1649, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xstart = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)values[0]);
    __pyx_v_xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)values[1]);
    __pyx_v_finite = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1649, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_range.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstart), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, 1, "xstart", 0))) __PYX_ERR(0, 1649, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xstop), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, 1, "xstop", 0))) __PYX_ERR(0, 1649, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_finite), __pyx_ptype_7cpython_4bool_bool, 1, "finite", 0))) __PYX_ERR(0, 1650, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)__pyx_v_self), __pyx_v_xstart, __pyx_v_xstop, __pyx_v_finite);

  /* "cgal4py/delaunay/delaunay3.pyx":1649
 *     cdef Delaunay3_cell_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_cell_iter xstart, Delaunay3_cell_iter xstop,             # <<<<<<<<<<<<<<
 *                   pybool finite = False):
 *         self.x = xstart
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_xstart, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *__pyx_v_xstop, PyBoolObject *__pyx_v_finite) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1651
 *     def __cinit__(self, Delaunay3_cell_iter xstart, Delaunay3_cell_iter xstop,
 *                   pybool finite = False):
 *         self.x = xstart             # <<<<<<<<<<<<<<
 *         self.xstop = xstop
 *         self.finite = finite
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstart));
  __Pyx_GOTREF(__pyx_v_self->x);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->x));
  __pyx_v_self->x = __pyx_v_xstart;

  /* "cgal4py/delaunay/delaunay3.pyx":1652
 *                   pybool finite = False):
 *         self.x = xstart
 *         self.xstop = xstop             # <<<<<<<<<<<<<<
 *         self.finite = finite
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_xstop));
  __Pyx_GOTREF(__pyx_v_self->xstop);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->xstop));
  __pyx_v_self->xstop = __pyx_v_xstop;

  /* "cgal4py/delaunay/delaunay3.pyx":1653
 *         self.x = xstart
 *         self.xstop = xstop
 *         self.finite = finite             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_finite));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_finite));
  __Pyx_GOTREF(__pyx_v_self->finite);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->finite));
  __pyx_v_self->finite = __pyx_v_finite;

  /* "cgal4py/delaunay/delaunay3.pyx":1649
 *     cdef Delaunay3_cell_iter xstop
 *     cdef pybool finite
 *     def __cinit__(self, Delaunay3_cell_iter xstart, Delaunay3_cell_iter xstop,             # <<<<<<<<<<<<<<
 *                   pybool finite = False):
 *         self.x = xstart
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1655
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_2__iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_2__iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1656
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1655
 *         self.finite = finite
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1658
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_5__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_5__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_4__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_4__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1659
 * 
 *     def __next__(self):
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_self->finite)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1659, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":1660
 *     def __next__(self):
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():             # <<<<<<<<<<<<<<
 *                 self.x.increment()
 *         cdef Delaunay3_cell out
 */
    while (1) {
      __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1660, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1660, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_3) {
      } else {
        __pyx_t_1 = __pyx_t_3;
        goto __pyx_L6_bool_binop_done;
      }
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_is_infinite); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1660, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1660, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1660, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_1 = __pyx_t_3;
      __pyx_L6_bool_binop_done:;
      if (!__pyx_t_1) break;

      /* "cgal4py/delaunay/delaunay3.pyx":1661
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell out
 *         if self.x != self.xstop:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1661, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1661, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1661, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":1659
 * 
 *     def __next__(self):
 *         if self.finite:             # <<<<<<<<<<<<<<
 *             while (self.x != self.xstop) and self.x.is_infinite():
 *                 self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1663
 *                 self.x.increment()
 *         cdef Delaunay3_cell out
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.cell
 *             self.x.increment()
 */
  __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_self->x), ((PyObject *)__pyx_v_self->xstop), Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1663, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1663, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1664
 *         cdef Delaunay3_cell out
 *         if self.x != self.xstop:
 *             out = self.x.cell             # <<<<<<<<<<<<<<
 *             self.x.increment()
 *             return out
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_cell); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1664, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell))))) __PYX_ERR(0, 1664, __pyx_L1_error)
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1665
 *         if self.x != self.xstop:
 *             out = self.x.cell
 *             self.x.increment()             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->x), __pyx_n_s_increment); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1665, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1665, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1665, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1666
 *             out = self.x.cell
 *             self.x.increment()
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1663
 *                 self.x.increment()
 *         cdef Delaunay3_cell out
 *         if self.x != self.xstop:             # <<<<<<<<<<<<<<
 *             out = self.x.cell
 *             self.x.increment()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1668
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 * cdef class Delaunay3_cell_vector:
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1668, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1658
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self.finite:
 *             while (self.x != self.xstop) and self.x.is_infinite():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_range.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_range.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__54, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_range.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1687
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Cell] v):
 *         r"""Assign C++ attributes.
 */

static void __pyx_f_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_assign(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_v_T, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell>  __pyx_v_v) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("assign", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1698
 * 
 *         """
 *         self.T = T             # <<<<<<<<<<<<<<
 *         self.v = v
 *         self.n = v.size()
 */
  __pyx_v_self->T = __pyx_v_T;

  /* "cgal4py/delaunay/delaunay3.pyx":1699
 *         """
 *         self.T = T
 *         self.v = v             # <<<<<<<<<<<<<<
 *         self.n = v.size()
 *         self.i = 0
 */
  __pyx_v_self->v = __pyx_v_v;

  /* "cgal4py/delaunay/delaunay3.pyx":1700
 *         self.T = T
 *         self.v = v
 *         self.n = v.size()             # <<<<<<<<<<<<<<
 *         self.i = 0
 * 
 */
  __pyx_v_self->n = __pyx_v_v.size();

  /* "cgal4py/delaunay/delaunay3.pyx":1701
 *         self.v = v
 *         self.n = v.size()
 *         self.i = 0             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_v_self->i = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1687
 *     cdef int i
 * 
 *     cdef void assign(self, Delaunay_with_info_3[info_t] *T,             # <<<<<<<<<<<<<<
 *                      vector[Delaunay_with_info_3[info_t].Cell] v):
 *         r"""Assign C++ attributes.
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cgal4py/delaunay/delaunay3.pyx":1703
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_1__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_1__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector___iter__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector___iter__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1704
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1703
 *         self.i = 0
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1706
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell out
 *         if self.i < self.n:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_3__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_3__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_2__next__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_2__next__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_3;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1708
 *     def __next__(self):
 *         cdef Delaunay3_cell out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_cell()
 *             out.T = self.T
 */
  __pyx_t_1 = ((__pyx_v_self->i < __pyx_v_self->n) != 0);
  if (likely(__pyx_t_1)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1709
 *         cdef Delaunay3_cell out
 *         if self.i < self.n:
 *             out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             out.T = self.T
 *             out.x = self.v[self.i]
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1709, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1710
 *         if self.i < self.n:
 *             out = Delaunay3_cell()
 *             out.T = self.T             # <<<<<<<<<<<<<<
 *             out.x = self.v[self.i]
 *             self.i += 1
 */
    __pyx_t_3 = __pyx_v_self->T;
    __pyx_v_out->T = __pyx_t_3;

    /* "cgal4py/delaunay/delaunay3.pyx":1711
 *             out = Delaunay3_cell()
 *             out.T = self.T
 *             out.x = self.v[self.i]             # <<<<<<<<<<<<<<
 *             self.i += 1
 *             return out
 */
    __pyx_v_out->x = (__pyx_v_self->v[__pyx_v_self->i]);

    /* "cgal4py/delaunay/delaunay3.pyx":1712
 *             out.T = self.T
 *             out.x = self.v[self.i]
 *             self.i += 1             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_v_self->i = (__pyx_v_self->i + 1);

    /* "cgal4py/delaunay/delaunay3.pyx":1713
 *             out.x = self.v[self.i]
 *             self.i += 1
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1708
 *     def __next__(self):
 *         cdef Delaunay3_cell out
 *         if self.i < self.n:             # <<<<<<<<<<<<<<
 *             out = Delaunay3_cell()
 *             out.T = self.T
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1715
 *             return out
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, i):
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1715, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1706
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell out
 *         if self.i < self.n:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_vector.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1717
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell out
 *         if isinstance(i, int):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_4__getitem__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_4__getitem__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self, PyObject *__pyx_v_i) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ::size_type __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1719
 *     def __getitem__(self, i):
 *         cdef Delaunay3_cell out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_cell()
 *             out.assign(self.T, self.v[i])
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_i); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (likely(__pyx_t_2)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1720
 *         cdef Delaunay3_cell out
 *         if isinstance(i, int):
 *             out = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             out.assign(self.T, self.v[i])
 *             return out
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1720, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1721
 *         if isinstance(i, int):
 *             out = Delaunay3_cell()
 *             out.assign(self.T, self.v[i])             # <<<<<<<<<<<<<<
 *             return out
 *         else:
 */
    __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_4 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1721, __pyx_L1_error)
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, (__pyx_v_self->v[__pyx_t_4]));

    /* "cgal4py/delaunay/delaunay3.pyx":1722
 *             out = Delaunay3_cell()
 *             out.assign(self.T, self.v[i])
 *             return out             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Delaunay3_cell_vector indices must be itegers, "+
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":1719
 *     def __getitem__(self, i):
 *         cdef Delaunay3_cell out
 *         if isinstance(i, int):             # <<<<<<<<<<<<<<
 *             out = Delaunay3_cell()
 *             out.assign(self.T, self.v[i])
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1724
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_cell_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
  /*else*/ {

    /* "cgal4py/delaunay/delaunay3.pyx":1725
 *         else:
 *             raise TypeError("Delaunay3_cell_vector indices must be itegers, "+
 *                             "not {}".format(type(i)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_not, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1725, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)Py_TYPE(__pyx_v_i))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1725, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1725, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, ((PyObject *)Py_TYPE(__pyx_v_i))};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1725, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1725, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_i)));
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, ((PyObject *)Py_TYPE(__pyx_v_i)));
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1725, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1724
 *             return out
 *         else:
 *             raise TypeError("Delaunay3_cell_vector indices must be itegers, "+             # <<<<<<<<<<<<<<
 *                             "not {}".format(type(i)))
 * 
 */
    __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Delaunay3_cell_vector_indices_mu, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1724, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1717
 *             raise StopIteration()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell out
 *         if isinstance(i, int):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_vector.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_6__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_vector.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_8__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3_cell_vector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1748
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T = new Delaunay_with_info_3[info_t]()
 */

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3___cinit__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3___cinit__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1749
 *     @cython.wraparound(False)
 *     def __cinit__(self):
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T = new Delaunay_with_info_3[info_t]()
 *         self.n = 0
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":1750
 *     def __cinit__(self):
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T = new Delaunay_with_info_3[info_t]()             # <<<<<<<<<<<<<<
 *         self.n = 0
 *         self.n_per_insert = []
 */
        try {
          __pyx_t_1 = new Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 1750, __pyx_L4_error)
        }
        __pyx_v_self->T = __pyx_t_1;
      }

      /* "cgal4py/delaunay/delaunay3.pyx":1749
 *     @cython.wraparound(False)
 *     def __cinit__(self):
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T = new Delaunay_with_info_3[info_t]()
 *         self.n = 0
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1751
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T = new Delaunay_with_info_3[info_t]()
 *         self.n = 0             # <<<<<<<<<<<<<<
 *         self.n_per_insert = []
 *         self._locked = False
 */
  __pyx_v_self->n = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1752
 *             self.T = new Delaunay_with_info_3[info_t]()
 *         self.n = 0
 *         self.n_per_insert = []             # <<<<<<<<<<<<<<
 *         self._locked = False
 *         self._cache_to_clear_on_update = {}
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->n_per_insert);
  __Pyx_DECREF(__pyx_v_self->n_per_insert);
  __pyx_v_self->n_per_insert = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1753
 *         self.n = 0
 *         self.n_per_insert = []
 *         self._locked = False             # <<<<<<<<<<<<<<
 *         self._cache_to_clear_on_update = {}
 * 
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF(__pyx_v_self->_locked);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_locked));
  __pyx_v_self->_locked = ((PyBoolObject *)Py_False);

  /* "cgal4py/delaunay/delaunay3.pyx":1754
 *         self.n_per_insert = []
 *         self._locked = False
 *         self._cache_to_clear_on_update = {}             # <<<<<<<<<<<<<<
 * 
 *     def _lock(self):
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1754, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_cache_to_clear_on_update);
  __Pyx_DECREF(__pyx_v_self->_cache_to_clear_on_update);
  __pyx_v_self->_cache_to_clear_on_update = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1748
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T = new Delaunay_with_info_3[info_t]()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1756
 *         self._cache_to_clear_on_update = {}
 * 
 *     def _lock(self):             # <<<<<<<<<<<<<<
 *         self._locked = True
 *     def _unlock(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_3_lock(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_3_lock(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_lock (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_2_lock(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_2_lock(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_lock", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1757
 * 
 *     def _lock(self):
 *         self._locked = True             # <<<<<<<<<<<<<<
 *     def _unlock(self):
 *         self._locked = False
 */
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  __Pyx_GOTREF(__pyx_v_self->_locked);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_locked));
  __pyx_v_self->_locked = ((PyBoolObject *)Py_True);

  /* "cgal4py/delaunay/delaunay3.pyx":1756
 *         self._cache_to_clear_on_update = {}
 * 
 *     def _lock(self):             # <<<<<<<<<<<<<<
 *         self._locked = True
 *     def _unlock(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1758
 *     def _lock(self):
 *         self._locked = True
 *     def _unlock(self):             # <<<<<<<<<<<<<<
 *         self._locked = False
 *     def _set_updated(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_5_unlock(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_5_unlock(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_unlock (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_4_unlock(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_4_unlock(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_unlock", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1759
 *         self._locked = True
 *     def _unlock(self):
 *         self._locked = False             # <<<<<<<<<<<<<<
 *     def _set_updated(self):
 *         self.T.updated = <cbool>True
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF(__pyx_v_self->_locked);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_locked));
  __pyx_v_self->_locked = ((PyBoolObject *)Py_False);

  /* "cgal4py/delaunay/delaunay3.pyx":1758
 *     def _lock(self):
 *         self._locked = True
 *     def _unlock(self):             # <<<<<<<<<<<<<<
 *         self._locked = False
 *     def _set_updated(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1760
 *     def _unlock(self):
 *         self._locked = False
 *     def _set_updated(self):             # <<<<<<<<<<<<<<
 *         self.T.updated = <cbool>True
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_set_updated(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_set_updated(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_set_updated (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_6_set_updated(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_6_set_updated(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_set_updated", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1761
 *         self._locked = False
 *     def _set_updated(self):
 *         self.T.updated = <cbool>True             # <<<<<<<<<<<<<<
 * 
 *     def _update_tess(self):
 */
  __pyx_v_self->T->updated = ((bool)1);

  /* "cgal4py/delaunay/delaunay3.pyx":1760
 *     def _unlock(self):
 *         self._locked = False
 *     def _set_updated(self):             # <<<<<<<<<<<<<<
 *         self.T.updated = <cbool>True
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1763
 *         self.T.updated = <cbool>True
 * 
 *     def _update_tess(self):             # <<<<<<<<<<<<<<
 *         if self.T.updated:
 *             self._cache_to_clear_on_update.clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9_update_tess(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9_update_tess(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_tess (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_8_update_tess(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_8_update_tess(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("_update_tess", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1764
 * 
 *     def _update_tess(self):
 *         if self.T.updated:             # <<<<<<<<<<<<<<
 *             self._cache_to_clear_on_update.clear()
 *             self.T.updated = <cbool>False
 */
  __pyx_t_1 = (__pyx_v_self->T->updated != 0);
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":1765
 *     def _update_tess(self):
 *         if self.T.updated:
 *             self._cache_to_clear_on_update.clear()             # <<<<<<<<<<<<<<
 *             self.T.updated = <cbool>False
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_cache_to_clear_on_update, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_4) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1765, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1765, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1766
 *         if self.T.updated:
 *             self._cache_to_clear_on_update.clear()
 *             self.T.updated = <cbool>False             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
    __pyx_v_self->T->updated = ((bool)0);

    /* "cgal4py/delaunay/delaunay3.pyx":1764
 * 
 *     def _update_tess(self):
 *         if self.T.updated:             # <<<<<<<<<<<<<<
 *             self._cache_to_clear_on_update.clear()
 *             self.T.updated = <cbool>False
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1763
 *         self.T.updated = <cbool>True
 * 
 *     def _update_tess(self):             # <<<<<<<<<<<<<<
 *         if self.T.updated:
 *             self._cache_to_clear_on_update.clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._update_tess", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1769
 * 
 *     @staticmethod
 *     def _update_to_tess(func):             # <<<<<<<<<<<<<<
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_11_update_to_tess(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_11_update_to_tess = {"_update_to_tess", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_11_update_to_tess, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_11_update_to_tess(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_func = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_update_to_tess (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_func,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_func)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_update_to_tess") < 0)) __PYX_ERR(0, 1769, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_func = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_update_to_tess", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1769, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._update_to_tess", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10_update_to_tess(__pyx_v_func);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1770
 *     @staticmethod
 *     def _update_to_tess(func):
 *         def wrapped_func(solf, *args, **kwargs):             # <<<<<<<<<<<<<<
 *             solf._lock()
 *             out = func(solf, *args, **kwargs)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_1wrapped_func(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_1wrapped_func = {"wrapped_func", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_1wrapped_func, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_1wrapped_func(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_solf = 0;
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("wrapped_func (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_solf,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_solf)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 1) ? pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, used_pos_args, "wrapped_func") < 0)) __PYX_ERR(0, 1770, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_solf = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("wrapped_func", 0, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1770, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._update_to_tess.wrapped_func", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_wrapped_func(__pyx_self, __pyx_v_solf, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_wrapped_func(PyObject *__pyx_self, PyObject *__pyx_v_solf, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *__pyx_cur_scope;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *__pyx_outer_scope;
  PyObject *__pyx_v_out = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("wrapped_func", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cgal4py/delaunay/delaunay3.pyx":1771
 *     def _update_to_tess(func):
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()             # <<<<<<<<<<<<<<
 *             out = func(solf, *args, **kwargs)
 *             solf._unlock()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_lock); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1771, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1771, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1772
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 *             out = func(solf, *args, **kwargs)             # <<<<<<<<<<<<<<
 *             solf._unlock()
 *             solf._set_updated()
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_func)) { __Pyx_RaiseClosureNameError("func"); __PYX_ERR(0, 1772, __pyx_L1_error) }
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_solf);
  __Pyx_GIVEREF(__pyx_v_solf);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_solf);
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_v_args); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_cur_scope->__pyx_v_func, __pyx_t_2, __pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_out = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1773
 *             solf._lock()
 *             out = func(solf, *args, **kwargs)
 *             solf._unlock()             # <<<<<<<<<<<<<<
 *             solf._set_updated()
 *             solf._update_tess()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_unlock); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1773, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1773, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1774
 *             out = func(solf, *args, **kwargs)
 *             solf._unlock()
 *             solf._set_updated()             # <<<<<<<<<<<<<<
 *             solf._update_tess()
 *             return out
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_set_updated); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1775
 *             solf._unlock()
 *             solf._set_updated()
 *             solf._update_tess()             # <<<<<<<<<<<<<<
 *             return out
 *         return wrapped_func
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_update_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1775, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1775, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1776
 *             solf._set_updated()
 *             solf._update_tess()
 *             return out             # <<<<<<<<<<<<<<
 *         return wrapped_func
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1770
 *     @staticmethod
 *     def _update_to_tess(func):
 *         def wrapped_func(solf, *args, **kwargs):             # <<<<<<<<<<<<<<
 *             solf._lock()
 *             out = func(solf, *args, **kwargs)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._update_to_tess.wrapped_func", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1769
 * 
 *     @staticmethod
 *     def _update_to_tess(func):             # <<<<<<<<<<<<<<
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 */

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10_update_to_tess(PyObject *__pyx_v_func) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *__pyx_cur_scope;
  PyObject *__pyx_v_wrapped_func = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_update_to_tess", 0);
  __pyx_cur_scope = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *)__pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess(__pyx_ptype_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1769, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_func = __pyx_v_func;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_func);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_func);

  /* "cgal4py/delaunay/delaunay3.pyx":1770
 *     @staticmethod
 *     def _update_to_tess(func):
 *         def wrapped_func(solf, *args, **kwargs):             # <<<<<<<<<<<<<<
 *             solf._lock()
 *             out = func(solf, *args, **kwargs)
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15_update_to_tess_1wrapped_func, 0, __pyx_n_s_update_to_tess_locals_wrapped_f, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cgal4py_delaunay_delaunay3, __pyx_d, ((PyObject *)__pyx_codeobj__58)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1770, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_wrapped_func = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1777
 *             solf._update_tess()
 *             return out
 *         return wrapped_func             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_wrapped_func);
  __pyx_r = __pyx_v_wrapped_func;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1769
 * 
 *     @staticmethod
 *     def _update_to_tess(func):             # <<<<<<<<<<<<<<
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._update_to_tess", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapped_func);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1780
 * 
 *     @staticmethod
 *     def _dependent_property(fget):             # <<<<<<<<<<<<<<
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13_dependent_property(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13_dependent_property = {"_dependent_property", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13_dependent_property, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13_dependent_property(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fget = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_dependent_property (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fget,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fget)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_dependent_property") < 0)) __PYX_ERR(0, 1780, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fget = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_dependent_property", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1780, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._dependent_property", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12_dependent_property(__pyx_v_fget);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1782
 *     def _dependent_property(fget):
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):             # <<<<<<<<<<<<<<
 *             if solf._locked:
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_1wrapped_fget(PyObject *__pyx_self, PyObject *__pyx_v_solf); /*proto*/
static PyMethodDef __pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_1wrapped_fget = {"wrapped_fget", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_1wrapped_fget, METH_O, 0};
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_1wrapped_fget(PyObject *__pyx_self, PyObject *__pyx_v_solf) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("wrapped_fget (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_wrapped_fget(__pyx_self, ((PyObject *)__pyx_v_solf));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_wrapped_fget(PyObject *__pyx_self, PyObject *__pyx_v_solf) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *__pyx_cur_scope;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("wrapped_fget", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cgal4py/delaunay/delaunay3.pyx":1783
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 *             if solf._locked:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 *             solf._update_tess()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_locked); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1783, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "cgal4py/delaunay/delaunay3.pyx":1784
 *         def wrapped_fget(solf):
 *             if solf._locked:
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))             # <<<<<<<<<<<<<<
 *             solf._update_tess()
 *             if attr not in solf._cache_to_clear_on_update:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Cannot_get_dependent_property_wh, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(!__pyx_cur_scope->__pyx_v_attr)) { __Pyx_RaiseClosureNameError("attr"); __PYX_ERR(0, 1784, __pyx_L1_error) }
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_cur_scope->__pyx_v_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1784, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_cur_scope->__pyx_v_attr};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1784, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_cur_scope->__pyx_v_attr};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1784, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1784, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_cur_scope->__pyx_v_attr);
        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_attr);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_cur_scope->__pyx_v_attr);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1784, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_RuntimeError, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1784, __pyx_L1_error)

    /* "cgal4py/delaunay/delaunay3.pyx":1783
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 *             if solf._locked:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 *             solf._update_tess()
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1785
 *             if solf._locked:
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 *             solf._update_tess()             # <<<<<<<<<<<<<<
 *             if attr not in solf._cache_to_clear_on_update:
 *                 solf._cache_to_clear_on_update[attr] = fget(solf)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_update_tess); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1785, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1785, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1786
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 *             solf._update_tess()
 *             if attr not in solf._cache_to_clear_on_update:             # <<<<<<<<<<<<<<
 *                 solf._cache_to_clear_on_update[attr] = fget(solf)
 *             return solf._cache_to_clear_on_update[attr]
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_attr)) { __Pyx_RaiseClosureNameError("attr"); __PYX_ERR(0, 1786, __pyx_L1_error) }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_cache_to_clear_on_update); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_cur_scope->__pyx_v_attr, __pyx_t_3, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1786, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = (__pyx_t_2 != 0);
  if (__pyx_t_6) {

    /* "cgal4py/delaunay/delaunay3.pyx":1787
 *             solf._update_tess()
 *             if attr not in solf._cache_to_clear_on_update:
 *                 solf._cache_to_clear_on_update[attr] = fget(solf)             # <<<<<<<<<<<<<<
 *             return solf._cache_to_clear_on_update[attr]
 *         return property(wrapped_fget, None, None, fget.__doc__)
 */
    if (unlikely(!__pyx_cur_scope->__pyx_v_fget)) { __Pyx_RaiseClosureNameError("fget"); __PYX_ERR(0, 1787, __pyx_L1_error) }
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_fget);
    __pyx_t_1 = __pyx_cur_scope->__pyx_v_fget; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_solf); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_v_solf};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_v_solf};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else
      #endif
      {
        __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1787, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_INCREF(__pyx_v_solf);
        __Pyx_GIVEREF(__pyx_v_solf);
        PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_solf);
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_cache_to_clear_on_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(!__pyx_cur_scope->__pyx_v_attr)) { __Pyx_RaiseClosureNameError("attr"); __PYX_ERR(0, 1787, __pyx_L1_error) }
    if (unlikely(PyObject_SetItem(__pyx_t_1, __pyx_cur_scope->__pyx_v_attr, __pyx_t_3) < 0)) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1786
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 *             solf._update_tess()
 *             if attr not in solf._cache_to_clear_on_update:             # <<<<<<<<<<<<<<
 *                 solf._cache_to_clear_on_update[attr] = fget(solf)
 *             return solf._cache_to_clear_on_update[attr]
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1788
 *             if attr not in solf._cache_to_clear_on_update:
 *                 solf._cache_to_clear_on_update[attr] = fget(solf)
 *             return solf._cache_to_clear_on_update[attr]             # <<<<<<<<<<<<<<
 *         return property(wrapped_fget, None, None, fget.__doc__)
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_solf, __pyx_n_s_cache_to_clear_on_update); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(!__pyx_cur_scope->__pyx_v_attr)) { __Pyx_RaiseClosureNameError("attr"); __PYX_ERR(0, 1788, __pyx_L1_error) }
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_cur_scope->__pyx_v_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1782
 *     def _dependent_property(fget):
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):             # <<<<<<<<<<<<<<
 *             if solf._locked:
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._dependent_property.wrapped_fget", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1780
 * 
 *     @staticmethod
 *     def _dependent_property(fget):             # <<<<<<<<<<<<<<
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 */

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12_dependent_property(PyObject *__pyx_v_fget) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *__pyx_cur_scope;
  PyObject *__pyx_v_wrapped_fget = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("_dependent_property", 0);
  __pyx_cur_scope = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *)__pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property(__pyx_ptype_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1780, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_fget = __pyx_v_fget;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_fget);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_fget);

  /* "cgal4py/delaunay/delaunay3.pyx":1781
 *     @staticmethod
 *     def _dependent_property(fget):
 *         attr = '_'+fget.__name__             # <<<<<<<<<<<<<<
 *         def wrapped_fget(solf):
 *             if solf._locked:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_fget, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Add(__pyx_n_s__59, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_cur_scope->__pyx_v_attr = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1782
 *     def _dependent_property(fget):
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):             # <<<<<<<<<<<<<<
 *             if solf._locked:
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19_dependent_property_1wrapped_fget, 0, __pyx_n_s_dependent_property_locals_wrapp, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cgal4py_delaunay_delaunay3, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_wrapped_fget = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1789
 *                 solf._cache_to_clear_on_update[attr] = fget(solf)
 *             return solf._cache_to_clear_on_update[attr]
 *         return property(wrapped_fget, None, None, fget.__doc__)             # <<<<<<<<<<<<<<
 * 
 *     def is_valid(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_fget, __pyx_n_s_doc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_wrapped_fget);
  __Pyx_GIVEREF(__pyx_v_wrapped_fget);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_wrapped_fget);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 1, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1780
 * 
 *     @staticmethod
 *     def _dependent_property(fget):             # <<<<<<<<<<<<<<
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._dependent_property", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_wrapped_fget);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1791
 *         return property(wrapped_fget, None, None, fget.__doc__)
 * 
 *     def is_valid(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the triangulation is a valid Delaunay triangulation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15is_valid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14is_valid[] = "Determine if the triangulation is a valid Delaunay triangulation. \n\n        Returns: \n            bool: True if the triangulation is valid, False otherwise. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15is_valid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_valid (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14is_valid(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14is_valid(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_valid", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1799
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_valid()
 *         return <pybool>out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":1800
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_valid()             # <<<<<<<<<<<<<<
 *         return <pybool>out
 * 
 */
        __pyx_v_out = __pyx_v_self->T->is_valid();
      }

      /* "cgal4py/delaunay/delaunay3.pyx":1799
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_valid()
 *         return <pybool>out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1801
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_valid()
 *         return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     def is_equivalent(Delaunay3 self, Delaunay3 solf):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1791
 *         return property(wrapped_fget, None, None, fget.__doc__)
 * 
 *     def is_valid(self):             # <<<<<<<<<<<<<<
 *         r"""Determine if the triangulation is a valid Delaunay triangulation.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_valid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1803
 *         return <pybool>out
 * 
 *     def is_equivalent(Delaunay3 self, Delaunay3 solf):             # <<<<<<<<<<<<<<
 *         r"""Determine if two triangulations are equivalent. Currently only
 *         checks that the triangulations have the same numbers of vertices, cells,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_17is_equivalent(PyObject *__pyx_v_self, PyObject *__pyx_v_solf); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16is_equivalent[] = "Determine if two triangulations are equivalent. Currently only \n        checks that the triangulations have the same numbers of vertices, cells,\n        edges, and facets.\n\n        Args:\n            solf (:class:`cgal4py.delaunay.Delaunay3`): Triangulation this one \n                should be compared to.\n\n        Returns:\n            bool: True if the two triangulations are equivalent.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_17is_equivalent(PyObject *__pyx_v_self, PyObject *__pyx_v_solf) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_equivalent (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solf), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, 1, "solf", 0))) __PYX_ERR(0, 1803, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16is_equivalent(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_solf));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16is_equivalent(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_solf) {
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_equivalent", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1817
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_equal(dereference(solf.T))
 *         return <pybool>(out)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":1818
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_equal(dereference(solf.T))             # <<<<<<<<<<<<<<
 *         return <pybool>(out)
 * 
 */
        __pyx_v_out = __pyx_v_self->T->is_equal((*__pyx_v_solf->T));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":1817
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_equal(dereference(solf.T))
 *         return <pybool>(out)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1819
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_equal(dereference(solf.T))
 *         return <pybool>(out)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1803
 *         return <pybool>out
 * 
 *     def is_equivalent(Delaunay3 self, Delaunay3 solf):             # <<<<<<<<<<<<<<
 *         r"""Determine if two triangulations are equivalent. Currently only
 *         checks that the triangulations have the same numbers of vertices, cells,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_equivalent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1822
 * 
 *     @classmethod
 *     def from_file(cls, fname):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from one saved to a file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19from_file(PyObject *__pyx_v_cls, PyObject *__pyx_v_fname); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_18from_file[] = "Create a triangulation from one saved to a file.\n\n        Args:\n            fname (str): Full path to file where triangulation is saved.\n\n        Returns:\n            :class:`cgal4py.delaunay.Delaunay3`: Triangulation constructed from\n                saved information.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19from_file(PyObject *__pyx_v_cls, PyObject *__pyx_v_fname) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_file (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_18from_file(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_fname));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_18from_file(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_fname) {
  PyObject *__pyx_v_T = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("from_file", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1833
 * 
 *         """
 *         T = cls()             # <<<<<<<<<<<<<<
 *         T.read_from_file(fname)
 *         return T
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_v_cls)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_T = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1834
 *         """
 *         T = cls()
 *         T.read_from_file(fname)             # <<<<<<<<<<<<<<
 *         return T
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_T, __pyx_n_s_read_from_file); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_fname); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1834, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_v_fname};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1834, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_v_fname};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1834, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_fname);
      __Pyx_GIVEREF(__pyx_v_fname);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_fname);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1835
 *         T = cls()
 *         T.read_from_file(fname)
 *         return T             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_T);
  __pyx_r = __pyx_v_T;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1822
 * 
 *     @classmethod
 *     def from_file(cls, fname):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from one saved to a file.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.from_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_T);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1838
 * 
 *     @classmethod
 *     def from_serial(cls, *args):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from serialized information.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_21from_serial(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_20from_serial[] = "Create a triangulation from serialized information. \n\n        Args: \n            *args: All arguments are passed to :meth:`cgal4py.delaunay.Delaunay3.deserialize`. \n\n        Returns: \n            :class:`cgal4py.delaunay.Delaunay3`: Triangulation constructed from \n                deserialized information. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_21from_serial(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_serial (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "from_serial", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_20from_serial(((PyTypeObject*)__pyx_v_cls), __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_20from_serial(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_args) {
  PyObject *__pyx_v_T = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("from_serial", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1849
 * 
 *         """
 *         T = cls()             # <<<<<<<<<<<<<<
 *         T.deserialize(*args)
 *         return T
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_v_cls)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_T = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1850
 *         """
 *         T = cls()
 *         T.deserialize(*args)             # <<<<<<<<<<<<<<
 *         return T
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_T, __pyx_n_s_deserialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1851
 *         T = cls()
 *         T.deserialize(*args)
 *         return T             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_T);
  __pyx_r = __pyx_v_T;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1838
 * 
 *     @classmethod
 *     def from_serial(cls, *args):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from serialized information.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.from_serial", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_T);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1854
 * 
 *     @classmethod
 *     def from_serial_buffer(cls, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from serialized information in a buffer.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_23from_serial_buffer(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_22from_serial_buffer[] = "Create a triangulation from serialized information in a buffer.\n\n        Args:\n            See :meth:`cgal4py.delaunay.Delaunay3.deserialize_from_buffer`.\n\n        Returns:\n            :class:`cgal4py.delaunay.Delaunay3`: Triangulation constructed from\n                deserialized information.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_23from_serial_buffer(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_serial_buffer (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "from_serial_buffer", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_22from_serial_buffer(((PyTypeObject*)__pyx_v_cls), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_22from_serial_buffer(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_T = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("from_serial_buffer", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1865
 * 
 *         """
 *         T = cls()             # <<<<<<<<<<<<<<
 *         T.deserialize_from_buffer(*args, **kwargs)
 *         return T
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_v_cls)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_T = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1866
 *         """
 *         T = cls()
 *         T.deserialize_from_buffer(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         return T
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_T, __pyx_n_s_deserialize_from_buffer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1867
 *         T = cls()
 *         T.deserialize_from_buffer(*args, **kwargs)
 *         return T             # <<<<<<<<<<<<<<
 * 
 *     def serialize_to_buffer(self, buf, pos=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_T);
  __pyx_r = __pyx_v_T;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1854
 * 
 *     @classmethod
 *     def from_serial_buffer(cls, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from serialized information in a buffer.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.from_serial_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_T);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1869
 *         return T
 * 
 *     def serialize_to_buffer(self, buf, pos=None):             # <<<<<<<<<<<<<<
 *         r"""Write serialized triangulation to a buffer.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25serialize_to_buffer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_24serialize_to_buffer[] = "Write serialized triangulation to a buffer.\n\n        Args:\n            buf (file): File buffer.\n            pos (np.ndarray, optional): Positions to be written. If not\n                provided, positions are not included and must be provided\n                during any subsequent read. Defaults to None.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25serialize_to_buffer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_buf = 0;
  PyObject *__pyx_v_pos = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("serialize_to_buffer (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_buf,&__pyx_n_s_pos,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_buf)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "serialize_to_buffer") < 0)) __PYX_ERR(0, 1869, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_buf = values[0];
    __pyx_v_pos = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("serialize_to_buffer", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1869, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.serialize_to_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_24serialize_to_buffer(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_buf, __pyx_v_pos);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_24serialize_to_buffer(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_buf, PyObject *__pyx_v_pos) {
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf;
  PyObject *__pyx_v_ifmt = 0;
  PyObject *__pyx_v_ffmt = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_t_7;
  PyArrayObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyArrayObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  int __pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  __Pyx_RefNannySetupContext("serialize_to_buffer", 0);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;

  /* "cgal4py/delaunay/delaunay3.pyx":1882
 *         cdef np.ndarray[np_info_t, ndim=2] neighbors
 *         cdef info_t idx_inf
 *         cells, neighbors, idx_inf = self.serialize()             # <<<<<<<<<<<<<<
 *         cdef str ifmt, ffmt
 *         ifmt = cells.dtype.char
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_serialize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1882, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1882, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1882, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 2); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 2); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_4);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext;
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    index = 2; __pyx_t_4 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_4)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 3) < 0) __PYX_ERR(0, 1882, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1882, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1882, __pyx_L1_error)
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1882, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyInt_As_uint32_t(__pyx_t_4); if (unlikely((__pyx_t_7 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1882, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_2);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_9 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_9 < 0)) {
      PyErr_Fetch(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_12);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_10, __pyx_t_11, __pyx_t_12);
      }
      __pyx_t_10 = __pyx_t_11 = __pyx_t_12 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1882, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_13 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __pyx_t_9 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_t_13, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_9 < 0)) {
      PyErr_Fetch(&__pyx_t_12, &__pyx_t_11, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_12); Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_12, __pyx_t_11, __pyx_t_10);
      }
      __pyx_t_12 = __pyx_t_11 = __pyx_t_10 = 0;
    }
    __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1882, __pyx_L1_error)
  }
  __pyx_t_13 = 0;
  __pyx_v_neighbors = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_v_idx_inf = __pyx_t_7;

  /* "cgal4py/delaunay/delaunay3.pyx":1884
 *         cells, neighbors, idx_inf = self.serialize()
 *         cdef str ifmt, ffmt
 *         ifmt = cells.dtype.char             # <<<<<<<<<<<<<<
 *         ffmt = 'd'
 *         if pos is not None:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cells), __pyx_n_s_dtype); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1884, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_char); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1884, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyString_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 1884, __pyx_L1_error)
  __pyx_v_ifmt = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1885
 *         cdef str ifmt, ffmt
 *         ifmt = cells.dtype.char
 *         ffmt = 'd'             # <<<<<<<<<<<<<<
 *         if pos is not None:
 *             ffmt = pos.dtype.char
 */
  __Pyx_INCREF(__pyx_n_s_d);
  __pyx_v_ffmt = __pyx_n_s_d;

  /* "cgal4py/delaunay/delaunay3.pyx":1886
 *         ifmt = cells.dtype.char
 *         ffmt = 'd'
 *         if pos is not None:             # <<<<<<<<<<<<<<
 *             ffmt = pos.dtype.char
 *         if PY_MAJOR_VERSION == 2:
 */
  __pyx_t_14 = (__pyx_v_pos != Py_None);
  __pyx_t_15 = (__pyx_t_14 != 0);
  if (__pyx_t_15) {

    /* "cgal4py/delaunay/delaunay3.pyx":1887
 *         ffmt = 'd'
 *         if pos is not None:
 *             ffmt = pos.dtype.char             # <<<<<<<<<<<<<<
 *         if PY_MAJOR_VERSION == 2:
 *             buf.write(struct.pack('cc', ffmt, ifmt))
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_pos, __pyx_n_s_dtype); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_char); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(PyString_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_DECREF_SET(__pyx_v_ffmt, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1886
 *         ifmt = cells.dtype.char
 *         ffmt = 'd'
 *         if pos is not None:             # <<<<<<<<<<<<<<
 *             ffmt = pos.dtype.char
 *         if PY_MAJOR_VERSION == 2:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1888
 *         if pos is not None:
 *             ffmt = pos.dtype.char
 *         if PY_MAJOR_VERSION == 2:             # <<<<<<<<<<<<<<
 *             buf.write(struct.pack('cc', ffmt, ifmt))
 *         else:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_PY_MAJOR_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_15 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_15 < 0)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_15) {

    /* "cgal4py/delaunay/delaunay3.pyx":1889
 *             ffmt = pos.dtype.char
 *         if PY_MAJOR_VERSION == 2:
 *             buf.write(struct.pack('cc', ffmt, ifmt))             # <<<<<<<<<<<<<<
 *         else:
 *             buf.write(struct.pack('cc', ffmt.encode('ascii'),
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1889, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1889, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_pack); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1889, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_n_s_cc, __pyx_v_ffmt, __pyx_v_ifmt};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1889, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_n_s_cc, __pyx_v_ffmt, __pyx_v_ifmt};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1889, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_16 = PyTuple_New(3+__pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1889, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      if (__pyx_t_2) {
        __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_2); __pyx_t_2 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_n_s_cc);
      PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_9, __pyx_n_s_cc);
      __Pyx_INCREF(__pyx_v_ffmt);
      __Pyx_GIVEREF(__pyx_v_ffmt);
      PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_9, __pyx_v_ffmt);
      __Pyx_INCREF(__pyx_v_ifmt);
      __Pyx_GIVEREF(__pyx_v_ifmt);
      PyTuple_SET_ITEM(__pyx_t_16, 2+__pyx_t_9, __pyx_v_ifmt);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_16, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1889, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1889, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_3};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1889, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_3};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1889, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else
      #endif
      {
        __pyx_t_16 = PyTuple_New(1+1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1889, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_16, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_16, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1889, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1888
 *         if pos is not None:
 *             ffmt = pos.dtype.char
 *         if PY_MAJOR_VERSION == 2:             # <<<<<<<<<<<<<<
 *             buf.write(struct.pack('cc', ffmt, ifmt))
 *         else:
 */
    goto __pyx_L6;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1891
 *             buf.write(struct.pack('cc', ffmt, ifmt))
 *         else:
 *             buf.write(struct.pack('cc', ffmt.encode('ascii'),             # <<<<<<<<<<<<<<
 *                                   ifmt.encode('ascii')))
 *         buf.write(struct.pack(ifmt, idx_inf))
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_pack); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_ffmt, __pyx_n_s_ascii); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "cgal4py/delaunay/delaunay3.pyx":1892
 *         else:
 *             buf.write(struct.pack('cc', ffmt.encode('ascii'),
 *                                   ifmt.encode('ascii')))             # <<<<<<<<<<<<<<
 *         buf.write(struct.pack(ifmt, idx_inf))
 *         if pos is not None:
 */
    __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_ifmt, __pyx_n_s_ascii); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1892, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_17 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_17)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_17);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[4] = {__pyx_t_17, __pyx_n_s_cc, __pyx_t_3, __pyx_t_2};
      __pyx_t_16 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1891, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[4] = {__pyx_t_17, __pyx_n_s_cc, __pyx_t_3, __pyx_t_2};
      __pyx_t_16 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1891, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    {
      __pyx_t_18 = PyTuple_New(3+__pyx_t_9); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1891, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      if (__pyx_t_17) {
        __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_17); __pyx_t_17 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_n_s_cc);
      PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_9, __pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_9, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_18, 2+__pyx_t_9, __pyx_t_2);
      __pyx_t_3 = 0;
      __pyx_t_2 = 0;
      __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_18, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1891, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1891, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_16};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1891, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_16};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1891, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      } else
      #endif
      {
        __pyx_t_18 = PyTuple_New(1+1); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1891, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_16);
        PyTuple_SET_ITEM(__pyx_t_18, 0+1, __pyx_t_16);
        __pyx_t_16 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_18, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1891, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L6:;

  /* "cgal4py/delaunay/delaunay3.pyx":1893
 *             buf.write(struct.pack('cc', ffmt.encode('ascii'),
 *                                   ifmt.encode('ascii')))
 *         buf.write(struct.pack(ifmt, idx_inf))             # <<<<<<<<<<<<<<
 *         if pos is not None:
 *             buf.write(struct.pack(2*ifmt, pos.shape[0], pos.shape[1]))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_16 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_pack); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  __pyx_t_16 = __Pyx_PyInt_From_uint32_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_2 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_ifmt, __pyx_t_16};
    __pyx_t_18 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1893, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_ifmt, __pyx_t_16};
    __pyx_t_18 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1893, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  } else
  #endif
  {
    __pyx_t_3 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__pyx_t_2) {
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
    }
    __Pyx_INCREF(__pyx_v_ifmt);
    __Pyx_GIVEREF(__pyx_v_ifmt);
    PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_9, __pyx_v_ifmt);
    __Pyx_GIVEREF(__pyx_t_16);
    PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_9, __pyx_t_16);
    __pyx_t_16 = 0;
    __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_18); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1893, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_18};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1893, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_18};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1893, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1893, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_18);
      __pyx_t_18 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1893, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1894
 *                                   ifmt.encode('ascii')))
 *         buf.write(struct.pack(ifmt, idx_inf))
 *         if pos is not None:             # <<<<<<<<<<<<<<
 *             buf.write(struct.pack(2*ifmt, pos.shape[0], pos.shape[1]))
 *             buf.write(pos.tobytes())
 */
  __pyx_t_15 = (__pyx_v_pos != Py_None);
  __pyx_t_14 = (__pyx_t_15 != 0);
  if (__pyx_t_14) {

    /* "cgal4py/delaunay/delaunay3.pyx":1895
 *         buf.write(struct.pack(ifmt, idx_inf))
 *         if pos is not None:
 *             buf.write(struct.pack(2*ifmt, pos.shape[0], pos.shape[1]))             # <<<<<<<<<<<<<<
 *             buf.write(pos.tobytes())
 *         buf.write(struct.pack(2*ifmt, cells.shape[0], cells.shape[1]))
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_18 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_pack); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_18 = PyNumber_Multiply(__pyx_int_2, __pyx_v_ifmt); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_pos, __pyx_n_s_shape); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_16, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_pos, __pyx_n_s_shape); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_17 = __Pyx_GetItemInt(__pyx_t_16, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __pyx_t_16 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_16)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_16);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[4] = {__pyx_t_16, __pyx_t_18, __pyx_t_2, __pyx_t_17};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1895, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[4] = {__pyx_t_16, __pyx_t_18, __pyx_t_2, __pyx_t_17};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1895, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    } else
    #endif
    {
      __pyx_t_19 = PyTuple_New(3+__pyx_t_9); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 1895, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      if (__pyx_t_16) {
        __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_16); __pyx_t_16 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_19, 0+__pyx_t_9, __pyx_t_18);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_19, 1+__pyx_t_9, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_17);
      PyTuple_SET_ITEM(__pyx_t_19, 2+__pyx_t_9, __pyx_t_17);
      __pyx_t_18 = 0;
      __pyx_t_2 = 0;
      __pyx_t_17 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1895, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1895, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_3};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1895, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_3};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1895, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      } else
      #endif
      {
        __pyx_t_19 = PyTuple_New(1+1); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 1895, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_19);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_19, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_19, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1895, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1896
 *         if pos is not None:
 *             buf.write(struct.pack(2*ifmt, pos.shape[0], pos.shape[1]))
 *             buf.write(pos.tobytes())             # <<<<<<<<<<<<<<
 *         buf.write(struct.pack(2*ifmt, cells.shape[0], cells.shape[1]))
 *         buf.write(cells.tobytes())
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_pos, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_19 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 1896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_19 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 1896, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_19); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_19};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1896, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_19};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1896, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      } else
      #endif
      {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1896, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
        __Pyx_GIVEREF(__pyx_t_19);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_19);
        __pyx_t_19 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1896, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1894
 *                                   ifmt.encode('ascii')))
 *         buf.write(struct.pack(ifmt, idx_inf))
 *         if pos is not None:             # <<<<<<<<<<<<<<
 *             buf.write(struct.pack(2*ifmt, pos.shape[0], pos.shape[1]))
 *             buf.write(pos.tobytes())
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1897
 *             buf.write(struct.pack(2*ifmt, pos.shape[0], pos.shape[1]))
 *             buf.write(pos.tobytes())
 *         buf.write(struct.pack(2*ifmt, cells.shape[0], cells.shape[1]))             # <<<<<<<<<<<<<<
 *         buf.write(cells.tobytes())
 *         buf.write(neighbors.tobytes())
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_19 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 1897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_19);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_19, __pyx_n_s_pack); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
  __pyx_t_19 = PyNumber_Multiply(__pyx_int_2, __pyx_v_ifmt); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 1897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_19);
  __pyx_t_17 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_cells->dimensions[0])); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 1897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_17);
  __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_cells->dimensions[1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_18 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_18)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_18);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[4] = {__pyx_t_18, __pyx_t_19, __pyx_t_17, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[4] = {__pyx_t_18, __pyx_t_19, __pyx_t_17, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_9, 3+__pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_16 = PyTuple_New(3+__pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    if (__pyx_t_18) {
      __Pyx_GIVEREF(__pyx_t_18); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_18); __pyx_t_18 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_19);
    PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_9, __pyx_t_19);
    __Pyx_GIVEREF(__pyx_t_17);
    PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_9, __pyx_t_17);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_16, 2+__pyx_t_9, __pyx_t_2);
    __pyx_t_19 = 0;
    __pyx_t_17 = 0;
    __pyx_t_2 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_16, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1897, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1897, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_16 = PyTuple_New(1+1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1897, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_16, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_16, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1897, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1898
 *             buf.write(pos.tobytes())
 *         buf.write(struct.pack(2*ifmt, cells.shape[0], cells.shape[1]))
 *         buf.write(cells.tobytes())             # <<<<<<<<<<<<<<
 *         buf.write(neighbors.tobytes())
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cells), __pyx_n_s_tobytes); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_16 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_16 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1898, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_16};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1898, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_16};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1898, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1898, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_16);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_16);
      __pyx_t_16 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1898, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1899
 *         buf.write(struct.pack(2*ifmt, cells.shape[0], cells.shape[1]))
 *         buf.write(cells.tobytes())
 *         buf.write(neighbors.tobytes())             # <<<<<<<<<<<<<<
 * 
 *     def deserialize_from_buffer(self, buf, pos=None):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_16 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighbors), __pyx_n_s_tobytes); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_16);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_16, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_16, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_16); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1899, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  __pyx_t_16 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_16)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_16);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_16) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_16, __pyx_t_3};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1899, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_16, __pyx_t_3};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1899, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1899, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_16); __pyx_t_16 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1899, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1869
 *         return T
 * 
 *     def serialize_to_buffer(self, buf, pos=None):             # <<<<<<<<<<<<<<
 *         r"""Write serialized triangulation to a buffer.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.serialize_to_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_neighbors);
  __Pyx_XDECREF(__pyx_v_ifmt);
  __Pyx_XDECREF(__pyx_v_ffmt);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1901
 *         buf.write(neighbors.tobytes())
 * 
 *     def deserialize_from_buffer(self, buf, pos=None):             # <<<<<<<<<<<<<<
 *         r"""Read a serialized triangulation from the buffer.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_27deserialize_from_buffer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_26deserialize_from_buffer[] = "Read a serialized triangulation from the buffer.\n\n        Args:\n            buf (file): File buffer.\n            pos (np.ndarray, optional): Positions to be used for deserializing\n                the triangulation if the positions are not in the file. If\n                not provided, the file is assumed to contain the positions.\n                Defaults to None.\n\n       ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_27deserialize_from_buffer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_buf = 0;
  PyObject *__pyx_v_pos = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deserialize_from_buffer (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_buf,&__pyx_n_s_pos,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_buf)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "deserialize_from_buffer") < 0)) __PYX_ERR(0, 1901, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_buf = values[0];
    __pyx_v_pos = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("deserialize_from_buffer", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1901, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.deserialize_from_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_26deserialize_from_buffer(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_buf, __pyx_v_pos);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_26deserialize_from_buffer(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_buf, PyObject *__pyx_v_pos) {
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_cells = 0;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf;
  PyObject *__pyx_v_ifmt = 0;
  PyObject *__pyx_v_ffmt = 0;
  int __pyx_v_isiz;
  int __pyx_v_fsiz;
  int __pyx_v_nx;
  int __pyx_v_ny;
  PyObject *__pyx_v_ibfmt = 0;
  PyObject *__pyx_v_fbfmt = 0;
  PyObject *__pyx_v_neigh = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  PyArrayObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  __Pyx_RefNannySetupContext("deserialize_from_buffer", 0);
  __Pyx_INCREF(__pyx_v_pos);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;

  /* "cgal4py/delaunay/delaunay3.pyx":1912
 * 
 *        """
 *         cdef int ndim = 3             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np_info_t, ndim=2] cells
 *         cdef np.ndarray[np_info_t, ndim=2] neighbors
 */
  __pyx_v_ndim = 3;

  /* "cgal4py/delaunay/delaunay3.pyx":1920
 *         cdef int nx, ny
 *         cdef bytes ibfmt, fbfmt
 *         if PY_MAJOR_VERSION == 2:             # <<<<<<<<<<<<<<
 *             (ffmt, ifmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 *         else:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_PY_MAJOR_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1920, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":1921
 *         cdef bytes ibfmt, fbfmt
 *         if PY_MAJOR_VERSION == 2:
 *             (ffmt, ifmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))             # <<<<<<<<<<<<<<
 *         else:
 *             (fbfmt, ibfmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_unpack); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_calcsize); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1921, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1921, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1921, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1921, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_n_s_cc, __pyx_t_1};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_n_s_cc, __pyx_t_1};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_n_s_cc);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_9, __pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_9, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1921, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_8);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_10(__pyx_t_1); if (unlikely(!__pyx_t_4)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_8 = __pyx_t_10(__pyx_t_1); if (unlikely(!__pyx_t_8)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_8);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_1), 2) < 0) __PYX_ERR(0, 1921, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L5_unpacking_done;
      __pyx_L4_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1921, __pyx_L1_error)
      __pyx_L5_unpacking_done:;
    }
    if (!(likely(PyString_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 1921, __pyx_L1_error)
    if (!(likely(PyString_CheckExact(__pyx_t_8))||((__pyx_t_8) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_t_8)->tp_name), 0))) __PYX_ERR(0, 1921, __pyx_L1_error)
    __pyx_v_ffmt = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_v_ifmt = ((PyObject*)__pyx_t_8);
    __pyx_t_8 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1920
 *         cdef int nx, ny
 *         cdef bytes ibfmt, fbfmt
 *         if PY_MAJOR_VERSION == 2:             # <<<<<<<<<<<<<<
 *             (ffmt, ifmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1923
 *             (ffmt, ifmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 *         else:
 *             (fbfmt, ibfmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))             # <<<<<<<<<<<<<<
 *             ffmt = fbfmt.decode()
 *             ifmt = ibfmt.decode()
 */
  /*else*/ {
    __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_unpack); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_calcsize); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__63, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_8);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_t_5};
        __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1923, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_t_5};
        __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1923, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else
      #endif
      {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1923, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1923, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_9 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_n_s_cc, __pyx_t_8};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_n_s_cc, __pyx_t_8};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    {
      __pyx_t_7 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_n_s_cc);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_9, __pyx_n_s_cc);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_9, __pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1923, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1923, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_10(__pyx_t_8); if (unlikely(!__pyx_t_4)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_7 = __pyx_t_10(__pyx_t_8); if (unlikely(!__pyx_t_7)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_8), 2) < 0) __PYX_ERR(0, 1923, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1923, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    if (!(likely(PyBytes_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 1923, __pyx_L1_error)
    if (!(likely(PyBytes_CheckExact(__pyx_t_7))||((__pyx_t_7) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_7)->tp_name), 0))) __PYX_ERR(0, 1923, __pyx_L1_error)
    __pyx_v_fbfmt = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_v_ibfmt = ((PyObject*)__pyx_t_7);
    __pyx_t_7 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1924
 *         else:
 *             (fbfmt, ibfmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 *             ffmt = fbfmt.decode()             # <<<<<<<<<<<<<<
 *             ifmt = ibfmt.decode()
 *         fsiz = struct.calcsize(ffmt)
 */
    if (unlikely(__pyx_v_fbfmt == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "decode");
      __PYX_ERR(0, 1924, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_decode_bytes(__pyx_v_fbfmt, 0, PY_SSIZE_T_MAX, NULL, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1924, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(PyString_CheckExact(__pyx_t_2))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 1924, __pyx_L1_error)
    __pyx_v_ffmt = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1925
 *             (fbfmt, ibfmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 *             ffmt = fbfmt.decode()
 *             ifmt = ibfmt.decode()             # <<<<<<<<<<<<<<
 *         fsiz = struct.calcsize(ffmt)
 *         isiz = struct.calcsize(ifmt)
 */
    if (unlikely(__pyx_v_ibfmt == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "decode");
      __PYX_ERR(0, 1925, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_decode_bytes(__pyx_v_ibfmt, 0, PY_SSIZE_T_MAX, NULL, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1925, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(PyString_CheckExact(__pyx_t_2))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 1925, __pyx_L1_error)
    __pyx_v_ifmt = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":1926
 *             ffmt = fbfmt.decode()
 *             ifmt = ibfmt.decode()
 *         fsiz = struct.calcsize(ffmt)             # <<<<<<<<<<<<<<
 *         isiz = struct.calcsize(ifmt)
 *         (idx_inf,) = struct.unpack(ifmt, buf.read(isiz))
 */
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_calcsize); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_ffmt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_v_ffmt};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1926, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_v_ffmt};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1926, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1926, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_ffmt);
      __Pyx_GIVEREF(__pyx_v_ffmt);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_v_ffmt);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1926, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_fsiz = __pyx_t_9;

  /* "cgal4py/delaunay/delaunay3.pyx":1927
 *             ifmt = ibfmt.decode()
 *         fsiz = struct.calcsize(ffmt)
 *         isiz = struct.calcsize(ifmt)             # <<<<<<<<<<<<<<
 *         (idx_inf,) = struct.unpack(ifmt, buf.read(isiz))
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_calcsize); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_ifmt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1927, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_v_ifmt};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1927, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_v_ifmt};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1927, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1927, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_INCREF(__pyx_v_ifmt);
      __Pyx_GIVEREF(__pyx_v_ifmt);
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_ifmt);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1927, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_isiz = __pyx_t_9;

  /* "cgal4py/delaunay/delaunay3.pyx":1928
 *         fsiz = struct.calcsize(ffmt)
 *         isiz = struct.calcsize(ifmt)
 *         (idx_inf,) = struct.unpack(ifmt, buf.read(isiz))             # <<<<<<<<<<<<<<
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == ndim)
 */
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_unpack); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_isiz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_8);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_1};
      __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1928, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_1};
      __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1928, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1928, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1928, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_7)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_ifmt, __pyx_t_8};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_ifmt, __pyx_t_8};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_v_ifmt);
    __Pyx_GIVEREF(__pyx_v_ifmt);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_9, __pyx_v_ifmt);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_9, __pyx_t_8);
    __pyx_t_8 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 1)) {
      if (size > 1) __Pyx_RaiseTooManyValuesError(1);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1928, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_7 = PyTuple_GET_ITEM(sequence, 0); 
    } else {
      __pyx_t_7 = PyList_GET_ITEM(sequence, 0); 
    }
    __Pyx_INCREF(__pyx_t_7);
    #else
    __pyx_t_7 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext;
    index = 0; __pyx_t_7 = __pyx_t_10(__pyx_t_6); if (unlikely(!__pyx_t_7)) goto __pyx_L8_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_7);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_6), 1) < 0) __PYX_ERR(0, 1928, __pyx_L1_error)
    __pyx_t_10 = NULL;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L9_unpacking_done;
    __pyx_L8_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1928, __pyx_L1_error)
    __pyx_L9_unpacking_done:;
  }
  __pyx_t_11 = __Pyx_PyInt_As_uint32_t(__pyx_t_7); if (unlikely((__pyx_t_11 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_v_idx_inf = __pyx_t_11;

  /* "cgal4py/delaunay/delaunay3.pyx":1929
 *         isiz = struct.calcsize(ifmt)
 *         (idx_inf,) = struct.unpack(ifmt, buf.read(isiz))
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))             # <<<<<<<<<<<<<<
 *         assert(ny == ndim)
 *         pos = np.frombuffer(
 */
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_unpack); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Multiply(__pyx_int_2, __pyx_v_ifmt); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_From_long((2 * __pyx_v_isiz)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_8);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_1};
      __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1929, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_1};
      __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1929, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1929, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_12, 0+1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_12, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1929, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_6)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_7, __pyx_t_8};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_7, __pyx_t_8};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  {
    __pyx_t_12 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_12, 0+__pyx_t_9, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_12, 1+__pyx_t_9, __pyx_t_8);
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1929, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_t_12);
    #else
    __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext;
    index = 0; __pyx_t_6 = __pyx_t_10(__pyx_t_8); if (unlikely(!__pyx_t_6)) goto __pyx_L10_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_6);
    index = 1; __pyx_t_12 = __pyx_t_10(__pyx_t_8); if (unlikely(!__pyx_t_12)) goto __pyx_L10_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_8), 2) < 0) __PYX_ERR(0, 1929, __pyx_L1_error)
    __pyx_t_10 = NULL;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    goto __pyx_L11_unpacking_done;
    __pyx_L10_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_10 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1929, __pyx_L1_error)
    __pyx_L11_unpacking_done:;
  }
  __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_12); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __pyx_v_nx = __pyx_t_9;
  __pyx_v_ny = __pyx_t_13;

  /* "cgal4py/delaunay/delaunay3.pyx":1930
 *         (idx_inf,) = struct.unpack(ifmt, buf.read(isiz))
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == ndim)             # <<<<<<<<<<<<<<
 *         pos = np.frombuffer(
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_ny == __pyx_v_ndim) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 1930, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":1931
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == ndim)
 *         pos = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_12 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1932
 *         assert(ny == ndim)
 *         pos = np.frombuffer(
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),             # <<<<<<<<<<<<<<
 *             count=nx*ny).reshape(nx, ny)
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyInt_From_int(((__pyx_v_nx * __pyx_v_ny) * __pyx_v_fsiz)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_12 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1932, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_12);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_7};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1932, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_7};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1932, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    {
      __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1932, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1932, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyByteArray_Type)), __pyx_t_12); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1931
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == ndim)
 *         pos = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_8);
  __pyx_t_8 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1932
 *         assert(ny == ndim)
 *         pos = np.frombuffer(
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),             # <<<<<<<<<<<<<<
 *             count=nx*ny).reshape(nx, ny)
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 */
  __pyx_t_8 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_v_ffmt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_dtype, __pyx_t_1) < 0) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1933
 *         pos = np.frombuffer(
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 *             count=nx*ny).reshape(nx, ny)             # <<<<<<<<<<<<<<
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == (ndim+1))
 */
  __pyx_t_1 = __Pyx_PyInt_From_int((__pyx_v_nx * __pyx_v_ny)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_count, __pyx_t_1) < 0) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1931
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == ndim)
 *         pos = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_12, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1933
 *         pos = np.frombuffer(
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 *             count=nx*ny).reshape(nx, ny)             # <<<<<<<<<<<<<<
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == (ndim+1))
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_reshape); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_ny); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_6 = NULL;
  __pyx_t_13 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_13 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_1, __pyx_t_12};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1933, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_1, __pyx_t_12};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1933, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_13, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_13, __pyx_t_12);
    __pyx_t_1 = 0;
    __pyx_t_12 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF_SET(__pyx_v_pos, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1934
 *             bytearray(buf.read(nx*ny*fsiz)), dtype=np.dtype(ffmt),
 *             count=nx*ny).reshape(nx, ny)
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))             # <<<<<<<<<<<<<<
 *         assert(ny == (ndim+1))
 *         cells = np.frombuffer(
 */
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_struct); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_unpack); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyNumber_Multiply(__pyx_int_2, __pyx_v_ifmt); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_From_long((2 * __pyx_v_isiz)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_12 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_12);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_6};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1934, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_6};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1934, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1934, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1934, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_13 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_13 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_7)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_8, __pyx_t_12};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_8, __pyx_t_12};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_1) {
      __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1); __pyx_t_1 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_13, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_13, __pyx_t_12);
    __pyx_t_8 = 0;
    __pyx_t_12 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1934, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_7 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_7 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_5 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_t_5);
    #else
    __pyx_t_7 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_12 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_10 = Py_TYPE(__pyx_t_12)->tp_iternext;
    index = 0; __pyx_t_7 = __pyx_t_10(__pyx_t_12); if (unlikely(!__pyx_t_7)) goto __pyx_L12_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_7);
    index = 1; __pyx_t_5 = __pyx_t_10(__pyx_t_12); if (unlikely(!__pyx_t_5)) goto __pyx_L12_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_5);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_12), 2) < 0) __PYX_ERR(0, 1934, __pyx_L1_error)
    __pyx_t_10 = NULL;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    goto __pyx_L13_unpacking_done;
    __pyx_L12_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_10 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1934, __pyx_L1_error)
    __pyx_L13_unpacking_done:;
  }
  __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_nx = __pyx_t_13;
  __pyx_v_ny = __pyx_t_9;

  /* "cgal4py/delaunay/delaunay3.pyx":1935
 *             count=nx*ny).reshape(nx, ny)
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == (ndim+1))             # <<<<<<<<<<<<<<
 *         cells = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_ny == (__pyx_v_ndim + 1)) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 1935, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":1936
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == (ndim+1))
 *         cells = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1937
 *         assert(ny == (ndim+1))
 *         cells = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),             # <<<<<<<<<<<<<<
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(
 */
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_8 = __Pyx_PyInt_From_int(((__pyx_v_nx * __pyx_v_ny) * __pyx_v_isiz)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_12);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_12, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1937, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_5);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_12)) {
      PyObject *__pyx_temp[2] = {__pyx_t_1, __pyx_t_8};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_12, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1937, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_12)) {
      PyObject *__pyx_temp[2] = {__pyx_t_1, __pyx_t_8};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_12, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1937, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1937, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1937, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __pyx_t_12 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyByteArray_Type)), __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1936
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == (ndim+1))
 *         cells = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_12);
  __pyx_t_12 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1937
 *         assert(ny == (ndim+1))
 *         cells = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),             # <<<<<<<<<<<<<<
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(
 */
  __pyx_t_12 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_6 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_v_ifmt); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_dtype, __pyx_t_6) < 0) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1938
 *         cells = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)             # <<<<<<<<<<<<<<
 *         neigh = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 */
  __pyx_t_6 = __Pyx_PyInt_From_int((__pyx_v_nx * __pyx_v_ny)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_count, __pyx_t_6) < 0) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1936
 *         nx, ny = struct.unpack(2*ifmt, buf.read(2*isiz))
 *         assert(ny == (ndim+1))
 *         cells = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, __pyx_t_12); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1938
 *         cells = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)             # <<<<<<<<<<<<<<
 *         neigh = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 */
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_reshape); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_nx); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_ny); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_12);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_12, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_12)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_6, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_12, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1938, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_12)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_6, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_12, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1938, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_9, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_9, __pyx_t_5);
    __pyx_t_6 = 0;
    __pyx_t_5 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1938, __pyx_L1_error)
  __pyx_t_14 = ((PyArrayObject *)__pyx_t_2);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_9 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_14, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_9 < 0)) {
      PyErr_Fetch(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_15); Py_XDECREF(__pyx_t_16); Py_XDECREF(__pyx_t_17);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_15, __pyx_t_16, __pyx_t_17);
      }
      __pyx_t_15 = __pyx_t_16 = __pyx_t_17 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1936, __pyx_L1_error)
  }
  __pyx_t_14 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1939
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_12 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1940
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),             # <<<<<<<<<<<<<<
 *             count=nx*ny).reshape(nx, ny)
 *         self.deserialize(pos, cells, neigh, idx_inf)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_read); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_int(((__pyx_v_nx * __pyx_v_ny) * __pyx_v_isiz)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_12 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_12);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1940, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1940, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    {
      __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1940, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1940, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyByteArray_Type)), __pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1939
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1940
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),             # <<<<<<<<<<<<<<
 *             count=nx*ny).reshape(nx, ny)
 *         self.deserialize(pos, cells, neigh, idx_inf)
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_v_ifmt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_dtype, __pyx_t_1) < 0) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1941
 *         neigh = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)             # <<<<<<<<<<<<<<
 *         self.deserialize(pos, cells, neigh, idx_inf)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int((__pyx_v_nx * __pyx_v_ny)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_count, __pyx_t_1) < 0) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1939
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 *         neigh = np.frombuffer(             # <<<<<<<<<<<<<<
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_12, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1941
 *         neigh = np.frombuffer(
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)             # <<<<<<<<<<<<<<
 *         self.deserialize(pos, cells, neigh, idx_inf)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_reshape); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_ny); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_8 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_t_1, __pyx_t_12};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1941, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_t_1, __pyx_t_12};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1941, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1941, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_8) {
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_9, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_9, __pyx_t_12);
    __pyx_t_1 = 0;
    __pyx_t_12 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1941, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_neigh = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1942
 *             bytearray(buf.read(nx*ny*isiz)), dtype=np.dtype(ifmt),
 *             count=nx*ny).reshape(nx, ny)
 *         self.deserialize(pos, cells, neigh, idx_inf)             # <<<<<<<<<<<<<<
 * 
 *     def write_to_file(self, fname):
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_deserialize); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_uint32_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_12 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_12)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_12);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[5] = {__pyx_t_12, __pyx_v_pos, ((PyObject *)__pyx_v_cells), __pyx_v_neigh, __pyx_t_6};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 4+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1942, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[5] = {__pyx_t_12, __pyx_v_pos, ((PyObject *)__pyx_v_cells), __pyx_v_neigh, __pyx_t_6};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 4+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1942, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_1 = PyTuple_New(4+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__pyx_t_12) {
      __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_12); __pyx_t_12 = NULL;
    }
    __Pyx_INCREF(__pyx_v_pos);
    __Pyx_GIVEREF(__pyx_v_pos);
    PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_9, __pyx_v_pos);
    __Pyx_INCREF(((PyObject *)__pyx_v_cells));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_cells));
    PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_9, ((PyObject *)__pyx_v_cells));
    __Pyx_INCREF(__pyx_v_neigh);
    __Pyx_GIVEREF(__pyx_v_neigh);
    PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_9, __pyx_v_neigh);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 3+__pyx_t_9, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1901
 *         buf.write(neighbors.tobytes())
 * 
 *     def deserialize_from_buffer(self, buf, pos=None):             # <<<<<<<<<<<<<<
 *         r"""Read a serialized triangulation from the buffer.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_12);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.deserialize_from_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF(__pyx_v_ifmt);
  __Pyx_XDECREF(__pyx_v_ffmt);
  __Pyx_XDECREF(__pyx_v_ibfmt);
  __Pyx_XDECREF(__pyx_v_fbfmt);
  __Pyx_XDECREF(__pyx_v_neigh);
  __Pyx_XDECREF(__pyx_v_pos);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1944
 *         self.deserialize(pos, cells, neigh, idx_inf)
 * 
 *     def write_to_file(self, fname):             # <<<<<<<<<<<<<<
 *         r"""Write the serialized tessellation information to a file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_29write_to_file(PyObject *__pyx_v_self, PyObject *__pyx_v_fname); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_28write_to_file[] = "Write the serialized tessellation information to a file. \n\n        Args:\n            fname (str): The full path to the file that the tessellation should \n                be written to.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_29write_to_file(PyObject *__pyx_v_self, PyObject *__pyx_v_fname) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write_to_file (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_28write_to_file(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyObject *)__pyx_v_fname));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_28write_to_file(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_fname) {
  char *__pyx_v_cfname;
  PyObject *__pyx_v_pyfname = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  char *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("write_to_file", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1954
 *         cdef char* cfname
 *         cdef bytes pyfname
 *         if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 *             cfname = fname
 *         else:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_PY_MAJOR_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_3, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1954, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1954, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":1955
 *         cdef bytes pyfname
 *         if PY_MAJOR_VERSION < 3:
 *             cfname = fname             # <<<<<<<<<<<<<<
 *         else:
 *             pyfname = bytes(fname, encoding="ascii")
 */
    __pyx_t_4 = __Pyx_PyObject_AsWritableString(__pyx_v_fname); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 1955, __pyx_L1_error)
    __pyx_v_cfname = __pyx_t_4;

    /* "cgal4py/delaunay/delaunay3.pyx":1954
 *         cdef char* cfname
 *         cdef bytes pyfname
 *         if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 *             cfname = fname
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1957
 *             cfname = fname
 *         else:
 *             pyfname = bytes(fname, encoding="ascii")             # <<<<<<<<<<<<<<
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  /*else*/ {
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_fname);
    __Pyx_GIVEREF(__pyx_v_fname);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_fname);
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_encoding, __pyx_n_s_ascii) < 0) __PYX_ERR(0, 1957, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_pyfname = ((PyObject*)__pyx_t_5);
    __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1958
 *         else:
 *             pyfname = bytes(fname, encoding="ascii")
 *             cfname = pyfname             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.write_to_file(cfname)
 */
    __pyx_t_4 = __Pyx_PyBytes_AsWritableString(__pyx_v_pyfname); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 1958, __pyx_L1_error)
    __pyx_v_cfname = __pyx_t_4;
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":1959
 *             pyfname = bytes(fname, encoding="ascii")
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.write_to_file(cfname)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":1960
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.write_to_file(cfname)             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
        try {
          __pyx_v_self->T->write_to_file(__pyx_v_cfname);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 1960, __pyx_L5_error)
        }
      }

      /* "cgal4py/delaunay/delaunay3.pyx":1959
 *             pyfname = bytes(fname, encoding="ascii")
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.write_to_file(cfname)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1944
 *         self.deserialize(pos, cells, neigh, idx_inf)
 * 
 *     def write_to_file(self, fname):             # <<<<<<<<<<<<<<
 *         r"""Write the serialized tessellation information to a file.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.write_to_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyfname);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1963
 * 
 *     @_update_to_tess
 *     def read_from_file(self, fname):             # <<<<<<<<<<<<<<
 *         r"""Read serialized tessellation information from a file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_31read_from_file(PyObject *__pyx_v_self, PyObject *__pyx_v_fname); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_30read_from_file[] = "Read serialized tessellation information from a file.\n\n        Args:\n            fname (str): The full path to the file that the tessellation should \n                be read from.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_31read_from_file(PyObject *__pyx_v_self, PyObject *__pyx_v_fname) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read_from_file (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_30read_from_file(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyObject *)__pyx_v_fname));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_30read_from_file(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_fname) {
  char *__pyx_v_cfname;
  PyObject *__pyx_v_pyfname = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  char *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("read_from_file", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":1973
 *         cdef char* cfname
 *         cdef bytes pyfname
 *         if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 *             cfname = fname
 *         else:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_PY_MAJOR_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_3, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "cgal4py/delaunay/delaunay3.pyx":1974
 *         cdef bytes pyfname
 *         if PY_MAJOR_VERSION < 3:
 *             cfname = fname             # <<<<<<<<<<<<<<
 *         else:
 *             pyfname = bytes(fname, encoding="ascii")
 */
    __pyx_t_4 = __Pyx_PyObject_AsWritableString(__pyx_v_fname); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 1974, __pyx_L1_error)
    __pyx_v_cfname = __pyx_t_4;

    /* "cgal4py/delaunay/delaunay3.pyx":1973
 *         cdef char* cfname
 *         cdef bytes pyfname
 *         if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 *             cfname = fname
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1976
 *             cfname = fname
 *         else:
 *             pyfname = bytes(fname, encoding="ascii")             # <<<<<<<<<<<<<<
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  /*else*/ {
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_fname);
    __Pyx_GIVEREF(__pyx_v_fname);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_fname);
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_encoding, __pyx_n_s_ascii) < 0) __PYX_ERR(0, 1976, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_pyfname = ((PyObject*)__pyx_t_5);
    __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":1977
 *         else:
 *             pyfname = bytes(fname, encoding="ascii")
 *             cfname = pyfname             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.read_from_file(cfname)
 */
    __pyx_t_4 = __Pyx_PyBytes_AsWritableString(__pyx_v_pyfname); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L1_error)
    __pyx_v_cfname = __pyx_t_4;
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":1978
 *             pyfname = bytes(fname, encoding="ascii")
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.read_from_file(cfname)
 *         self.n = self.T.num_finite_verts()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":1979
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.read_from_file(cfname)             # <<<<<<<<<<<<<<
 *         self.n = self.T.num_finite_verts()
 *         self.n_per_insert.append(self.n)
 */
        try {
          __pyx_v_self->T->read_from_file(__pyx_v_cfname);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 1979, __pyx_L5_error)
        }
      }

      /* "cgal4py/delaunay/delaunay3.pyx":1978
 *             pyfname = bytes(fname, encoding="ascii")
 *             cfname = pyfname
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.read_from_file(cfname)
 *         self.n = self.T.num_finite_verts()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":1980
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.read_from_file(cfname)
 *         self.n = self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *         self.n_per_insert.append(self.n)
 * 
 */
  __pyx_v_self->n = __pyx_v_self->T->num_finite_verts();

  /* "cgal4py/delaunay/delaunay3.pyx":1981
 *             self.T.read_from_file(cfname)
 *         self.n = self.T.num_finite_verts()
 *         self.n_per_insert.append(self.n)             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->n); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_Append(__pyx_v_self->n_per_insert, __pyx_t_5); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 1981, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1963
 * 
 *     @_update_to_tess
 *     def read_from_file(self, fname):             # <<<<<<<<<<<<<<
 *         r"""Read serialized tessellation information from a file.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.read_from_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyfname);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1985
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def serialize(self, pybool sort = False):             # <<<<<<<<<<<<<<
 *         r"""Serialize triangulation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_33serialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_32serialize[] = "Serialize triangulation. \n\n        Args:\n            sort (bool, optional): If True, cells info is sorted so that the \n                verts are in descending order for each cell and ascending order \n                overall. Defaults to False.\n\n        Returns: \n            tuple containing:\n                cells (np.ndarray of info_t): (n,m) Indices for m vertices in \n                    each of the n cells. A value of np.iinfo(np_info).max \n                    indicates the infinite vertex. \n                neighbors (np.ndarray of info_t): (n,l) Indices in `cells` of \n                    the m neighbors to each of the n cells. \n                idx_inf (I): Value representing the infinite vertex and or \n                    a missing neighbor.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_33serialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyBoolObject *__pyx_v_sort = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("serialize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sort,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sort);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "serialize") < 0)) __PYX_ERR(0, 1985, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sort = ((PyBoolObject *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("serialize", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1985, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.serialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sort), __pyx_ptype_7cpython_4bool_bool, 1, "sort", 0))) __PYX_ERR(0, 1985, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_32serialize(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_sort);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_32serialize(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyBoolObject *__pyx_v_sort) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_n;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_m;
  int32_t __pyx_v_d;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyArrayObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  __Pyx_RefNannySetupContext("serialize", 0);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;

  /* "cgal4py/delaunay/delaunay3.pyx":2009
 *         cdef np.ndarray[np_info_t, ndim=2] neighbors
 *         # Initialize arrays based on properties
 *         n = self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *         m = self.T.num_cells()
 *         assert(n == self.num_finite_verts)
 */
  __pyx_v_n = __pyx_v_self->T->num_finite_verts();

  /* "cgal4py/delaunay/delaunay3.pyx":2010
 *         # Initialize arrays based on properties
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()             # <<<<<<<<<<<<<<
 *         assert(n == self.num_finite_verts)
 *         assert(m == self.num_cells)
 */
  __pyx_v_m = __pyx_v_self->T->num_cells();

  /* "cgal4py/delaunay/delaunay3.pyx":2011
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()
 *         assert(n == self.num_finite_verts)             # <<<<<<<<<<<<<<
 *         assert(m == self.num_cells)
 *         d = 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_n); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2011, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_num_finite_verts); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2011, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2011, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2011, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2011, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2012
 *         m = self.T.num_cells()
 *         assert(n == self.num_finite_verts)
 *         assert(m == self.num_cells)             # <<<<<<<<<<<<<<
 *         d = 3
 *         cells = np.zeros((m, d+1), np_info)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_3 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_num_cells); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2012, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2013
 *         assert(n == self.num_finite_verts)
 *         assert(m == self.num_cells)
 *         d = 3             # <<<<<<<<<<<<<<
 *         cells = np.zeros((m, d+1), np_info)
 *         neighbors = np.zeros((m, d+1), np_info)
 */
  __pyx_v_d = 3;

  /* "cgal4py/delaunay/delaunay3.pyx":2014
 *         assert(m == self.num_cells)
 *         d = 3
 *         cells = np.zeros((m, d+1), np_info)             # <<<<<<<<<<<<<<
 *         neighbors = np.zeros((m, d+1), np_info)
 *         # Serialize and convert to original vertex order
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2014, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2014, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2014, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2014, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2015
 *         d = 3
 *         cells = np.zeros((m, d+1), np_info)
 *         neighbors = np.zeros((m, d+1), np_info)             # <<<<<<<<<<<<<<
 *         # Serialize and convert to original vertex order
 *         cdef info_t idx_inf
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_3 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2015, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2015, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_3 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2015, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_7, __pyx_t_5);
    __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_7, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2015, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2015, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
      __pyx_t_11 = __pyx_t_10 = __pyx_t_9 = 0;
    }
    __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2015, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_neighbors = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2018
 *         # Serialize and convert to original vertex order
 *         cdef info_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_idxinfo[info_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0])
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2020
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_idxinfo[info_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0])             # <<<<<<<<<<<<<<
 *         # Sort if desired
 *         if sort:
 */
        __pyx_t_13 = 0;
        __pyx_t_14 = 0;
        __pyx_t_15 = 0;
        __pyx_t_16 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2019
 *         cdef info_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_idxinfo[info_t](             # <<<<<<<<<<<<<<
 *                 n, m, d, &cells[0,0], &neighbors[0,0])
 *         # Sort if desired
 */
        __pyx_v_idx_inf = __pyx_v_self->T->serialize_idxinfo<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_14, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_16, __pyx_pybuffernd_neighbors.diminfo[1].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2018
 *         # Serialize and convert to original vertex order
 *         cdef info_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_idxinfo[info_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0])
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2022
 *                 n, m, d, &cells[0,0], &neighbors[0,0])
 *         # Sort if desired
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[info_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_sort)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2022, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2023
 *         # Sort if desired
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[info_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save;
        Py_UNBLOCK_THREADS
        __Pyx_FastGIL_Remember();
        #endif
        /*try:*/ {

          /* "cgal4py/delaunay/delaunay3.pyx":2024
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[info_t](&cells[0,0], &neighbors[0,0], m, d+1)             # <<<<<<<<<<<<<<
 *         return cells, neighbors, idx_inf
 * 
 */
          __pyx_t_17 = 0;
          __pyx_t_18 = 0;
          __pyx_t_19 = 0;
          __pyx_t_20 = 0;
          sortSerializedTess<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>((&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_18, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_19, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_20, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_m, (__pyx_v_d + 1));
        }

        /* "cgal4py/delaunay/delaunay3.pyx":2023
 *         # Sort if desired
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[info_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
        /*finally:*/ {
          /*normal exit:*/{
            #ifdef WITH_THREAD
            __Pyx_FastGIL_Forget();
            Py_BLOCK_THREADS
            #endif
            goto __pyx_L9;
          }
          __pyx_L9:;
        }
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2022
 *                 n, m, d, &cells[0,0], &neighbors[0,0])
 *         # Sort if desired
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[info_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2025
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[info_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_cells));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_cells));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_cells));
  __Pyx_INCREF(((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_neighbors));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":1985
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def serialize(self, pybool sort = False):             # <<<<<<<<<<<<<<
 *         r"""Serialize triangulation.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.serialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_neighbors);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2029
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_int32(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                   np.ndarray[np.int32_t] idx,
 *                                   pybool sort=False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_35_serialize_info2idx_int32(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_35_serialize_info2idx_int32(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info;
  PyArrayObject *__pyx_v_idx = 0;
  PyBoolObject *__pyx_v_sort = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_serialize_info2idx_int32 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_max_info,&__pyx_n_s_idx,&__pyx_n_s_sort,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":2031
 *     def _serialize_info2idx_int32(self, info_t max_info,
 *                                   np.ndarray[np.int32_t] idx,
 *                                   pybool sort=False):             # <<<<<<<<<<<<<<
 *         cdef int32_t n, m
 *         cdef int32_t d
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_max_info)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_int32", 0, 2, 3, 1); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sort);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_serialize_info2idx_int32") < 0)) __PYX_ERR(0, 2029, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_max_info = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_max_info == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2029, __pyx_L3_error)
    __pyx_v_idx = ((PyArrayObject *)values[1]);
    __pyx_v_sort = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_int32", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2029, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_int32", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_idx), __pyx_ptype_5numpy_ndarray, 1, "idx", 0))) __PYX_ERR(0, 2030, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sort), __pyx_ptype_7cpython_4bool_bool, 1, "sort", 0))) __PYX_ERR(0, 2031, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_34_serialize_info2idx_int32(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_max_info, __pyx_v_idx, __pyx_v_sort);

  /* "cgal4py/delaunay/delaunay3.pyx":2029
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_int32(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                   np.ndarray[np.int32_t] idx,
 *                                   pybool sort=False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_34_serialize_info2idx_int32(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort) {
  int32_t __pyx_v_n;
  int32_t __pyx_v_m;
  int32_t __pyx_v_d;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  int32_t __pyx_v_idx_inf;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_idx;
  __Pyx_Buffer __pyx_pybuffer_idx;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyArrayObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  __Pyx_RefNannySetupContext("_serialize_info2idx_int32", 0);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;
  __pyx_pybuffer_idx.pybuffer.buf = NULL;
  __pyx_pybuffer_idx.refcount = 0;
  __pyx_pybuffernd_idx.data = NULL;
  __pyx_pybuffernd_idx.rcbuffer = &__pyx_pybuffer_idx;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_idx.rcbuffer->pybuffer, (PyObject*)__pyx_v_idx, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2029, __pyx_L1_error)
  }
  __pyx_pybuffernd_idx.diminfo[0].strides = __pyx_pybuffernd_idx.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_idx.diminfo[0].shape = __pyx_pybuffernd_idx.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2036
 *         cdef np.ndarray[np.int32_t, ndim=2] cells
 *         cdef np.ndarray[np.int32_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 */
  __pyx_v_n = __pyx_v_self->T->num_finite_verts();

  /* "cgal4py/delaunay/delaunay3.pyx":2037
 *         cdef np.ndarray[np.int32_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()             # <<<<<<<<<<<<<<
 *         assert(idx.size >= n)
 *         d = 3
 */
  __pyx_v_m = __pyx_v_self->T->num_cells();

  /* "cgal4py/delaunay/delaunay3.pyx":2038
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)             # <<<<<<<<<<<<<<
 *         d = 3
 *         cells = np.zeros((m, d+1), 'int32')
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_idx), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2038, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_From_int32_t(__pyx_v_n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2038, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2038, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2038, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2038, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2039
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 *         d = 3             # <<<<<<<<<<<<<<
 *         cells = np.zeros((m, d+1), 'int32')
 *         neighbors = np.zeros((m, d+1), 'int32')
 */
  __pyx_v_d = 3;

  /* "cgal4py/delaunay/delaunay3.pyx":2040
 *         assert(idx.size >= n)
 *         d = 3
 *         cells = np.zeros((m, d+1), 'int32')             # <<<<<<<<<<<<<<
 *         neighbors = np.zeros((m, d+1), 'int32')
 *         cdef int32_t idx_inf
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_int32};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2040, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_int32};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2040, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2040, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_t_6);
    __Pyx_INCREF(__pyx_n_s_int32);
    __Pyx_GIVEREF(__pyx_n_s_int32);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_n_s_int32);
    __pyx_t_6 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2040, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2040, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2040, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2041
 *         d = 3
 *         cells = np.zeros((m, d+1), 'int32')
 *         neighbors = np.zeros((m, d+1), 'int32')             # <<<<<<<<<<<<<<
 *         cdef int32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_int32};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2041, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_int32};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2041, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2041, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_t_5);
    __Pyx_INCREF(__pyx_n_s_int32);
    __Pyx_GIVEREF(__pyx_n_s_int32);
    PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_n_s_int32);
    __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2041, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2041, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
      __pyx_t_11 = __pyx_t_10 = __pyx_t_9 = 0;
    }
    __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2041, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_neighbors = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2043
 *         neighbors = np.zeros((m, d+1), 'int32')
 *         cdef int32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[int32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2045
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[int32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])             # <<<<<<<<<<<<<<
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 */
        __pyx_t_13 = 0;
        __pyx_t_14 = 0;
        __pyx_t_15 = 0;
        __pyx_t_16 = 0;
        __pyx_t_17 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2044
 *         cdef int32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[int32_t](             # <<<<<<<<<<<<<<
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 */
        __pyx_v_idx_inf = __pyx_v_self->T->serialize_info2idx<int32_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int32_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_14, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int32_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_16, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_max_info, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int32_t *, __pyx_pybuffernd_idx.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_idx.diminfo[0].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2043
 *         neighbors = np.zeros((m, d+1), 'int32')
 *         cdef int32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[int32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2046
 *             idx_inf = self.T.serialize_info2idx[int32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cells), __pyx_n_s_resize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2046, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2047
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighbors), __pyx_n_s_resize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2047, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2048
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_sort)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2048, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2049
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[int32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save;
        Py_UNBLOCK_THREADS
        __Pyx_FastGIL_Remember();
        #endif
        /*try:*/ {

          /* "cgal4py/delaunay/delaunay3.pyx":2050
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int32_t](&cells[0,0], &neighbors[0,0], m, d+1)             # <<<<<<<<<<<<<<
 *         return cells, neighbors, idx_inf
 * 
 */
          __pyx_t_18 = 0;
          __pyx_t_19 = 0;
          __pyx_t_20 = 0;
          __pyx_t_21 = 0;
          sortSerializedTess<int32_t>((&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int32_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_18, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_19, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int32_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_20, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_21, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_m, (__pyx_v_d + 1));
        }

        /* "cgal4py/delaunay/delaunay3.pyx":2049
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[int32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
        /*finally:*/ {
          /*normal exit:*/{
            #ifdef WITH_THREAD
            __Pyx_FastGIL_Forget();
            Py_BLOCK_THREADS
            #endif
            goto __pyx_L9;
          }
          __pyx_L9:;
        }
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2048
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2051
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(((PyObject *)__pyx_v_cells));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_cells));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_cells));
  __Pyx_INCREF(((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_neighbors));
  PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2029
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_int32(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                   np.ndarray[np.int32_t] idx,
 *                                   pybool sort=False):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_int32", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_neighbors);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2055
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_uint32(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                    np.ndarray[np.uint32_t] idx,
 *                                    pybool sort=False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_37_serialize_info2idx_uint32(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_37_serialize_info2idx_uint32(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info;
  PyArrayObject *__pyx_v_idx = 0;
  PyBoolObject *__pyx_v_sort = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_serialize_info2idx_uint32 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_max_info,&__pyx_n_s_idx,&__pyx_n_s_sort,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":2057
 *     def _serialize_info2idx_uint32(self, info_t max_info,
 *                                    np.ndarray[np.uint32_t] idx,
 *                                    pybool sort=False):             # <<<<<<<<<<<<<<
 *         cdef uint32_t n, m
 *         cdef int32_t d
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_max_info)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_uint32", 0, 2, 3, 1); __PYX_ERR(0, 2055, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sort);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_serialize_info2idx_uint32") < 0)) __PYX_ERR(0, 2055, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_max_info = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_max_info == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2055, __pyx_L3_error)
    __pyx_v_idx = ((PyArrayObject *)values[1]);
    __pyx_v_sort = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_uint32", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2055, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_uint32", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_idx), __pyx_ptype_5numpy_ndarray, 1, "idx", 0))) __PYX_ERR(0, 2056, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sort), __pyx_ptype_7cpython_4bool_bool, 1, "sort", 0))) __PYX_ERR(0, 2057, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_36_serialize_info2idx_uint32(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_max_info, __pyx_v_idx, __pyx_v_sort);

  /* "cgal4py/delaunay/delaunay3.pyx":2055
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_uint32(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                    np.ndarray[np.uint32_t] idx,
 *                                    pybool sort=False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_36_serialize_info2idx_uint32(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort) {
  uint32_t __pyx_v_n;
  uint32_t __pyx_v_m;
  int32_t __pyx_v_d;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  uint32_t __pyx_v_idx_inf;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_idx;
  __Pyx_Buffer __pyx_pybuffer_idx;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyArrayObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  __Pyx_RefNannySetupContext("_serialize_info2idx_uint32", 0);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;
  __pyx_pybuffer_idx.pybuffer.buf = NULL;
  __pyx_pybuffer_idx.refcount = 0;
  __pyx_pybuffernd_idx.data = NULL;
  __pyx_pybuffernd_idx.rcbuffer = &__pyx_pybuffer_idx;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_idx.rcbuffer->pybuffer, (PyObject*)__pyx_v_idx, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint32_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2055, __pyx_L1_error)
  }
  __pyx_pybuffernd_idx.diminfo[0].strides = __pyx_pybuffernd_idx.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_idx.diminfo[0].shape = __pyx_pybuffernd_idx.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2062
 *         cdef np.ndarray[np.uint32_t, ndim=2] cells
 *         cdef np.ndarray[np.uint32_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 */
  __pyx_v_n = __pyx_v_self->T->num_finite_verts();

  /* "cgal4py/delaunay/delaunay3.pyx":2063
 *         cdef np.ndarray[np.uint32_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()             # <<<<<<<<<<<<<<
 *         assert(idx.size >= n)
 *         d = 3
 */
  __pyx_v_m = __pyx_v_self->T->num_cells();

  /* "cgal4py/delaunay/delaunay3.pyx":2064
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)             # <<<<<<<<<<<<<<
 *         d = 3
 *         cells = np.zeros((m, d+1), 'uint32')
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_idx), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_From_uint32_t(__pyx_v_n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2064, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2064, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2064, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2065
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 *         d = 3             # <<<<<<<<<<<<<<
 *         cells = np.zeros((m, d+1), 'uint32')
 *         neighbors = np.zeros((m, d+1), 'uint32')
 */
  __pyx_v_d = 3;

  /* "cgal4py/delaunay/delaunay3.pyx":2066
 *         assert(idx.size >= n)
 *         d = 3
 *         cells = np.zeros((m, d+1), 'uint32')             # <<<<<<<<<<<<<<
 *         neighbors = np.zeros((m, d+1), 'uint32')
 *         cdef uint32_t idx_inf
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_uint32};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_uint32};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_t_6);
    __Pyx_INCREF(__pyx_n_s_uint32);
    __Pyx_GIVEREF(__pyx_n_s_uint32);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_n_s_uint32);
    __pyx_t_6 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2066, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2066, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2067
 *         d = 3
 *         cells = np.zeros((m, d+1), 'uint32')
 *         neighbors = np.zeros((m, d+1), 'uint32')             # <<<<<<<<<<<<<<
 *         cdef uint32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_uint32};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2067, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_uint32};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2067, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_t_5);
    __Pyx_INCREF(__pyx_n_s_uint32);
    __Pyx_GIVEREF(__pyx_n_s_uint32);
    PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_n_s_uint32);
    __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2067, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint32_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
      __pyx_t_11 = __pyx_t_10 = __pyx_t_9 = 0;
    }
    __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2067, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_neighbors = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2069
 *         neighbors = np.zeros((m, d+1), 'uint32')
 *         cdef uint32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[uint32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2071
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[uint32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])             # <<<<<<<<<<<<<<
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 */
        __pyx_t_13 = 0;
        __pyx_t_14 = 0;
        __pyx_t_15 = 0;
        __pyx_t_16 = 0;
        __pyx_t_17 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2070
 *         cdef uint32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[uint32_t](             # <<<<<<<<<<<<<<
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 */
        __pyx_v_idx_inf = __pyx_v_self->T->serialize_info2idx<uint32_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint32_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_14, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint32_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_16, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_max_info, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_uint32_t *, __pyx_pybuffernd_idx.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_idx.diminfo[0].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2069
 *         neighbors = np.zeros((m, d+1), 'uint32')
 *         cdef uint32_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[uint32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2072
 *             idx_inf = self.T.serialize_info2idx[uint32_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cells), __pyx_n_s_resize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2072, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2073
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighbors), __pyx_n_s_resize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2073, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2074
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_sort)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2074, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2075
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[uint32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save;
        Py_UNBLOCK_THREADS
        __Pyx_FastGIL_Remember();
        #endif
        /*try:*/ {

          /* "cgal4py/delaunay/delaunay3.pyx":2076
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint32_t](&cells[0,0], &neighbors[0,0], m, d+1)             # <<<<<<<<<<<<<<
 *         return cells, neighbors, idx_inf
 * 
 */
          __pyx_t_18 = 0;
          __pyx_t_19 = 0;
          __pyx_t_20 = 0;
          __pyx_t_21 = 0;
          sortSerializedTess<uint32_t>((&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint32_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_18, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_19, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint32_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_20, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_21, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_m, (__pyx_v_d + 1));
        }

        /* "cgal4py/delaunay/delaunay3.pyx":2075
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[uint32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
        /*finally:*/ {
          /*normal exit:*/{
            #ifdef WITH_THREAD
            __Pyx_FastGIL_Forget();
            Py_BLOCK_THREADS
            #endif
            goto __pyx_L9;
          }
          __pyx_L9:;
        }
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2074
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2077
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint32_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(((PyObject *)__pyx_v_cells));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_cells));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_cells));
  __Pyx_INCREF(((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_neighbors));
  PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2055
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_uint32(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                    np.ndarray[np.uint32_t] idx,
 *                                    pybool sort=False):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_uint32", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_neighbors);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2081
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_int64(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                   np.ndarray[np.int64_t] idx,
 *                                   pybool sort=False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_39_serialize_info2idx_int64(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_39_serialize_info2idx_int64(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info;
  PyArrayObject *__pyx_v_idx = 0;
  PyBoolObject *__pyx_v_sort = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_serialize_info2idx_int64 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_max_info,&__pyx_n_s_idx,&__pyx_n_s_sort,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":2083
 *     def _serialize_info2idx_int64(self, info_t max_info,
 *                                   np.ndarray[np.int64_t] idx,
 *                                   pybool sort=False):             # <<<<<<<<<<<<<<
 *         cdef int64_t n, m
 *         cdef int32_t d
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_max_info)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_int64", 0, 2, 3, 1); __PYX_ERR(0, 2081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sort);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_serialize_info2idx_int64") < 0)) __PYX_ERR(0, 2081, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_max_info = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_max_info == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2081, __pyx_L3_error)
    __pyx_v_idx = ((PyArrayObject *)values[1]);
    __pyx_v_sort = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_int64", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2081, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_int64", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_idx), __pyx_ptype_5numpy_ndarray, 1, "idx", 0))) __PYX_ERR(0, 2082, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sort), __pyx_ptype_7cpython_4bool_bool, 1, "sort", 0))) __PYX_ERR(0, 2083, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_38_serialize_info2idx_int64(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_max_info, __pyx_v_idx, __pyx_v_sort);

  /* "cgal4py/delaunay/delaunay3.pyx":2081
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_int64(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                   np.ndarray[np.int64_t] idx,
 *                                   pybool sort=False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_38_serialize_info2idx_int64(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort) {
  int64_t __pyx_v_n;
  int64_t __pyx_v_m;
  int32_t __pyx_v_d;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  int64_t __pyx_v_idx_inf;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_idx;
  __Pyx_Buffer __pyx_pybuffer_idx;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyArrayObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  __Pyx_RefNannySetupContext("_serialize_info2idx_int64", 0);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;
  __pyx_pybuffer_idx.pybuffer.buf = NULL;
  __pyx_pybuffer_idx.refcount = 0;
  __pyx_pybuffernd_idx.data = NULL;
  __pyx_pybuffernd_idx.rcbuffer = &__pyx_pybuffer_idx;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_idx.rcbuffer->pybuffer, (PyObject*)__pyx_v_idx, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2081, __pyx_L1_error)
  }
  __pyx_pybuffernd_idx.diminfo[0].strides = __pyx_pybuffernd_idx.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_idx.diminfo[0].shape = __pyx_pybuffernd_idx.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2088
 *         cdef np.ndarray[np.int64_t, ndim=2] cells
 *         cdef np.ndarray[np.int64_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 */
  __pyx_v_n = __pyx_v_self->T->num_finite_verts();

  /* "cgal4py/delaunay/delaunay3.pyx":2089
 *         cdef np.ndarray[np.int64_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()             # <<<<<<<<<<<<<<
 *         assert(idx.size >= n)
 *         d = 3
 */
  __pyx_v_m = __pyx_v_self->T->num_cells();

  /* "cgal4py/delaunay/delaunay3.pyx":2090
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)             # <<<<<<<<<<<<<<
 *         d = 3
 *         cells = np.zeros((m, d+1), 'int64')
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_idx), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_From_int64_t(__pyx_v_n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2090, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2090, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2090, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2091
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 *         d = 3             # <<<<<<<<<<<<<<
 *         cells = np.zeros((m, d+1), 'int64')
 *         neighbors = np.zeros((m, d+1), 'int64')
 */
  __pyx_v_d = 3;

  /* "cgal4py/delaunay/delaunay3.pyx":2092
 *         assert(idx.size >= n)
 *         d = 3
 *         cells = np.zeros((m, d+1), 'int64')             # <<<<<<<<<<<<<<
 *         neighbors = np.zeros((m, d+1), 'int64')
 *         cdef int64_t idx_inf
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int64_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_int64};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_int64};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_t_6);
    __Pyx_INCREF(__pyx_n_s_int64);
    __Pyx_GIVEREF(__pyx_n_s_int64);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_n_s_int64);
    __pyx_t_6 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2092, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2092, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2093
 *         d = 3
 *         cells = np.zeros((m, d+1), 'int64')
 *         neighbors = np.zeros((m, d+1), 'int64')             # <<<<<<<<<<<<<<
 *         cdef int64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int64_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_int64};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_int64};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_t_5);
    __Pyx_INCREF(__pyx_n_s_int64);
    __Pyx_GIVEREF(__pyx_n_s_int64);
    PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_n_s_int64);
    __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2093, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
      __pyx_t_11 = __pyx_t_10 = __pyx_t_9 = 0;
    }
    __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2093, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_neighbors = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2095
 *         neighbors = np.zeros((m, d+1), 'int64')
 *         cdef int64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[int64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2097
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[int64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])             # <<<<<<<<<<<<<<
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 */
        __pyx_t_13 = 0;
        __pyx_t_14 = 0;
        __pyx_t_15 = 0;
        __pyx_t_16 = 0;
        __pyx_t_17 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2096
 *         cdef int64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[int64_t](             # <<<<<<<<<<<<<<
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 */
        __pyx_v_idx_inf = __pyx_v_self->T->serialize_info2idx<int64_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, ((int64_t *)(&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_14, __pyx_pybuffernd_cells.diminfo[1].strides)))), ((int64_t *)(&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_16, __pyx_pybuffernd_neighbors.diminfo[1].strides)))), __pyx_v_max_info, ((int64_t *)(&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_pybuffernd_idx.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_idx.diminfo[0].strides)))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2095
 *         neighbors = np.zeros((m, d+1), 'int64')
 *         cdef int64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[int64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2098
 *             idx_inf = self.T.serialize_info2idx[int64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cells), __pyx_n_s_resize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_From_int64_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2098, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2099
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighbors), __pyx_n_s_resize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_int64_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2099, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2100
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_sort)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2100, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2101
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[int64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save;
        Py_UNBLOCK_THREADS
        __Pyx_FastGIL_Remember();
        #endif
        /*try:*/ {

          /* "cgal4py/delaunay/delaunay3.pyx":2102
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int64_t](&cells[0,0], &neighbors[0,0], m, d+1)             # <<<<<<<<<<<<<<
 *         return cells, neighbors, idx_inf
 * 
 */
          __pyx_t_18 = 0;
          __pyx_t_19 = 0;
          __pyx_t_20 = 0;
          __pyx_t_21 = 0;
          sortSerializedTess<int64_t>(((int64_t *)(&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_18, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_19, __pyx_pybuffernd_cells.diminfo[1].strides)))), ((int64_t *)(&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_20, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_21, __pyx_pybuffernd_neighbors.diminfo[1].strides)))), __pyx_v_m, (__pyx_v_d + 1));
        }

        /* "cgal4py/delaunay/delaunay3.pyx":2101
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[int64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
        /*finally:*/ {
          /*normal exit:*/{
            #ifdef WITH_THREAD
            __Pyx_FastGIL_Forget();
            Py_BLOCK_THREADS
            #endif
            goto __pyx_L9;
          }
          __pyx_L9:;
        }
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2100
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2103
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[int64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int64_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(((PyObject *)__pyx_v_cells));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_cells));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_cells));
  __Pyx_INCREF(((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_neighbors));
  PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2081
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_int64(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                   np.ndarray[np.int64_t] idx,
 *                                   pybool sort=False):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_int64", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_neighbors);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2107
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_uint64(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                    np.ndarray[np.uint64_t] idx,
 *                                    pybool sort=False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_41_serialize_info2idx_uint64(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_41_serialize_info2idx_uint64(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info;
  PyArrayObject *__pyx_v_idx = 0;
  PyBoolObject *__pyx_v_sort = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_serialize_info2idx_uint64 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_max_info,&__pyx_n_s_idx,&__pyx_n_s_sort,0};
    PyObject* values[3] = {0,0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":2109
 *     def _serialize_info2idx_uint64(self, info_t max_info,
 *                                    np.ndarray[np.uint64_t] idx,
 *                                    pybool sort=False):             # <<<<<<<<<<<<<<
 *         cdef uint64_t n, m
 *         cdef int32_t d
 */
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_max_info)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_uint64", 0, 2, 3, 1); __PYX_ERR(0, 2107, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sort);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_serialize_info2idx_uint64") < 0)) __PYX_ERR(0, 2107, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_max_info = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_max_info == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2107, __pyx_L3_error)
    __pyx_v_idx = ((PyArrayObject *)values[1]);
    __pyx_v_sort = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_serialize_info2idx_uint64", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2107, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_uint64", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_idx), __pyx_ptype_5numpy_ndarray, 1, "idx", 0))) __PYX_ERR(0, 2108, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sort), __pyx_ptype_7cpython_4bool_bool, 1, "sort", 0))) __PYX_ERR(0, 2109, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_40_serialize_info2idx_uint64(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_max_info, __pyx_v_idx, __pyx_v_sort);

  /* "cgal4py/delaunay/delaunay3.pyx":2107
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_uint64(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                    np.ndarray[np.uint64_t] idx,
 *                                    pybool sort=False):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_40_serialize_info2idx_uint64(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_max_info, PyArrayObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort) {
  uint64_t __pyx_v_n;
  uint64_t __pyx_v_m;
  int32_t __pyx_v_d;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  uint64_t __pyx_v_idx_inf;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_idx;
  __Pyx_Buffer __pyx_pybuffer_idx;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyArrayObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  __Pyx_RefNannySetupContext("_serialize_info2idx_uint64", 0);
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;
  __pyx_pybuffer_idx.pybuffer.buf = NULL;
  __pyx_pybuffer_idx.refcount = 0;
  __pyx_pybuffernd_idx.data = NULL;
  __pyx_pybuffernd_idx.rcbuffer = &__pyx_pybuffer_idx;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_idx.rcbuffer->pybuffer, (PyObject*)__pyx_v_idx, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2107, __pyx_L1_error)
  }
  __pyx_pybuffernd_idx.diminfo[0].strides = __pyx_pybuffernd_idx.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_idx.diminfo[0].shape = __pyx_pybuffernd_idx.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2114
 *         cdef np.ndarray[np.uint64_t, ndim=2] cells
 *         cdef np.ndarray[np.uint64_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 */
  __pyx_v_n = __pyx_v_self->T->num_finite_verts();

  /* "cgal4py/delaunay/delaunay3.pyx":2115
 *         cdef np.ndarray[np.uint64_t, ndim=2] neighbors
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()             # <<<<<<<<<<<<<<
 *         assert(idx.size >= n)
 *         d = 3
 */
  __pyx_v_m = __pyx_v_self->T->num_cells();

  /* "cgal4py/delaunay/delaunay3.pyx":2116
 *         n = self.T.num_finite_verts()
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)             # <<<<<<<<<<<<<<
 *         d = 3
 *         cells = np.zeros((m, d+1), 'uint64')
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_idx), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_From_uint64_t(__pyx_v_n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2116, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2117
 *         m = self.T.num_cells()
 *         assert(idx.size >= n)
 *         d = 3             # <<<<<<<<<<<<<<
 *         cells = np.zeros((m, d+1), 'uint64')
 *         neighbors = np.zeros((m, d+1), 'uint64')
 */
  __pyx_v_d = 3;

  /* "cgal4py/delaunay/delaunay3.pyx":2118
 *         assert(idx.size >= n)
 *         d = 3
 *         cells = np.zeros((m, d+1), 'uint64')             # <<<<<<<<<<<<<<
 *         neighbors = np.zeros((m, d+1), 'uint64')
 *         cdef uint64_t idx_inf
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_uint64_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_uint64};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_6, __pyx_n_s_uint64};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_t_6);
    __Pyx_INCREF(__pyx_n_s_uint64);
    __Pyx_GIVEREF(__pyx_n_s_uint64);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_n_s_uint64);
    __pyx_t_6 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2118, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
    }
    __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2118, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_cells = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2119
 *         d = 3
 *         cells = np.zeros((m, d+1), 'uint64')
 *         neighbors = np.zeros((m, d+1), 'uint64')             # <<<<<<<<<<<<<<
 *         cdef uint64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_uint64_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_uint64};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2119, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, __pyx_n_s_uint64};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2119, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_1 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_t_5);
    __Pyx_INCREF(__pyx_n_s_uint64);
    __Pyx_GIVEREF(__pyx_n_s_uint64);
    PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_n_s_uint64);
    __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2119, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
      __pyx_t_11 = __pyx_t_10 = __pyx_t_9 = 0;
    }
    __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2119, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_neighbors = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2121
 *         neighbors = np.zeros((m, d+1), 'uint64')
 *         cdef uint64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[uint64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2123
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[uint64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])             # <<<<<<<<<<<<<<
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 */
        __pyx_t_13 = 0;
        __pyx_t_14 = 0;
        __pyx_t_15 = 0;
        __pyx_t_16 = 0;
        __pyx_t_17 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2122
 *         cdef uint64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             idx_inf = self.T.serialize_info2idx[uint64_t](             # <<<<<<<<<<<<<<
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 */
        __pyx_v_idx_inf = __pyx_v_self->T->serialize_info2idx<uint64_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint64_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_14, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint64_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_16, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_max_info, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_uint64_t *, __pyx_pybuffernd_idx.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_idx.diminfo[0].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2121
 *         neighbors = np.zeros((m, d+1), 'uint64')
 *         cdef uint64_t idx_inf
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             idx_inf = self.T.serialize_info2idx[uint64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2124
 *             idx_inf = self.T.serialize_info2idx[uint64_t](
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cells), __pyx_n_s_resize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_From_uint64_t(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2124, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2125
 *                 n, m, d, &cells[0,0], &neighbors[0,0], max_info, &idx[0])
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)             # <<<<<<<<<<<<<<
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighbors), __pyx_n_s_resize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_From_uint64_t(__pyx_v_m); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_From_long((__pyx_v_d + 1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_refcheck, Py_False) < 0) __PYX_ERR(0, 2125, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2126
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_sort)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2126, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2127
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[uint64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save;
        Py_UNBLOCK_THREADS
        __Pyx_FastGIL_Remember();
        #endif
        /*try:*/ {

          /* "cgal4py/delaunay/delaunay3.pyx":2128
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint64_t](&cells[0,0], &neighbors[0,0], m, d+1)             # <<<<<<<<<<<<<<
 *         return cells, neighbors, idx_inf
 * 
 */
          __pyx_t_18 = 0;
          __pyx_t_19 = 0;
          __pyx_t_20 = 0;
          __pyx_t_21 = 0;
          sortSerializedTess<uint64_t>((&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint64_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_18, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_19, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint64_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_20, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_21, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_m, (__pyx_v_d + 1));
        }

        /* "cgal4py/delaunay/delaunay3.pyx":2127
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 sortSerializedTess[uint64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf
 */
        /*finally:*/ {
          /*normal exit:*/{
            #ifdef WITH_THREAD
            __Pyx_FastGIL_Forget();
            Py_BLOCK_THREADS
            #endif
            goto __pyx_L9;
          }
          __pyx_L9:;
        }
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2126
 *         cells.resize(m, d+1, refcheck=False)
 *         neighbors.resize(m, d+1, refcheck=False)
 *         if sort:             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2129
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 sortSerializedTess[uint64_t](&cells[0,0], &neighbors[0,0], m, d+1)
 *         return cells, neighbors, idx_inf             # <<<<<<<<<<<<<<
 * 
 *     def serialize_info2idx(self, max_info, idx, pybool sort = False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint64_t(__pyx_v_idx_inf); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(((PyObject *)__pyx_v_cells));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_cells));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_cells));
  __Pyx_INCREF(((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_neighbors));
  PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_neighbors));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2107
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def _serialize_info2idx_uint64(self, info_t max_info,             # <<<<<<<<<<<<<<
 *                                    np.ndarray[np.uint64_t] idx,
 *                                    pybool sort=False):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3._serialize_info2idx_uint64", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_neighbors);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2131
 *         return cells, neighbors, idx_inf
 * 
 *     def serialize_info2idx(self, max_info, idx, pybool sort = False):             # <<<<<<<<<<<<<<
 *         r"""Serialize triangulation, only including some vertices and
 *         translating the indices.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_43serialize_info2idx(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_42serialize_info2idx[] = "Serialize triangulation, only including some vertices and \n        translating the indices. \n\n        Args:\n            max_info (info_t): Maximum value of info for verts that will be\n                included in the serialization.  \n            idx (np.ndarray of I): Indices that should be used to map from \n                vertex info.     \n            sort (bool, optional): If True, cells info is sorted so that the \n                verts are in descending order for each cell and ascending order \n                overall. Defaults to False.\n\n        Returns: \n            tuple containing:\n                cells (np.ndarray of info_t): (n,m) Indices for m vertices in \n                    each of the n cells. A value of np.iinfo(np_info).max \n                    indicates the infinite vertex. \n                neighbors (np.ndarray of info_t): (n,l) Indices in `cells` of \n                    the m neighbors to each of the n cells. \n                idx_inf (I): Value representing the infinite vertex and or \n                    a missing neighbor.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_43serialize_info2idx(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_max_info = 0;
  PyObject *__pyx_v_idx = 0;
  PyBoolObject *__pyx_v_sort = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("serialize_info2idx (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_max_info,&__pyx_n_s_idx,&__pyx_n_s_sort,0};
    PyObject* values[3] = {0,0,0};
    values[2] = (PyObject *)((PyBoolObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_max_info)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("serialize_info2idx", 0, 2, 3, 1); __PYX_ERR(0, 2131, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sort);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "serialize_info2idx") < 0)) __PYX_ERR(0, 2131, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_max_info = values[0];
    __pyx_v_idx = values[1];
    __pyx_v_sort = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("serialize_info2idx", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2131, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.serialize_info2idx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sort), __pyx_ptype_7cpython_4bool_bool, 1, "sort", 0))) __PYX_ERR(0, 2131, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_42serialize_info2idx(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_max_info, __pyx_v_idx, __pyx_v_sort);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_42serialize_info2idx(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_max_info, PyObject *__pyx_v_idx, PyBoolObject *__pyx_v_sort) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("serialize_info2idx", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2155
 * 
 *         """
 *         if idx.dtype == np.int32:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_int32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint32:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_idx, __pyx_n_s_dtype); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int32); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2155, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2155, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2156
 *         """
 *         if idx.dtype == np.int32:
 *             return self._serialize_info2idx_int32(<info_t>max_info, idx, sort)             # <<<<<<<<<<<<<<
 *         elif idx.dtype == np.uint32:
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_serialize_info2idx_int32); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyInt_As_uint32_t(__pyx_v_max_info); if (unlikely((__pyx_t_5 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2156, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyInt_From_uint32_t(((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_t_5)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_1, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2156, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_1, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2156, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_1);
      __Pyx_INCREF(__pyx_v_idx);
      __Pyx_GIVEREF(__pyx_v_idx);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_idx);
      __Pyx_INCREF(((PyObject *)__pyx_v_sort));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_sort));
      PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, ((PyObject *)__pyx_v_sort));
      __pyx_t_1 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2155
 * 
 *         """
 *         if idx.dtype == np.int32:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_int32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint32:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2157
 *         if idx.dtype == np.int32:
 *             return self._serialize_info2idx_int32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint32:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.int64:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_idx, __pyx_n_s_dtype); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_uint32); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_8, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2158
 *             return self._serialize_info2idx_int32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint32:
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)             # <<<<<<<<<<<<<<
 *         elif idx.dtype == np.int64:
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_serialize_info2idx_uint32); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_5 = __Pyx_PyInt_As_uint32_t(__pyx_v_max_info); if (unlikely((__pyx_t_5 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2158, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyInt_From_uint32_t(((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_t_5)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_t_2, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2158, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_t_2, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2158, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_7, __pyx_t_2);
      __Pyx_INCREF(__pyx_v_idx);
      __Pyx_GIVEREF(__pyx_v_idx);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_7, __pyx_v_idx);
      __Pyx_INCREF(((PyObject *)__pyx_v_sort));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_sort));
      PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_7, ((PyObject *)__pyx_v_sort));
      __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2157
 *         if idx.dtype == np.int32:
 *             return self._serialize_info2idx_int32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint32:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.int64:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2159
 *         elif idx.dtype == np.uint32:
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.int64:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint64:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_idx, __pyx_n_s_dtype); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_int64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyObject_RichCompare(__pyx_t_3, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2159, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2159, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2160
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.int64:
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)             # <<<<<<<<<<<<<<
 *         elif idx.dtype == np.uint64:
 *             return self._serialize_info2idx_uint64(<info_t>max_info, idx, sort)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_serialize_info2idx_int64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyInt_As_uint32_t(__pyx_v_max_info); if (unlikely((__pyx_t_5 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2160, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_uint32_t(((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_t_5)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_t_3, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2160, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_t_3, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2160, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_1 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2160, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__pyx_t_2) {
        __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2); __pyx_t_2 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_7, __pyx_t_3);
      __Pyx_INCREF(__pyx_v_idx);
      __Pyx_GIVEREF(__pyx_v_idx);
      PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_7, __pyx_v_idx);
      __Pyx_INCREF(((PyObject *)__pyx_v_sort));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_sort));
      PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_7, ((PyObject *)__pyx_v_sort));
      __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_1, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2160, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_r = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2159
 *         elif idx.dtype == np.uint32:
 *             return self._serialize_info2idx_uint32(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.int64:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint64:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2161
 *         elif idx.dtype == np.int64:
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint64:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_uint64(<info_t>max_info, idx, sort)
 *         else:
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_idx, __pyx_n_s_dtype); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_uint64); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_8, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (likely(__pyx_t_4)) {

    /* "cgal4py/delaunay/delaunay3.pyx":2162
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint64:
 *             return self._serialize_info2idx_uint64(<info_t>max_info, idx, sort)             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("idx.dtype = {} is not supported.".format(idx.dtype))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_serialize_info2idx_uint64); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyInt_As_uint32_t(__pyx_v_max_info); if (unlikely((__pyx_t_5 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2162, __pyx_L1_error)
    __pyx_t_8 = __Pyx_PyInt_From_uint32_t(((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_t_5)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_8, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2162, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_t_8, __pyx_v_idx, ((PyObject *)__pyx_v_sort)};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2162, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_t_8);
      __Pyx_INCREF(__pyx_v_idx);
      __Pyx_GIVEREF(__pyx_v_idx);
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_v_idx);
      __Pyx_INCREF(((PyObject *)__pyx_v_sort));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_sort));
      PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_7, ((PyObject *)__pyx_v_sort));
      __pyx_t_8 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2161
 *         elif idx.dtype == np.int64:
 *             return self._serialize_info2idx_int64(<info_t>max_info, idx, sort)
 *         elif idx.dtype == np.uint64:             # <<<<<<<<<<<<<<
 *             return self._serialize_info2idx_uint64(<info_t>max_info, idx, sort)
 *         else:
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2164
 *             return self._serialize_info2idx_uint64(<info_t>max_info, idx, sort)
 *         else:
 *             raise TypeError("idx.dtype = {} is not supported.".format(idx.dtype))             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_idx_dtype_is_not_supported, __pyx_n_s_format); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_idx, __pyx_n_s_dtype); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2164, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_2};
        __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2164, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_t_2};
        __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2164, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else
      #endif
      {
        __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2164, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8); __pyx_t_8 = NULL;
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_2);
        __pyx_t_2 = 0;
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2164, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 2164, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2131
 *         return cells, neighbors, idx_inf
 * 
 *     def serialize_info2idx(self, max_info, idx, pybool sort = False):             # <<<<<<<<<<<<<<
 *         r"""Serialize triangulation, only including some vertices and
 *         translating the indices.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.serialize_info2idx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2169
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def deserialize(self, np.ndarray[np.float64_t, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[np_info_t, ndim=2] cells,
 *                     np.ndarray[np_info_t, ndim=2] neighbors,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_45deserialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_44deserialize[] = "Deserialize triangulation. \n\n        Args: \n            pos (np.ndarray of float64): Coordinates of points. \n            cells (np.ndarray of info_t): (n,m) Indices for m vertices in each \n                of the n cells. A value of np.iinfo(np_info).max A value of \n                np.iinfo(np_info).max indicates the infinite vertex. \n            neighbors (np.ndarray of info_t): (n,l) Indices in `cells` of the m \n                neighbors to each of the n cells. \n            idx_inf (info_t): Index indicating a vertex is infinite. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_45deserialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deserialize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_cells,&__pyx_n_s_neighbors,&__pyx_n_s_idx_inf,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cells)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize", 1, 4, 4, 1); __PYX_ERR(0, 2169, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_neighbors)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize", 1, 4, 4, 2); __PYX_ERR(0, 2169, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx_inf)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize", 1, 4, 4, 3); __PYX_ERR(0, 2169, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "deserialize") < 0)) __PYX_ERR(0, 2169, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_cells = ((PyArrayObject *)values[1]);
    __pyx_v_neighbors = ((PyArrayObject *)values[2]);
    __pyx_v_idx_inf = __Pyx_PyInt_As_uint32_t(values[3]); if (unlikely((__pyx_v_idx_inf == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2172, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("deserialize", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2169, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.deserialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2169, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cells), __pyx_ptype_5numpy_ndarray, 1, "cells", 0))) __PYX_ERR(0, 2170, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighbors), __pyx_ptype_5numpy_ndarray, 1, "neighbors", 0))) __PYX_ERR(0, 2171, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_44deserialize(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_pos, __pyx_v_cells, __pyx_v_neighbors, __pyx_v_idx_inf);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_44deserialize(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_cells, PyArrayObject *__pyx_v_neighbors, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_n;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_m;
  int32_t __pyx_v_d;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  __Pyx_RefNannySetupContext("deserialize", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2169, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2169, __pyx_L1_error)
  }
  __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2169, __pyx_L1_error)
  }
  __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];

  /* "cgal4py/delaunay/delaunay3.pyx":2185
 * 
 *         """
 *         cdef info_t n = pos.shape[0]             # <<<<<<<<<<<<<<
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1
 */
  __pyx_v_n = (__pyx_v_pos->dimensions[0]);

  /* "cgal4py/delaunay/delaunay3.pyx":2186
 *         """
 *         cdef info_t n = pos.shape[0]
 *         cdef info_t m = cells.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):
 */
  __pyx_v_m = (__pyx_v_cells->dimensions[0]);

  /* "cgal4py/delaunay/delaunay3.pyx":2187
 *         cdef info_t n = pos.shape[0]
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1             # <<<<<<<<<<<<<<
 *         if (n == 0) or (m == 0):
 *             return
 */
  __pyx_v_d = ((__pyx_v_neighbors->dimensions[1]) - 1);

  /* "cgal4py/delaunay/delaunay3.pyx":2188
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):             # <<<<<<<<<<<<<<
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_2 = ((__pyx_v_n == 0) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_m == 0) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":2189
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):
 *             return             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2188
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):             # <<<<<<<<<<<<<<
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2190
 *         if (n == 0) or (m == 0):
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2191
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],             # <<<<<<<<<<<<<<
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n
 */
        __pyx_t_3 = 0;
        __pyx_t_4 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2192
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)             # <<<<<<<<<<<<<<
 *         self.n = n
 *         self.n_per_insert.append(n)
 */
        __pyx_t_5 = 0;
        __pyx_t_6 = 0;
        __pyx_t_7 = 0;
        __pyx_t_8 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2191
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],             # <<<<<<<<<<<<<<
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n
 */
        __pyx_v_self->T->deserialize_idxinfo<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pos.diminfo[0].strides, __pyx_t_4, __pyx_pybuffernd_pos.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_6, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_7, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_8, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_idx_inf);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2190
 *         if (n == 0) or (m == 0):
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L8;
        }
        __pyx_L8:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2193
 *             self.T.deserialize_idxinfo[info_t](n, m, d, &pos[0,0],
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n             # <<<<<<<<<<<<<<
 *         self.n_per_insert.append(n)
 * 
 */
  __pyx_v_self->n = __pyx_v_n;

  /* "cgal4py/delaunay/delaunay3.pyx":2194
 *                                                &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n
 *         self.n_per_insert.append(n)             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __pyx_t_9 = __Pyx_PyInt_From_uint32_t(__pyx_v_n); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_Append(__pyx_v_self->n_per_insert, __pyx_t_9); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2169
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def deserialize(self, np.ndarray[np.float64_t, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[np_info_t, ndim=2] cells,
 *                     np.ndarray[np_info_t, ndim=2] neighbors,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_9);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.deserialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2199
 *     @cython.wraparound(False)
 *     @_update_to_tess
 *     def deserialize_with_info(self, np.ndarray[np.float64_t, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                               np.ndarray[np_info_t, ndim=1] info,
 *                               np.ndarray[np_info_t, ndim=2] cells,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_47deserialize_with_info(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_46deserialize_with_info[] = "Deserialize triangulation. \n\n        Args: \n            pos (np.ndarray of float64): Coordinates of points. \n            info (np.ndarray of info_t): Info for points. \n            cells (np.ndarray of info_t): (n,m) Indices for m vertices in each \n                of the n cells. A value of np.iinfo(np_info).max A value of \n                np.iinfo(np_info).max indicates the infinite vertex. \n            neighbors (np.ndarray of info_t): (n,l) Indices in `cells` of the m \n                neighbors to each of the n cells. \n            idx_inf (info_t): Index indicating a vertex is infinite. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_47deserialize_with_info(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_info = 0;
  PyArrayObject *__pyx_v_cells = 0;
  PyArrayObject *__pyx_v_neighbors = 0;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deserialize_with_info (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_info,&__pyx_n_s_cells,&__pyx_n_s_neighbors,&__pyx_n_s_idx_inf,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_info)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize_with_info", 1, 5, 5, 1); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cells)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize_with_info", 1, 5, 5, 2); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_neighbors)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize_with_info", 1, 5, 5, 3); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idx_inf)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("deserialize_with_info", 1, 5, 5, 4); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "deserialize_with_info") < 0)) __PYX_ERR(0, 2199, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_info = ((PyArrayObject *)values[1]);
    __pyx_v_cells = ((PyArrayObject *)values[2]);
    __pyx_v_neighbors = ((PyArrayObject *)values[3]);
    __pyx_v_idx_inf = __Pyx_PyInt_As_uint32_t(values[4]); if (unlikely((__pyx_v_idx_inf == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2203, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("deserialize_with_info", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2199, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.deserialize_with_info", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2199, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_info), __pyx_ptype_5numpy_ndarray, 1, "info", 0))) __PYX_ERR(0, 2200, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cells), __pyx_ptype_5numpy_ndarray, 1, "cells", 0))) __PYX_ERR(0, 2201, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighbors), __pyx_ptype_5numpy_ndarray, 1, "neighbors", 0))) __PYX_ERR(0, 2202, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_46deserialize_with_info(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_pos, __pyx_v_info, __pyx_v_cells, __pyx_v_neighbors, __pyx_v_idx_inf);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_46deserialize_with_info(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_info, PyArrayObject *__pyx_v_cells, PyArrayObject *__pyx_v_neighbors, __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_idx_inf) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_n;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_m;
  int32_t __pyx_v_d;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cells;
  __Pyx_Buffer __pyx_pybuffer_cells;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_info;
  __Pyx_Buffer __pyx_pybuffer_info;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighbors;
  __Pyx_Buffer __pyx_pybuffer_neighbors;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("deserialize_with_info", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_info.pybuffer.buf = NULL;
  __pyx_pybuffer_info.refcount = 0;
  __pyx_pybuffernd_info.data = NULL;
  __pyx_pybuffernd_info.rcbuffer = &__pyx_pybuffer_info;
  __pyx_pybuffer_cells.pybuffer.buf = NULL;
  __pyx_pybuffer_cells.refcount = 0;
  __pyx_pybuffernd_cells.data = NULL;
  __pyx_pybuffernd_cells.rcbuffer = &__pyx_pybuffer_cells;
  __pyx_pybuffer_neighbors.pybuffer.buf = NULL;
  __pyx_pybuffer_neighbors.refcount = 0;
  __pyx_pybuffernd_neighbors.data = NULL;
  __pyx_pybuffernd_neighbors.rcbuffer = &__pyx_pybuffer_neighbors;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_info.rcbuffer->pybuffer, (PyObject*)__pyx_v_info, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_info.diminfo[0].strides = __pyx_pybuffernd_info.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_info.diminfo[0].shape = __pyx_pybuffernd_info.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cells.rcbuffer->pybuffer, (PyObject*)__pyx_v_cells, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_cells.diminfo[0].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cells.diminfo[0].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_cells.diminfo[1].strides = __pyx_pybuffernd_cells.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_cells.diminfo[1].shape = __pyx_pybuffernd_cells.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighbors, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_neighbors.diminfo[0].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighbors.diminfo[0].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_neighbors.diminfo[1].strides = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_neighbors.diminfo[1].shape = __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.shape[1];

  /* "cgal4py/delaunay/delaunay3.pyx":2217
 * 
 *         """
 *         cdef info_t n = pos.shape[0]             # <<<<<<<<<<<<<<
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1
 */
  __pyx_v_n = (__pyx_v_pos->dimensions[0]);

  /* "cgal4py/delaunay/delaunay3.pyx":2218
 *         """
 *         cdef info_t n = pos.shape[0]
 *         cdef info_t m = cells.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):
 */
  __pyx_v_m = (__pyx_v_cells->dimensions[0]);

  /* "cgal4py/delaunay/delaunay3.pyx":2219
 *         cdef info_t n = pos.shape[0]
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1             # <<<<<<<<<<<<<<
 *         if (n == 0) or (m == 0):
 *             return
 */
  __pyx_v_d = ((__pyx_v_neighbors->dimensions[1]) - 1);

  /* "cgal4py/delaunay/delaunay3.pyx":2220
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):             # <<<<<<<<<<<<<<
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_2 = ((__pyx_v_n == 0) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_m == 0) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":2221
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):
 *             return             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2220
 *         cdef info_t m = cells.shape[0]
 *         cdef int32_t d = neighbors.shape[1]-1
 *         if (n == 0) or (m == 0):             # <<<<<<<<<<<<<<
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2222
 *         if (n == 0) or (m == 0):
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2223
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],             # <<<<<<<<<<<<<<
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n
 */
        __pyx_t_3 = 0;
        __pyx_t_4 = 0;
        __pyx_t_5 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2224
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)             # <<<<<<<<<<<<<<
 *         self.n = n
 *         self.n_per_insert.append(n)
 */
        __pyx_t_6 = 0;
        __pyx_t_7 = 0;
        __pyx_t_8 = 0;
        __pyx_t_9 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2223
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],             # <<<<<<<<<<<<<<
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n
 */
        __pyx_v_self->T->deserialize<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>(__pyx_v_n, __pyx_v_m, __pyx_v_d, (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pos.diminfo[0].strides, __pyx_t_4, __pyx_pybuffernd_pos.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_info.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_info.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_cells.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_cells.diminfo[0].strides, __pyx_t_7, __pyx_pybuffernd_cells.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_neighbors.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_neighbors.diminfo[0].strides, __pyx_t_9, __pyx_pybuffernd_neighbors.diminfo[1].strides))), __pyx_v_idx_inf);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2222
 *         if (n == 0) or (m == 0):
 *             return
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L8;
        }
        __pyx_L8:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2225
 *             self.T.deserialize[info_t](n, m, d, &pos[0,0], &info[0],
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n             # <<<<<<<<<<<<<<
 *         self.n_per_insert.append(n)
 * 
 */
  __pyx_v_self->n = __pyx_v_n;

  /* "cgal4py/delaunay/delaunay3.pyx":2226
 *                                        &cells[0,0], &neighbors[0,0], idx_inf)
 *         self.n = n
 *         self.n_per_insert.append(n)             # <<<<<<<<<<<<<<
 * 
 *     def plot(self, *args, **kwargs):
 */
  __pyx_t_10 = __Pyx_PyInt_From_uint32_t(__pyx_v_n); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = __Pyx_PyObject_Append(__pyx_v_self->n_per_insert, __pyx_t_10); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 2226, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2199
 *     @cython.wraparound(False)
 *     @_update_to_tess
 *     def deserialize_with_info(self, np.ndarray[np.float64_t, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                               np.ndarray[np_info_t, ndim=1] info,
 *                               np.ndarray[np_info_t, ndim=2] cells,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_10);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_info.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.deserialize_with_info", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cells.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_info.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighbors.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2228
 *         self.n_per_insert.append(n)
 * 
 *     def plot(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         r"""Plot the triangulation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_49plot(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_48plot[] = "Plot the triangulation. \n\n        Args: \n            *args: All arguments are passed to :func:`plot.plot3D`.\n            **kwargs: All keyword arguments are passed to :func:`plot.plot3D`.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_49plot(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("plot (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "plot", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_48plot(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_48plot(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("plot", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2236
 * 
 *         """
 *         plot.plot3D(self, *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     @_dependent_property
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_plot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_plot3D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_v_args); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2228
 *         self.n_per_insert.append(n)
 * 
 *     def plot(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         r"""Plot the triangulation.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.plot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2239
 * 
 *     @_dependent_property
 *     def num_finite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite vertices in the triangulation."""
 *         return self.T.num_finite_verts()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_51num_finite_verts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_50num_finite_verts[] = "int: The number of finite vertices in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_51num_finite_verts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_finite_verts (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_50num_finite_verts(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_50num_finite_verts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_finite_verts", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2241
 *     def num_finite_verts(self):
 *         r"""int: The number of finite vertices in the triangulation."""
 *         return self.T.num_finite_verts()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_finite_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_finite_verts()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2239
 * 
 *     @_dependent_property
 *     def num_finite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite vertices in the triangulation."""
 *         return self.T.num_finite_verts()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_finite_verts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2243
 *         return self.T.num_finite_verts()
 *     @_dependent_property
 *     def num_finite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite edges in the triangulation."""
 *         return self.T.num_finite_edges()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_53num_finite_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_52num_finite_edges[] = "int: The number of finite edges in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_53num_finite_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_finite_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_52num_finite_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_52num_finite_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_finite_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2245
 *     def num_finite_edges(self):
 *         r"""int: The number of finite edges in the triangulation."""
 *         return self.T.num_finite_edges()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_finite_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_finite_edges()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2243
 *         return self.T.num_finite_verts()
 *     @_dependent_property
 *     def num_finite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite edges in the triangulation."""
 *         return self.T.num_finite_edges()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_finite_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2247
 *         return self.T.num_finite_edges()
 *     @_dependent_property
 *     def num_finite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite facets in the triangulation."""
 *         return self.T.num_finite_facets()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_55num_finite_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_54num_finite_facets[] = "int: The number of finite facets in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_55num_finite_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_finite_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_54num_finite_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_54num_finite_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_finite_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2249
 *     def num_finite_facets(self):
 *         r"""int: The number of finite facets in the triangulation."""
 *         return self.T.num_finite_facets()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_finite_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_finite_facets()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2247
 *         return self.T.num_finite_edges()
 *     @_dependent_property
 *     def num_finite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite facets in the triangulation."""
 *         return self.T.num_finite_facets()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_finite_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2251
 *         return self.T.num_finite_facets()
 *     @_dependent_property
 *     def num_finite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite cells in the triangulation."""
 *         return self.T.num_finite_cells()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_57num_finite_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_56num_finite_cells[] = "int: The number of finite cells in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_57num_finite_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_finite_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_56num_finite_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_56num_finite_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_finite_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2253
 *     def num_finite_cells(self):
 *         r"""int: The number of finite cells in the triangulation."""
 *         return self.T.num_finite_cells()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_infinite_verts(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_finite_cells()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2251
 *         return self.T.num_finite_facets()
 *     @_dependent_property
 *     def num_finite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite cells in the triangulation."""
 *         return self.T.num_finite_cells()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_finite_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2255
 *         return self.T.num_finite_cells()
 *     @_dependent_property
 *     def num_infinite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite vertices in the triangulation."""
 *         return self.T.num_infinite_verts()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_59num_infinite_verts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_58num_infinite_verts[] = "int: The number of infinite vertices in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_59num_infinite_verts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_infinite_verts (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_58num_infinite_verts(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_58num_infinite_verts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_infinite_verts", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2257
 *     def num_infinite_verts(self):
 *         r"""int: The number of infinite vertices in the triangulation."""
 *         return self.T.num_infinite_verts()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_infinite_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_infinite_verts()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2255
 *         return self.T.num_finite_cells()
 *     @_dependent_property
 *     def num_infinite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite vertices in the triangulation."""
 *         return self.T.num_infinite_verts()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_infinite_verts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2259
 *         return self.T.num_infinite_verts()
 *     @_dependent_property
 *     def num_infinite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite edges in the triangulation."""
 *         return self.T.num_infinite_edges()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_61num_infinite_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_60num_infinite_edges[] = "int: The number of infinite edges in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_61num_infinite_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_infinite_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_60num_infinite_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_60num_infinite_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_infinite_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2261
 *     def num_infinite_edges(self):
 *         r"""int: The number of infinite edges in the triangulation."""
 *         return self.T.num_infinite_edges()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_infinite_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_infinite_edges()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2259
 *         return self.T.num_infinite_verts()
 *     @_dependent_property
 *     def num_infinite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite edges in the triangulation."""
 *         return self.T.num_infinite_edges()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_infinite_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2263
 *         return self.T.num_infinite_edges()
 *     @_dependent_property
 *     def num_infinite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite facets in the triangulation."""
 *         return self.T.num_infinite_facets()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_63num_infinite_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_62num_infinite_facets[] = "int: The number of infinite facets in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_63num_infinite_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_infinite_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_62num_infinite_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_62num_infinite_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_infinite_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2265
 *     def num_infinite_facets(self):
 *         r"""int: The number of infinite facets in the triangulation."""
 *         return self.T.num_infinite_facets()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_infinite_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_infinite_facets()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2263
 *         return self.T.num_infinite_edges()
 *     @_dependent_property
 *     def num_infinite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite facets in the triangulation."""
 *         return self.T.num_infinite_facets()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_infinite_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2267
 *         return self.T.num_infinite_facets()
 *     @_dependent_property
 *     def num_infinite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite cells in the triangulation."""
 *         return self.T.num_infinite_cells()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_65num_infinite_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_64num_infinite_cells[] = "int: The number of infinite cells in the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_65num_infinite_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_infinite_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_64num_infinite_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_64num_infinite_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_infinite_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2269
 *     def num_infinite_cells(self):
 *         r"""int: The number of infinite cells in the triangulation."""
 *         return self.T.num_infinite_cells()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_verts(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_infinite_cells()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2267
 *         return self.T.num_infinite_facets()
 *     @_dependent_property
 *     def num_infinite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite cells in the triangulation."""
 *         return self.T.num_infinite_cells()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_infinite_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2271
 *         return self.T.num_infinite_cells()
 *     @_dependent_property
 *     def num_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of vertices (finite + infinite) in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_67num_verts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_66num_verts[] = "int: The total number of vertices (finite + infinite) in the \n        triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_67num_verts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_verts (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_66num_verts(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_66num_verts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_verts", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2274
 *         r"""int: The total number of vertices (finite + infinite) in the
 *         triangulation."""
 *         return self.T.num_verts()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_verts()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2271
 *         return self.T.num_infinite_cells()
 *     @_dependent_property
 *     def num_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of vertices (finite + infinite) in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_verts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2276
 *         return self.T.num_verts()
 *     @_dependent_property
 *     def num_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of edges (finite + infinite) in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_69num_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_68num_edges[] = "int: The total number of edges (finite + infinite) in the \n        triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_69num_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_68num_edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_68num_edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_edges", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2279
 *         r"""int: The total number of edges (finite + infinite) in the
 *         triangulation."""
 *         return self.T.num_edges()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_edges()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2276
 *         return self.T.num_verts()
 *     @_dependent_property
 *     def num_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of edges (finite + infinite) in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2281
 *         return self.T.num_edges()
 *     @_dependent_property
 *     def num_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of facets (finite + infinite) in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_71num_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_70num_facets[] = "int: The total number of facets (finite + infinite) in the \n        triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_71num_facets(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_facets (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_70num_facets(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_70num_facets(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_facets", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2284
 *         r"""int: The total number of facets (finite + infinite) in the
 *         triangulation."""
 *         return self.T.num_facets()             # <<<<<<<<<<<<<<
 *     @_dependent_property
 *     def num_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_facets()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2281
 *         return self.T.num_edges()
 *     @_dependent_property
 *     def num_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of facets (finite + infinite) in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_facets", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2286
 *         return self.T.num_facets()
 *     @_dependent_property
 *     def num_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of cells (finite + infinite) in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_73num_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_72num_cells[] = "int: The total number of cells (finite + infinite) in the \n        triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_73num_cells(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("num_cells (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_72num_cells(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_72num_cells(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_cells", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2289
 *         r"""int: The total number of cells (finite + infinite) in the
 *         triangulation."""
 *         return self.T.num_cells()             # <<<<<<<<<<<<<<
 * 
 *     @_dependent_property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->T->num_cells()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2286
 *         return self.T.num_facets()
 *     @_dependent_property
 *     def num_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of cells (finite + infinite) in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.num_cells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2292
 * 
 *     @_dependent_property
 *     def infinite_vertex(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex: The infinite vertex."""
 *         cdef Delaunay_with_info_3[info_t].Vertex x = self.T.infinite_vertex()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_75infinite_vertex(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_74infinite_vertex[] = "Delaunay3_vertex: The infinite vertex.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_75infinite_vertex(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("infinite_vertex (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_74infinite_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_74infinite_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_x;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("infinite_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2294
 *     def infinite_vertex(self):
 *         r"""Delaunay3_vertex: The infinite vertex."""
 *         cdef Delaunay_with_info_3[info_t].Vertex x = self.T.infinite_vertex()             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, x)
 */
  __pyx_v_x = __pyx_v_self->T->infinite_vertex();

  /* "cgal4py/delaunay/delaunay3.pyx":2295
 *         r"""Delaunay3_vertex: The infinite vertex."""
 *         cdef Delaunay_with_info_3[info_t].Vertex x = self.T.infinite_vertex()
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, x)
 *         return out
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2296
 *         cdef Delaunay_with_info_3[info_t].Vertex x = self.T.infinite_vertex()
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, x)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_x);

  /* "cgal4py/delaunay/delaunay3.pyx":2297
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, x)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2292
 * 
 *     @_dependent_property
 *     def infinite_vertex(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex: The infinite vertex."""
 *         cdef Delaunay_with_info_3[info_t].Vertex x = self.T.infinite_vertex()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.infinite_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2302
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def insert(self, np.ndarray[double, ndim=2, mode="c"] pts not None):             # <<<<<<<<<<<<<<
 *         r"""Insert points into the triangulation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_77insert(PyObject *__pyx_v_self, PyObject *__pyx_v_pts); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_76insert[] = "Insert points into the triangulation.\n\n        Args:\n            pts (:obj:`ndarray` of :obj:`float64`): Array of 3D cartesian \n                points to insert into the triangulation. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_77insert(PyObject *__pyx_v_self, PyObject *__pyx_v_pts) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("insert (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pts), __pyx_ptype_5numpy_ndarray, 0, "pts", 0))) __PYX_ERR(0, 2302, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_76insert(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyArrayObject *)__pyx_v_pts));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_76insert(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pts) {
  int __pyx_v_Nold;
  int __pyx_v_Nnew;
  int __pyx_v_m;
  PyArrayObject *__pyx_v_idx = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_idx;
  __Pyx_Buffer __pyx_pybuffer_idx;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pts;
  __Pyx_Buffer __pyx_pybuffer_pts;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  npy_intp __pyx_t_3;
  npy_intp __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  int __pyx_t_19;
  __Pyx_RefNannySetupContext("insert", 0);
  __pyx_pybuffer_idx.pybuffer.buf = NULL;
  __pyx_pybuffer_idx.refcount = 0;
  __pyx_pybuffernd_idx.data = NULL;
  __pyx_pybuffernd_idx.rcbuffer = &__pyx_pybuffer_idx;
  __pyx_pybuffer_pts.pybuffer.buf = NULL;
  __pyx_pybuffer_pts.refcount = 0;
  __pyx_pybuffernd_pts.data = NULL;
  __pyx_pybuffernd_pts.rcbuffer = &__pyx_pybuffer_pts;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pts.rcbuffer->pybuffer, (PyObject*)__pyx_v_pts, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2302, __pyx_L1_error)
  }
  __pyx_pybuffernd_pts.diminfo[0].strides = __pyx_pybuffernd_pts.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pts.diminfo[0].shape = __pyx_pybuffernd_pts.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pts.diminfo[1].strides = __pyx_pybuffernd_pts.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pts.diminfo[1].shape = __pyx_pybuffernd_pts.rcbuffer->pybuffer.shape[1];

  /* "cgal4py/delaunay/delaunay3.pyx":2311
 *         """
 *         global np_info, np_info_t
 *         if pts.shape[0] == 0:             # <<<<<<<<<<<<<<
 *             return
 *         cdef int Nold, Nnew, m
 */
  __pyx_t_1 = (((__pyx_v_pts->dimensions[0]) == 0) != 0);
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":2312
 *         global np_info, np_info_t
 *         if pts.shape[0] == 0:
 *             return             # <<<<<<<<<<<<<<
 *         cdef int Nold, Nnew, m
 *         Nold = self.n
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2311
 *         """
 *         global np_info, np_info_t
 *         if pts.shape[0] == 0:             # <<<<<<<<<<<<<<
 *             return
 *         cdef int Nold, Nnew, m
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2314
 *             return
 *         cdef int Nold, Nnew, m
 *         Nold = self.n             # <<<<<<<<<<<<<<
 *         Nnew, m = pts.shape[0], pts.shape[1]
 *         if Nnew == 0:
 */
  __pyx_t_2 = __pyx_v_self->n;
  __pyx_v_Nold = __pyx_t_2;

  /* "cgal4py/delaunay/delaunay3.pyx":2315
 *         cdef int Nold, Nnew, m
 *         Nold = self.n
 *         Nnew, m = pts.shape[0], pts.shape[1]             # <<<<<<<<<<<<<<
 *         if Nnew == 0:
 *             return
 */
  __pyx_t_3 = (__pyx_v_pts->dimensions[0]);
  __pyx_t_4 = (__pyx_v_pts->dimensions[1]);
  __pyx_v_Nnew = __pyx_t_3;
  __pyx_v_m = __pyx_t_4;

  /* "cgal4py/delaunay/delaunay3.pyx":2316
 *         Nold = self.n
 *         Nnew, m = pts.shape[0], pts.shape[1]
 *         if Nnew == 0:             # <<<<<<<<<<<<<<
 *             return
 *         assert(m == 3)
 */
  __pyx_t_1 = ((__pyx_v_Nnew == 0) != 0);
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":2317
 *         Nnew, m = pts.shape[0], pts.shape[1]
 *         if Nnew == 0:
 *             return             # <<<<<<<<<<<<<<
 *         assert(m == 3)
 *         cdef np.ndarray[np_info_t, ndim=1] idx
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2316
 *         Nold = self.n
 *         Nnew, m = pts.shape[0], pts.shape[1]
 *         if Nnew == 0:             # <<<<<<<<<<<<<<
 *             return
 *         assert(m == 3)
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2318
 *         if Nnew == 0:
 *             return
 *         assert(m == 3)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np_info_t, ndim=1] idx
 *         idx = np.arange(Nold, Nold+Nnew).astype(np_info)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_m == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2318, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2320
 *         assert(m == 3)
 *         cdef np.ndarray[np_info_t, ndim=1] idx
 *         idx = np.arange(Nold, Nold+Nnew).astype(np_info)             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.insert(&pts[0,0], &idx[0], <info_t>Nnew)
 */
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_arange); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_Nold); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_9 = __Pyx_PyInt_From_int((__pyx_v_Nold + __pyx_v_Nnew)); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = NULL;
  __pyx_t_2 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_2 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_10, __pyx_t_7, __pyx_t_9};
    __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_2, 2+__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2320, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_10, __pyx_t_7, __pyx_t_9};
    __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_2, 2+__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2320, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  } else
  #endif
  {
    __pyx_t_11 = PyTuple_New(2+__pyx_t_2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    if (__pyx_t_10) {
      __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10); __pyx_t_10 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_2, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_2, __pyx_t_9);
    __pyx_t_7 = 0;
    __pyx_t_9 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_astype); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2320, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2320, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    {
      __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2320, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2320, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2320, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
    __pyx_t_2 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_idx.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_2 < 0)) {
      PyErr_Fetch(&__pyx_t_13, &__pyx_t_14, &__pyx_t_15);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_idx.rcbuffer->pybuffer, (PyObject*)__pyx_v_idx, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_13); Py_XDECREF(__pyx_t_14); Py_XDECREF(__pyx_t_15);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_13, __pyx_t_14, __pyx_t_15);
      }
      __pyx_t_13 = __pyx_t_14 = __pyx_t_15 = 0;
    }
    __pyx_pybuffernd_idx.diminfo[0].strides = __pyx_pybuffernd_idx.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_idx.diminfo[0].shape = __pyx_pybuffernd_idx.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2320, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_idx = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2321
 *         cdef np.ndarray[np_info_t, ndim=1] idx
 *         idx = np.arange(Nold, Nold+Nnew).astype(np_info)
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.insert(&pts[0,0], &idx[0], <info_t>Nnew)
 *         self.n += Nnew
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2322
 *         idx = np.arange(Nold, Nold+Nnew).astype(np_info)
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.insert(&pts[0,0], &idx[0], <info_t>Nnew)             # <<<<<<<<<<<<<<
 *         self.n += Nnew
 *         self.n_per_insert.append(Nnew)
 */
        __pyx_t_16 = 0;
        __pyx_t_17 = 0;
        __pyx_t_18 = 0;
        try {
          __pyx_v_self->T->insert((&(*__Pyx_BufPtrCContig2d(double *, __pyx_pybuffernd_pts.rcbuffer->pybuffer.buf, __pyx_t_16, __pyx_pybuffernd_pts.diminfo[0].strides, __pyx_t_17, __pyx_pybuffernd_pts.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_idx.rcbuffer->pybuffer.buf, __pyx_t_18, __pyx_pybuffernd_idx.diminfo[0].strides))), ((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_v_Nnew));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 2322, __pyx_L6_error)
        }
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2321
 *         cdef np.ndarray[np_info_t, ndim=1] idx
 *         idx = np.arange(Nold, Nold+Nnew).astype(np_info)
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.insert(&pts[0,0], &idx[0], <info_t>Nnew)
 *         self.n += Nnew
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L7;
        }
        __pyx_L6_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L7:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2323
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.insert(&pts[0,0], &idx[0], <info_t>Nnew)
 *         self.n += Nnew             # <<<<<<<<<<<<<<
 *         self.n_per_insert.append(Nnew)
 *         # if self.n != <int64_t>self.T.num_finite_verts():
 */
  __pyx_v_self->n = (__pyx_v_self->n + __pyx_v_Nnew);

  /* "cgal4py/delaunay/delaunay3.pyx":2324
 *             self.T.insert(&pts[0,0], &idx[0], <info_t>Nnew)
 *         self.n += Nnew
 *         self.n_per_insert.append(Nnew)             # <<<<<<<<<<<<<<
 *         # if self.n != <int64_t>self.T.num_finite_verts():
 *         #     print "There were {} duplicates".format(self.n-self.T.num_finite_verts())
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_Nnew); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_19 = __Pyx_PyObject_Append(__pyx_v_self->n_per_insert, __pyx_t_5); if (unlikely(__pyx_t_19 == ((int)-1))) __PYX_ERR(0, 2324, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2302
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def insert(self, np.ndarray[double, ndim=2, mode="c"] pts not None):             # <<<<<<<<<<<<<<
 *         r"""Insert points into the triangulation.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pts.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.insert", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_idx.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pts.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_idx);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2330
 * 
 *     @_update_to_tess
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         r"""Removes all vertices and cells from the triangulation."""
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_79clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_78clear[] = "Removes all vertices and cells from the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_79clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_78clear(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_78clear(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2332
 *     def clear(self):
 *         r"""Removes all vertices and cells from the triangulation."""
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.clear()
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2333
 *         r"""Removes all vertices and cells from the triangulation."""
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.clear()             # <<<<<<<<<<<<<<
 * 
 *     @_dependent_property
 */
        try {
          __pyx_v_self->T->clear();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 2333, __pyx_L4_error)
        }
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2332
 *     def clear(self):
 *         r"""Removes all vertices and cells from the triangulation."""
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.clear()
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2330
 * 
 *     @_update_to_tess
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         r"""Removes all vertices and cells from the triangulation."""
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2338
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def vertices(self):             # <<<<<<<<<<<<<<
 *         r"""ndarray: The x,y,z coordinates of the vertices"""
 *         cdef np.ndarray[np.float64_t, ndim=2] out
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_81vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_80vertices[] = "ndarray: The x,y,z coordinates of the vertices";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_81vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_80vertices(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_80vertices(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyArrayObject *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_out;
  __Pyx_Buffer __pyx_pybuffer_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  __Pyx_RefNannySetupContext("vertices", 0);
  __pyx_pybuffer_out.pybuffer.buf = NULL;
  __pyx_pybuffer_out.refcount = 0;
  __pyx_pybuffernd_out.data = NULL;
  __pyx_pybuffernd_out.rcbuffer = &__pyx_pybuffer_out;

  /* "cgal4py/delaunay/delaunay3.pyx":2341
 *         r"""ndarray: The x,y,z coordinates of the vertices"""
 *         cdef np.ndarray[np.float64_t, ndim=2] out
 *         out = np.zeros([self.n, 3], 'float64')             # <<<<<<<<<<<<<<
 *         if self.n == 0:
 *             return out
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_3);
  __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_4, __pyx_n_s_float64};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_4, __pyx_n_s_float64};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_2) {
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_n_s_float64);
    __Pyx_GIVEREF(__pyx_n_s_float64);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_n_s_float64);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2341, __pyx_L1_error)
  __pyx_t_7 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
    __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_5 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_out, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
      __pyx_t_8 = __pyx_t_9 = __pyx_t_10 = 0;
    }
    __pyx_pybuffernd_out.diminfo[0].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_out.diminfo[0].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_out.diminfo[1].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_out.diminfo[1].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2341, __pyx_L1_error)
  }
  __pyx_t_7 = 0;
  __pyx_v_out = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2342
 *         cdef np.ndarray[np.float64_t, ndim=2] out
 *         out = np.zeros([self.n, 3], 'float64')
 *         if self.n == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_11 = ((__pyx_v_self->n == 0) != 0);
  if (__pyx_t_11) {

    /* "cgal4py/delaunay/delaunay3.pyx":2343
 *         out = np.zeros([self.n, 3], 'float64')
 *         if self.n == 0:
 *             return out             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.info_ordered_vertices(&out[0,0])
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2342
 *         cdef np.ndarray[np.float64_t, ndim=2] out
 *         out = np.zeros([self.n, 3], 'float64')
 *         if self.n == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2344
 *         if self.n == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.info_ordered_vertices(&out[0,0])
 *         return out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2345
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.info_ordered_vertices(&out[0,0])             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
        __pyx_t_12 = 0;
        __pyx_t_13 = 0;
        __pyx_v_self->T->info_ordered_vertices((&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_out.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_out.diminfo[0].strides, __pyx_t_13, __pyx_pybuffernd_out.diminfo[1].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2344
 *         if self.n == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.info_ordered_vertices(&out[0,0])
 *         return out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L6:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2346
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.info_ordered_vertices(&out[0,0])
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @_dependent_property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2338
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def vertices(self):             # <<<<<<<<<<<<<<
 *         r"""ndarray: The x,y,z coordinates of the vertices"""
 *         cdef np.ndarray[np.float64_t, ndim=2] out
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2351
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def edges(self):             # <<<<<<<<<<<<<<
 *         r""":obj:`ndarray` of info_t: Vertex index pairs for edges."""
 *         cdef np.ndarray[np_info_t, ndim=2] out
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_83edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_82edges[] = ":obj:`ndarray` of info_t: Vertex index pairs for edges.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_83edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_82edges(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_82edges(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyArrayObject *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_out;
  __Pyx_Buffer __pyx_pybuffer_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  __Pyx_RefNannySetupContext("edges", 0);
  __pyx_pybuffer_out.pybuffer.buf = NULL;
  __pyx_pybuffer_out.refcount = 0;
  __pyx_pybuffernd_out.data = NULL;
  __pyx_pybuffernd_out.rcbuffer = &__pyx_pybuffer_out;

  /* "cgal4py/delaunay/delaunay3.pyx":2354
 *         r""":obj:`ndarray` of info_t: Vertex index pairs for edges."""
 *         cdef np.ndarray[np_info_t, ndim=2] out
 *         out = np.zeros([self.num_finite_edges, 2], np_info)             # <<<<<<<<<<<<<<
 *         if out.shape[0] == 0:
 *             return out
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_num_finite_edges); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_4, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_4, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_2) {
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2354, __pyx_L1_error)
  __pyx_t_7 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
    __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_5 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_out, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
      __pyx_t_8 = __pyx_t_9 = __pyx_t_10 = 0;
    }
    __pyx_pybuffernd_out.diminfo[0].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_out.diminfo[0].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_out.diminfo[1].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_out.diminfo[1].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2354, __pyx_L1_error)
  }
  __pyx_t_7 = 0;
  __pyx_v_out = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2355
 *         cdef np.ndarray[np_info_t, ndim=2] out
 *         out = np.zeros([self.num_finite_edges, 2], np_info)
 *         if out.shape[0] == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_11 = (((__pyx_v_out->dimensions[0]) == 0) != 0);
  if (__pyx_t_11) {

    /* "cgal4py/delaunay/delaunay3.pyx":2356
 *         out = np.zeros([self.num_finite_edges, 2], np_info)
 *         if out.shape[0] == 0:
 *             return out             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.edge_info(&out[0,0])
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2355
 *         cdef np.ndarray[np_info_t, ndim=2] out
 *         out = np.zeros([self.num_finite_edges, 2], np_info)
 *         if out.shape[0] == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2357
 *         if out.shape[0] == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.edge_info(&out[0,0])
 *         return out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2358
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.edge_info(&out[0,0])             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
        __pyx_t_12 = 0;
        __pyx_t_13 = 0;
        __pyx_v_self->T->edge_info((&(*__Pyx_BufPtrStrided2d(__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t *, __pyx_pybuffernd_out.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_out.diminfo[0].strides, __pyx_t_13, __pyx_pybuffernd_out.diminfo[1].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2357
 *         if out.shape[0] == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.edge_info(&out[0,0])
 *         return out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L6:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2359
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.edge_info(&out[0,0])
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2351
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def edges(self):             # <<<<<<<<<<<<<<
 *         r""":obj:`ndarray` of info_t: Vertex index pairs for edges."""
 *         cdef np.ndarray[np_info_t, ndim=2] out
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2363
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def voronoi_volumes(self):             # <<<<<<<<<<<<<<
 *         r"""np.ndarray of float64: Array of voronoi cell volumes for vertices in
 *         the triangulation. The volumes are in the order in which the vertices
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_85voronoi_volumes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_84voronoi_volumes[] = "np.ndarray of float64: Array of voronoi cell volumes for vertices in \n        the triangulation. The volumes are in the order in which the vertices \n        were added to the triangulation.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_85voronoi_volumes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("voronoi_volumes (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_84voronoi_volumes(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_84voronoi_volumes(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyArrayObject *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_out;
  __Pyx_Buffer __pyx_pybuffer_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  __Pyx_RefNannySetupContext("voronoi_volumes", 0);
  __pyx_pybuffer_out.pybuffer.buf = NULL;
  __pyx_pybuffer_out.refcount = 0;
  __pyx_pybuffernd_out.data = NULL;
  __pyx_pybuffernd_out.rcbuffer = &__pyx_pybuffer_out;

  /* "cgal4py/delaunay/delaunay3.pyx":2368
 *         were added to the triangulation."""
 *         cdef np.ndarray[np.float64_t, ndim=1] out
 *         out = np.empty(self.num_finite_verts, 'float64')             # <<<<<<<<<<<<<<
 *         if self.n == 0:
 *             return out
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_num_finite_verts); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_2, __pyx_n_s_float64};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2368, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_2, __pyx_n_s_float64};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2368, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_float64);
    __Pyx_GIVEREF(__pyx_n_s_float64);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_n_s_float64);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2368, __pyx_L1_error)
  __pyx_t_7 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
    __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_5 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_out, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
      __pyx_t_8 = __pyx_t_9 = __pyx_t_10 = 0;
    }
    __pyx_pybuffernd_out.diminfo[0].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_out.diminfo[0].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2368, __pyx_L1_error)
  }
  __pyx_t_7 = 0;
  __pyx_v_out = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2369
 *         cdef np.ndarray[np.float64_t, ndim=1] out
 *         out = np.empty(self.num_finite_verts, 'float64')
 *         if self.n == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_11 = ((__pyx_v_self->n == 0) != 0);
  if (__pyx_t_11) {

    /* "cgal4py/delaunay/delaunay3.pyx":2370
 *         out = np.empty(self.num_finite_verts, 'float64')
 *         if self.n == 0:
 *             return out             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.dual_volumes(&out[0])
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2369
 *         cdef np.ndarray[np.float64_t, ndim=1] out
 *         out = np.empty(self.num_finite_verts, 'float64')
 *         if self.n == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2371
 *         if self.n == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.dual_volumes(&out[0])
 *         return out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2372
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.dual_volumes(&out[0])             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
        __pyx_t_12 = 0;
        __pyx_v_self->T->dual_volumes((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_out.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_out.diminfo[0].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2371
 *         if self.n == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.dual_volumes(&out[0])
 *         return out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L6:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2373
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.dual_volumes(&out[0])
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2363
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def voronoi_volumes(self):             # <<<<<<<<<<<<<<
 *         r"""np.ndarray of float64: Array of voronoi cell volumes for vertices in
 *         the triangulation. The volumes are in the order in which the vertices
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.voronoi_volumes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2377
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def minimum_angles(self):             # <<<<<<<<<<<<<<
 *         r"""np.ndarray of float64: Array of minimum angles for finite cells in
 *         the triangulation. The angles are in the order of the cell traversal."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_87minimum_angles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_86minimum_angles[] = "np.ndarray of float64: Array of minimum angles for finite cells in\n        the triangulation. The angles are in the order of the cell traversal.";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_87minimum_angles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("minimum_angles (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_86minimum_angles(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_86minimum_angles(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyArrayObject *__pyx_v_out = 0;
  int __pyx_v_nout;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_out;
  __Pyx_Buffer __pyx_pybuffer_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  __Pyx_RefNannySetupContext("minimum_angles", 0);
  __pyx_pybuffer_out.pybuffer.buf = NULL;
  __pyx_pybuffer_out.refcount = 0;
  __pyx_pybuffernd_out.data = NULL;
  __pyx_pybuffernd_out.rcbuffer = &__pyx_pybuffer_out;

  /* "cgal4py/delaunay/delaunay3.pyx":2381
 *         the triangulation. The angles are in the order of the cell traversal."""
 *         cdef np.ndarray[np.float64_t, ndim=1] out
 *         out = np.empty(self.num_finite_cells, 'float64')             # <<<<<<<<<<<<<<
 *         cdef int nout
 *         if self.n == 0:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_num_finite_cells); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_2, __pyx_n_s_float64};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_2, __pyx_n_s_float64};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_float64);
    __Pyx_GIVEREF(__pyx_n_s_float64);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_n_s_float64);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2381, __pyx_L1_error)
  __pyx_t_7 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
    __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_5 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_out, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
      __pyx_t_8 = __pyx_t_9 = __pyx_t_10 = 0;
    }
    __pyx_pybuffernd_out.diminfo[0].strides = __pyx_pybuffernd_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_out.diminfo[0].shape = __pyx_pybuffernd_out.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2381, __pyx_L1_error)
  }
  __pyx_t_7 = 0;
  __pyx_v_out = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2383
 *         out = np.empty(self.num_finite_cells, 'float64')
 *         cdef int nout
 *         if self.n == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_11 = ((__pyx_v_self->n == 0) != 0);
  if (__pyx_t_11) {

    /* "cgal4py/delaunay/delaunay3.pyx":2384
 *         cdef int nout
 *         if self.n == 0:
 *             return out             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             nout = self.T.minimum_angles(&out[0])
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_out));
    __pyx_r = ((PyObject *)__pyx_v_out);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2383
 *         out = np.empty(self.num_finite_cells, 'float64')
 *         cdef int nout
 *         if self.n == 0:             # <<<<<<<<<<<<<<
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2385
 *         if self.n == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             nout = self.T.minimum_angles(&out[0])
 *         return out[:nout]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2386
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             nout = self.T.minimum_angles(&out[0])             # <<<<<<<<<<<<<<
 *         return out[:nout]
 * 
 */
        __pyx_t_12 = 0;
        __pyx_v_nout = __pyx_v_self->T->minimum_angles((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_out.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_out.diminfo[0].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2385
 *         if self.n == 0:
 *             return out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             nout = self.T.minimum_angles(&out[0])
 *         return out[:nout]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L6:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2387
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             nout = self.T.minimum_angles(&out[0])
 *         return out[:nout]             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nout); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PySlice_New(Py_None, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_out), __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2377
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def minimum_angles(self):             # <<<<<<<<<<<<<<
 *         r"""np.ndarray of float64: Array of minimum angles for finite cells in
 *         the triangulation. The angles are in the order of the cell traversal."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.minimum_angles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2390
 * 
 *     @_update_to_tess
 *     def remove(self, Delaunay3_vertex x):             # <<<<<<<<<<<<<<
 *         r"""Remove a vertex from the triangulation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_89remove(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_88remove[] = "Remove a vertex from the triangulation. \n\n        Args: \n            x (Delaunay3_vertex): Vertex that should be removed. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_89remove(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "x", 0))) __PYX_ERR(0, 2390, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_88remove(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_88remove(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2397
 * 
 *         """
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.remove(x.x)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2398
 *         """
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.remove(x.x)             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
        try {
          __pyx_v_self->T->remove(__pyx_v_x->x);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 2398, __pyx_L4_error)
        }
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2397
 * 
 *         """
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.remove(x.x)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2390
 * 
 *     @_update_to_tess
 *     def remove(self, Delaunay3_vertex x):             # <<<<<<<<<<<<<<
 *         r"""Remove a vertex from the triangulation.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.remove", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2403
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def move(self, Delaunay3_vertex x, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Move a vertex to a new location. If there is a vertex at the given
 *         given coordinates, return that vertex and remove the one that was being
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_91move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_90move[] = "Move a vertex to a new location. If there is a vertex at the given \n        given coordinates, return that vertex and remove the one that was being \n        moved. \n\n        Args: \n            x (Delaunay3_vertex): Vertex that should be moved. \n            pos (:obj:`ndarray` of float64): x,y,z coordinates that the vertex \n                be moved to. \n\n        Returns: \n            Delaunay3_vertex: Vertex at the new position. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_91move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x = 0;
  PyArrayObject *__pyx_v_pos = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_pos,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, 1); __PYX_ERR(0, 2403, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move") < 0)) __PYX_ERR(0, 2403, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_pos = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2403, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "x", 0))) __PYX_ERR(0, 2403, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2403, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_90move(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_x, __pyx_v_pos);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_90move(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x, PyArrayObject *__pyx_v_pos) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_v;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("move", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2403, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2417
 * 
 *         """
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2417, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2417, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2419
 *         assert(len(pos) == 3)
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             v = self.T.move(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2420
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             v = self.T.move(x.x, &pos[0])             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 */
        __pyx_t_2 = 0;
        try {
          __pyx_t_3 = __pyx_v_self->T->move(__pyx_v_x->x, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_pos.diminfo[0].strides))));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 2420, __pyx_L4_error)
        }
        __pyx_v_v = __pyx_t_3;
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2419
 *         assert(len(pos) == 3)
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             v = self.T.move(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2421
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             v = self.T.move(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, v)
 *         return out
 */
  __pyx_t_4 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2421, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2422
 *             v = self.T.move(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_v);

  /* "cgal4py/delaunay/delaunay3.pyx":2423
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2403
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def move(self, Delaunay3_vertex x, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Move a vertex to a new location. If there is a vertex at the given
 *         given coordinates, return that vertex and remove the one that was being
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2428
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def move_if_no_collision(self, Delaunay3_vertex x,             # <<<<<<<<<<<<<<
 *                              np.ndarray[np.float64_t, ndim=1] pos):
 *         r"""Move a vertex to a new location only if there is not already a
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_93move_if_no_collision(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_92move_if_no_collision[] = "Move a vertex to a new location only if there is not already a \n        vertex at the given coordinates. If there is a vertex there, it is \n        returned and the vertex being moved remains at its original location. \n\n        Args: \n            x (Delaunay3_vertex): Vertex that should be moved. \n            pos (:obj:`ndarray` of float64): x,y,z coordinates that the vertex \n                be moved to. \n\n        Returns: \n            Delaunay2_vertex: Vertex at the new position. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_93move_if_no_collision(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x = 0;
  PyArrayObject *__pyx_v_pos = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_if_no_collision (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_pos,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("move_if_no_collision", 1, 2, 2, 1); __PYX_ERR(0, 2428, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move_if_no_collision") < 0)) __PYX_ERR(0, 2428, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_pos = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_if_no_collision", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2428, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.move_if_no_collision", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "x", 0))) __PYX_ERR(0, 2428, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2429, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_92move_if_no_collision(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_x, __pyx_v_pos);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_92move_if_no_collision(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_x, PyArrayObject *__pyx_v_pos) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_v;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("move_if_no_collision", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2428, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2443
 * 
 *         """
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2443, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2443, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2445
 *         assert(len(pos) == 3)
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             v = self.T.move_if_no_collision(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2446
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             v = self.T.move_if_no_collision(x.x, &pos[0])             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 */
        __pyx_t_2 = 0;
        try {
          __pyx_t_3 = __pyx_v_self->T->move_if_no_collision(__pyx_v_x->x, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_pos.diminfo[0].strides))));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 2446, __pyx_L4_error)
        }
        __pyx_v_v = __pyx_t_3;
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2445
 *         assert(len(pos) == 3)
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             v = self.T.move_if_no_collision(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2447
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             v = self.T.move_if_no_collision(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, v)
 *         return out
 */
  __pyx_t_4 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2448
 *             v = self.T.move_if_no_collision(x.x, &pos[0])
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_v);

  /* "cgal4py/delaunay/delaunay3.pyx":2449
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2428
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def move_if_no_collision(self, Delaunay3_vertex x,             # <<<<<<<<<<<<<<
 *                              np.ndarray[np.float64_t, ndim=1] pos):
 *         r"""Move a vertex to a new location only if there is not already a
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.move_if_no_collision", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2452
 * 
 *     @_update_to_tess
 *     def flip(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Flip the facet incident to cell x and neighbor i of cell x. This
 *         method first checks if the facet can be flipped.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_95flip(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_94flip[] = "Flip the facet incident to cell x and neighbor i of cell x. This \n        method first checks if the facet can be flipped.\n\n        Args:\n            x (Delaunay3_cell): Cell with facet that should be flipped.\n            i (int): Integer specifying neighbor that is also incident to the \n                cell that should be flipped.\n\n        Returns:\n            bool: True if facet was flipped, False otherwise.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_95flip(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x = 0;
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_i,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("flip", 1, 2, 2, 1); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "flip") < 0)) __PYX_ERR(0, 2452, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_i = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2452, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("flip", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2452, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.flip", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "x", 0))) __PYX_ERR(0, 2452, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_94flip(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_x, __pyx_v_i);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_94flip(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i) {
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("flip", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2466
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.flip(x.x, i)
 *         return <pybool>out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2467
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.flip(x.x, i)             # <<<<<<<<<<<<<<
 *         return <pybool>out
 * 
 */
        __pyx_v_out = __pyx_v_self->T->flip(__pyx_v_x->x, __pyx_v_i);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2466
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.flip(x.x, i)
 *         return <pybool>out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2468
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.flip(x.x, i)
 *         return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     @_update_to_tess
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 2468, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2452
 * 
 *     @_update_to_tess
 *     def flip(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Flip the facet incident to cell x and neighbor i of cell x. This
 *         method first checks if the facet can be flipped.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.flip", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2471
 * 
 *     @_update_to_tess
 *     def flip_flippable(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Same as :meth:`Delaunay3.flip`, but assumes that facet is flippable
 *         and does not check.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_97flip_flippable(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_96flip_flippable[] = "Same as :meth:`Delaunay3.flip`, but assumes that facet is flippable \n        and does not check.\n\n        Args:\n            x (Delaunay3_cell): Cell with facet that should be flipped.\n            i (int): Integer specifying neighbor that is also incident to the \n                cell that should be flipped.\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_97flip_flippable(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x = 0;
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip_flippable (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_i,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("flip_flippable", 1, 2, 2, 1); __PYX_ERR(0, 2471, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "flip_flippable") < 0)) __PYX_ERR(0, 2471, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_i = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2471, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("flip_flippable", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2471, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.flip_flippable", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "x", 0))) __PYX_ERR(0, 2471, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_96flip_flippable(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_x, __pyx_v_i);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_96flip_flippable(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip_flippable", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2480
 *                 cell that should be flipped.
 *         """
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.flip_flippable(x.x, i)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2481
 *         """
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.flip_flippable(x.x, i)             # <<<<<<<<<<<<<<
 * 
 *     def get_vertex(self, np_info_t index):
 */
        __pyx_v_self->T->flip_flippable(__pyx_v_x->x, __pyx_v_i);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2480
 *                 cell that should be flipped.
 *         """
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.flip_flippable(x.x, i)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2471
 * 
 *     @_update_to_tess
 *     def flip_flippable(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Same as :meth:`Delaunay3.flip`, but assumes that facet is flippable
 *         and does not check.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2483
 *             self.T.flip_flippable(x.x, i)
 * 
 *     def get_vertex(self, np_info_t index):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex object corresponding to the given index.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_99get_vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_index); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_98get_vertex[] = "Get the vertex object corresponding to the given index. \n\n        Args: \n            index (np_info_t): Index of vertex that should be found. \n\n        Returns: \n            Delaunay3_vertex: Vertex corresponding to the given index. If the \n                index is not found, the infinite vertex is returned. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_99get_vertex(PyObject *__pyx_v_self, PyObject *__pyx_arg_index) {
  __pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t __pyx_v_index;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_vertex (wrapper)", 0);
  assert(__pyx_arg_index); {
    __pyx_v_index = __Pyx_PyInt_As_npy_uint32(__pyx_arg_index); if (unlikely((__pyx_v_index == ((npy_uint32)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2483, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_98get_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((__pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_98get_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, __pyx_t_7cgal4py_8delaunay_9delaunay3_np_info_t __pyx_v_index) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_v;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_out = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2495
 *         """
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             v = self.T.get_vertex(index)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2496
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             v = self.T.get_vertex(index)             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 */
        try {
          __pyx_t_1 = __pyx_v_self->T->get_vertex(__pyx_v_index);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          __Pyx_PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 2496, __pyx_L4_error)
        }
        __pyx_v_v = __pyx_t_1;
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2495
 *         """
 *         cdef Delaunay_with_info_3[info_t].Vertex v
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             v = self.T.get_vertex(index)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2497
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             v = self.T.get_vertex(index)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         out.assign(self.T, v)
 *         return out
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_out = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2498
 *             v = self.T.get_vertex(index)
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_out->__pyx_vtab)->assign(__pyx_v_out, __pyx_v_self->T, __pyx_v_v);

  /* "cgal4py/delaunay/delaunay3.pyx":2499
 *         cdef Delaunay3_vertex out = Delaunay3_vertex()
 *         out.assign(self.T, v)
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     def locate(self, np.ndarray[np.float64_t, ndim=1] pos,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __pyx_r = ((PyObject *)__pyx_v_out);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2483
 *             self.T.flip_flippable(x.x, i)
 * 
 *     def get_vertex(self, np_info_t index):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex object corresponding to the given index.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2501
 *         return out
 * 
 *     def locate(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                Delaunay3_cell start = None):
 *         r"""Get the vertex/cell/facet/edge that a given point is a part of.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_101locate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_100locate[] = "Get the vertex/cell/facet/edge that a given point is a part of.\n\n        Args:\n            pos (:obj:`ndarray` of float64): x,y coordinates.   \n            start (Delaunay3_cell, optional): Cell to start the search at. \n\n        Returns:\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_101locate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("locate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_start,0};
    PyObject* values[2] = {0,0};

    /* "cgal4py/delaunay/delaunay3.pyx":2502
 * 
 *     def locate(self, np.ndarray[np.float64_t, ndim=1] pos,
 *                Delaunay3_cell start = None):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex/cell/facet/edge that a given point is a part of.
 * 
 */
    values[1] = (PyObject *)((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_start);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "locate") < 0)) __PYX_ERR(0, 2501, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_start = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("locate", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2501, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.locate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2501, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_start), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "start", 0))) __PYX_ERR(0, 2502, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_100locate(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_pos, __pyx_v_start);

  /* "cgal4py/delaunay/delaunay3.pyx":2501
 *         return out
 * 
 *     def locate(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                Delaunay3_cell start = None):
 *         r"""Get the vertex/cell/facet/edge that a given point is a part of.
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_100locate(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start) {
  int __pyx_v_lt;
  int __pyx_v_li;
  int __pyx_v_lj;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("locate", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2501, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2512
 * 
 *         """
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         cdef int lt, li, lj
 *         lt = li = lj = 999
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2512, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2512, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2514
 *         assert(len(pos) == 3)
 *         cdef int lt, li, lj
 *         lt = li = lj = 999             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_cell c = Delaunay3_cell()
 *         if start is not None:
 */
  __pyx_v_lt = 0x3E7;
  __pyx_v_li = 0x3E7;
  __pyx_v_lj = 0x3E7;

  /* "cgal4py/delaunay/delaunay3.pyx":2515
 *         cdef int lt, li, lj
 *         lt = li = lj = 999
 *         cdef Delaunay3_cell c = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *         if start is not None:
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj, start.x))
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2515, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_c = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2516
 *         lt = li = lj = 999
 *         cdef Delaunay3_cell c = Delaunay3_cell()
 *         if start is not None:             # <<<<<<<<<<<<<<
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj, start.x))
 *         else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_start) != Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2517
 *         cdef Delaunay3_cell c = Delaunay3_cell()
 *         if start is not None:
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj, start.x))             # <<<<<<<<<<<<<<
 *         else:
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj))
 */
    __pyx_t_5 = 0;
    __pyx_t_6 = -1;
    if (__pyx_t_5 < 0) {
      __pyx_t_5 += __pyx_pybuffernd_pos.diminfo[0].shape;
      if (unlikely(__pyx_t_5 < 0)) __pyx_t_6 = 0;
    } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_pos.diminfo[0].shape)) __pyx_t_6 = 0;
    if (unlikely(__pyx_t_6 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_6);
      __PYX_ERR(0, 2517, __pyx_L1_error)
    }
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_c->__pyx_vtab)->assign(__pyx_v_c, __pyx_v_self->T, __pyx_v_self->T->locate((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_pos.diminfo[0].strides))), __pyx_v_lt, __pyx_v_li, __pyx_v_lj, __pyx_v_start->x));

    /* "cgal4py/delaunay/delaunay3.pyx":2516
 *         lt = li = lj = 999
 *         cdef Delaunay3_cell c = Delaunay3_cell()
 *         if start is not None:             # <<<<<<<<<<<<<<
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj, start.x))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2519
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj, start.x))
 *         else:
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj))             # <<<<<<<<<<<<<<
 *         print(lt)
 *         assert(lt != 999)
 */
  /*else*/ {
    __pyx_t_7 = 0;
    __pyx_t_6 = -1;
    if (__pyx_t_7 < 0) {
      __pyx_t_7 += __pyx_pybuffernd_pos.diminfo[0].shape;
      if (unlikely(__pyx_t_7 < 0)) __pyx_t_6 = 0;
    } else if (unlikely(__pyx_t_7 >= __pyx_pybuffernd_pos.diminfo[0].shape)) __pyx_t_6 = 0;
    if (unlikely(__pyx_t_6 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_6);
      __PYX_ERR(0, 2519, __pyx_L1_error)
    }
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_c->__pyx_vtab)->assign(__pyx_v_c, __pyx_v_self->T, __pyx_v_self->T->locate((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_7, __pyx_pybuffernd_pos.diminfo[0].strides))), __pyx_v_lt, __pyx_v_li, __pyx_v_lj));
  }
  __pyx_L3:;

  /* "cgal4py/delaunay/delaunay3.pyx":2520
 *         else:
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj))
 *         print(lt)             # <<<<<<<<<<<<<<
 *         assert(lt != 999)
 *         if lt < 2:
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_lt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2521
 *             c.assign(self.T, self.T.locate(&pos[0], lt, li, lj))
 *         print(lt)
 *         assert(lt != 999)             # <<<<<<<<<<<<<<
 *         if lt < 2:
 *             assert(li != 999)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_lt != 0x3E7) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2521, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2522
 *         print(lt)
 *         assert(lt != 999)
 *         if lt < 2:             # <<<<<<<<<<<<<<
 *             assert(li != 999)
 *         if lt == 0: # vertex
 */
  __pyx_t_4 = ((__pyx_v_lt < 2) != 0);
  if (__pyx_t_4) {

    /* "cgal4py/delaunay/delaunay3.pyx":2523
 *         assert(lt != 999)
 *         if lt < 2:
 *             assert(li != 999)             # <<<<<<<<<<<<<<
 *         if lt == 0: # vertex
 *             return c.vertex(li)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!((__pyx_v_li != 0x3E7) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        __PYX_ERR(0, 2523, __pyx_L1_error)
      }
    }
    #endif

    /* "cgal4py/delaunay/delaunay3.pyx":2522
 *         print(lt)
 *         assert(lt != 999)
 *         if lt < 2:             # <<<<<<<<<<<<<<
 *             assert(li != 999)
 *         if lt == 0: # vertex
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2524
 *         if lt < 2:
 *             assert(li != 999)
 *         if lt == 0: # vertex             # <<<<<<<<<<<<<<
 *             return c.vertex(li)
 *         elif lt == 1: # edge
 */
  switch (__pyx_v_lt) {
    case 0:

    /* "cgal4py/delaunay/delaunay3.pyx":2525
 *             assert(li != 999)
 *         if lt == 0: # vertex
 *             return c.vertex(li)             # <<<<<<<<<<<<<<
 *         elif lt == 1: # edge
 *             return Delaunay3_edge.from_cell(c, li, lj)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c), __pyx_n_s_vertex); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2525, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_li); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2525, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_10) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2525, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_10, __pyx_t_9};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2525, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_10, __pyx_t_9};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2525, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else
      #endif
      {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2525, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10); __pyx_t_10 = NULL;
        __Pyx_GIVEREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_t_9);
        __pyx_t_9 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2525, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2524
 *         if lt < 2:
 *             assert(li != 999)
 *         if lt == 0: # vertex             # <<<<<<<<<<<<<<
 *             return c.vertex(li)
 *         elif lt == 1: # edge
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":2526
 *         if lt == 0: # vertex
 *             return c.vertex(li)
 *         elif lt == 1: # edge             # <<<<<<<<<<<<<<
 *             return Delaunay3_edge.from_cell(c, li, lj)
 *         elif lt == 2: # facet
 */
    case 1:

    /* "cgal4py/delaunay/delaunay3.pyx":2527
 *             return c.vertex(li)
 *         elif lt == 1: # edge
 *             return Delaunay3_edge.from_cell(c, li, lj)             # <<<<<<<<<<<<<<
 *         elif lt == 2: # facet
 *             return Delaunay3_facet.from_cell(c, li)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge), __pyx_n_s_from_cell); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2527, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_li); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2527, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_lj); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2527, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[4] = {__pyx_t_10, ((PyObject *)__pyx_v_c), __pyx_t_11, __pyx_t_9};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2527, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[4] = {__pyx_t_10, ((PyObject *)__pyx_v_c), __pyx_t_11, __pyx_t_9};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2527, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else
    #endif
    {
      __pyx_t_12 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2527, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (__pyx_t_10) {
        __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_10); __pyx_t_10 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_v_c));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_c));
      PyTuple_SET_ITEM(__pyx_t_12, 0+__pyx_t_6, ((PyObject *)__pyx_v_c));
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_12, 1+__pyx_t_6, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_12, 2+__pyx_t_6, __pyx_t_9);
      __pyx_t_11 = 0;
      __pyx_t_9 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2527, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2526
 *         if lt == 0: # vertex
 *             return c.vertex(li)
 *         elif lt == 1: # edge             # <<<<<<<<<<<<<<
 *             return Delaunay3_edge.from_cell(c, li, lj)
 *         elif lt == 2: # facet
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":2528
 *         elif lt == 1: # edge
 *             return Delaunay3_edge.from_cell(c, li, lj)
 *         elif lt == 2: # facet             # <<<<<<<<<<<<<<
 *             return Delaunay3_facet.from_cell(c, li)
 *         elif lt == 3: # cell
 */
    case 2:

    /* "cgal4py/delaunay/delaunay3.pyx":2529
 *             return Delaunay3_edge.from_cell(c, li, lj)
 *         elif lt == 2: # facet
 *             return Delaunay3_facet.from_cell(c, li)             # <<<<<<<<<<<<<<
 *         elif lt == 3: # cell
 *             return c
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet), __pyx_n_s_from_cell); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2529, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_li); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2529, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_9 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[3] = {__pyx_t_9, ((PyObject *)__pyx_v_c), __pyx_t_12};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2529, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[3] = {__pyx_t_9, ((PyObject *)__pyx_v_c), __pyx_t_12};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2529, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else
    #endif
    {
      __pyx_t_11 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2529, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_v_c));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_c));
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_6, ((PyObject *)__pyx_v_c));
      __Pyx_GIVEREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_6, __pyx_t_12);
      __pyx_t_12 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2529, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2528
 *         elif lt == 1: # edge
 *             return Delaunay3_edge.from_cell(c, li, lj)
 *         elif lt == 2: # facet             # <<<<<<<<<<<<<<
 *             return Delaunay3_facet.from_cell(c, li)
 *         elif lt == 3: # cell
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":2530
 *         elif lt == 2: # facet
 *             return Delaunay3_facet.from_cell(c, li)
 *         elif lt == 3: # cell             # <<<<<<<<<<<<<<
 *             return c
 *         elif lt == 4:
 */
    case 3:

    /* "cgal4py/delaunay/delaunay3.pyx":2531
 *             return Delaunay3_facet.from_cell(c, li)
 *         elif lt == 3: # cell
 *             return c             # <<<<<<<<<<<<<<
 *         elif lt == 4:
 *             print("Point {} is outside the convex hull.".format(pos))
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_c));
    __pyx_r = ((PyObject *)__pyx_v_c);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2530
 *         elif lt == 2: # facet
 *             return Delaunay3_facet.from_cell(c, li)
 *         elif lt == 3: # cell             # <<<<<<<<<<<<<<
 *             return c
 *         elif lt == 4:
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":2532
 *         elif lt == 3: # cell
 *             return c
 *         elif lt == 4:             # <<<<<<<<<<<<<<
 *             print("Point {} is outside the convex hull.".format(pos))
 *             return c
 */
    case 4:

    /* "cgal4py/delaunay/delaunay3.pyx":2533
 *             return c
 *         elif lt == 4:
 *             print("Point {} is outside the convex hull.".format(pos))             # <<<<<<<<<<<<<<
 *             return c
 *         elif lt == 5:
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Point_is_outside_the_convex_hull, __pyx_n_s_format); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_11) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_pos)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2533, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_11, ((PyObject *)__pyx_v_pos)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2533, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_11, ((PyObject *)__pyx_v_pos)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2533, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_12 = PyTuple_New(1+1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2533, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_11); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_11); __pyx_t_11 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_pos));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_pos));
        PyTuple_SET_ITEM(__pyx_t_12, 0+1, ((PyObject *)__pyx_v_pos));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2533, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 2533, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2534
 *         elif lt == 4:
 *             print("Point {} is outside the convex hull.".format(pos))
 *             return c             # <<<<<<<<<<<<<<
 *         elif lt == 5:
 *             print("Point {} is outside the affine hull.".format(pos))
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_c));
    __pyx_r = ((PyObject *)__pyx_v_c);
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2532
 *         elif lt == 3: # cell
 *             return c
 *         elif lt == 4:             # <<<<<<<<<<<<<<
 *             print("Point {} is outside the convex hull.".format(pos))
 *             return c
 */
    break;

    /* "cgal4py/delaunay/delaunay3.pyx":2535
 *             print("Point {} is outside the convex hull.".format(pos))
 *             return c
 *         elif lt == 5:             # <<<<<<<<<<<<<<
 *             print("Point {} is outside the affine hull.".format(pos))
 *             return 0
 */
    case 5:

    /* "cgal4py/delaunay/delaunay3.pyx":2536
 *             return c
 *         elif lt == 5:
 *             print("Point {} is outside the affine hull.".format(pos))             # <<<<<<<<<<<<<<
 *             return 0
 *         else:
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Point_is_outside_the_affine_hull, __pyx_n_s_format); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2536, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_12 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_12) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_pos)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2536, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_12, ((PyObject *)__pyx_v_pos)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2536, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_12, ((PyObject *)__pyx_v_pos)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2536, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2536, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_12); __pyx_t_12 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_pos));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_pos));
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, ((PyObject *)__pyx_v_pos));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2536, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 2536, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2537
 *         elif lt == 5:
 *             print("Point {} is outside the affine hull.".format(pos))
 *             return 0             # <<<<<<<<<<<<<<
 *         else:
 *             raise RuntimeError("Value of {} not expected from CGAL locate.".format(lt))
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_int_0);
    __pyx_r = __pyx_int_0;
    goto __pyx_L0;

    /* "cgal4py/delaunay/delaunay3.pyx":2535
 *             print("Point {} is outside the convex hull.".format(pos))
 *             return c
 *         elif lt == 5:             # <<<<<<<<<<<<<<
 *             print("Point {} is outside the affine hull.".format(pos))
 *             return 0
 */
    break;
    default:

    /* "cgal4py/delaunay/delaunay3.pyx":2539
 *             return 0
 *         else:
 *             raise RuntimeError("Value of {} not expected from CGAL locate.".format(lt))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Value_of_not_expected_from_CGAL, __pyx_n_s_format); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2539, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_lt); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2539, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_12 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_12) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2539, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_12, __pyx_t_11};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2539, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_12, __pyx_t_11};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2539, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2539, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12); __pyx_t_12 = NULL;
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2539, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_builtin_RuntimeError, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2539, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_8, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __PYX_ERR(0, 2539, __pyx_L1_error)
    break;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2501
 *         return out
 * 
 *     def locate(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                Delaunay3_cell start = None):
 *         r"""Get the vertex/cell/facet/edge that a given point is a part of.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.locate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2542
 * 
 *     @property
 *     def all_verts_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_iter: Starting vertex for all vertices in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_verts_begin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_verts_begin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_verts_begin___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_verts_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2545
 *         r"""Delaunay3_vertex_iter: Starting vertex for all vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_iter(self, 'all_begin')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_verts_end(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_begin);
  __Pyx_GIVEREF(__pyx_n_s_all_begin);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_begin);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2542
 * 
 *     @property
 *     def all_verts_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_iter: Starting vertex for all vertices in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_verts_begin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2547
 *         return Delaunay3_vertex_iter(self, 'all_begin')
 *     @property
 *     def all_verts_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_iter: Final vertex for all vertices in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_verts_end_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_verts_end_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_verts_end___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_verts_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2550
 *         r"""Delaunay3_vertex_iter: Final vertex for all vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_iter(self, 'all_end')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_verts(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_end);
  __Pyx_GIVEREF(__pyx_n_s_all_end);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_end);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2547
 *         return Delaunay3_vertex_iter(self, 'all_begin')
 *     @property
 *     def all_verts_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_iter: Final vertex for all vertices in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_verts_end.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2552
 *         return Delaunay3_vertex_iter(self, 'all_end')
 *     @property
 *     def all_verts(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_range: Iterable for all vertices in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_verts_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_verts_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_verts___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_verts___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2555
 *         r"""Delaunay3_vertex_range: Iterable for all vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,             # <<<<<<<<<<<<<<
 *                                       self.all_verts_end)
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_verts_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2556
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,
 *                                       self.all_verts_end)             # <<<<<<<<<<<<<<
 *     @property
 *     def finite_verts(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_verts_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2555
 *         r"""Delaunay3_vertex_range: Iterable for all vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,             # <<<<<<<<<<<<<<
 *                                       self.all_verts_end)
 *     @property
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2552
 *         return Delaunay3_vertex_iter(self, 'all_end')
 *     @property
 *     def all_verts(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_range: Iterable for all vertices in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_verts.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2558
 *                                       self.all_verts_end)
 *     @property
 *     def finite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_range: Iterable for finite vertices in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_verts_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_verts_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_verts___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_verts___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2561
 *         r"""Delaunay3_vertex_range: Iterable for finite vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,             # <<<<<<<<<<<<<<
 *                                       self.all_verts_end, finite = True)
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_verts_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2562
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,
 *                                       self.all_verts_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_verts_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2561
 *         r"""Delaunay3_vertex_range: Iterable for finite vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,             # <<<<<<<<<<<<<<
 *                                       self.all_verts_end, finite = True)
 * 
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2562
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,
 *                                       self.all_verts_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_finite, Py_True) < 0) __PYX_ERR(0, 2562, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":2561
 *         r"""Delaunay3_vertex_range: Iterable for finite vertices in the
 *         triangulation."""
 *         return Delaunay3_vertex_range(self.all_verts_begin,             # <<<<<<<<<<<<<<
 *                                       self.all_verts_end, finite = True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range), __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2558
 *                                       self.all_verts_end)
 *     @property
 *     def finite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex_range: Iterable for finite vertices in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.finite_verts.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2565
 * 
 *     @property
 *     def all_edges_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_iter: Starting edge for all edges in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_edges_begin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_edges_begin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_edges_begin___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_edges_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2568
 *         r"""Delaunay3_edge_iter: Starting edge for all edges in the
 *         triangulation."""
 *         return Delaunay3_edge_iter(self, 'all_begin')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_edges_end(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_begin);
  __Pyx_GIVEREF(__pyx_n_s_all_begin);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_begin);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2565
 * 
 *     @property
 *     def all_edges_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_iter: Starting edge for all edges in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_edges_begin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2570
 *         return Delaunay3_edge_iter(self, 'all_begin')
 *     @property
 *     def all_edges_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_iter: Final edge for all edges in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_edges_end_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_edges_end_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_edges_end___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_edges_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2573
 *         r"""Delaunay3_edge_iter: Final edge for all edges in the
 *         triangulation."""
 *         return Delaunay3_edge_iter(self, 'all_end')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_end);
  __Pyx_GIVEREF(__pyx_n_s_all_end);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_end);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2570
 *         return Delaunay3_edge_iter(self, 'all_begin')
 *     @property
 *     def all_edges_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_iter: Final edge for all edges in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_edges_end.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2575
 *         return Delaunay3_edge_iter(self, 'all_end')
 *     @property
 *     def all_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_range: Iterable for all edges in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_edges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_edges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_edges___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_edges___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2578
 *         r"""Delaunay3_edge_range: Iterable for all edges in the
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_edges_end)
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_edges_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2579
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,
 *                                     self.all_edges_end)             # <<<<<<<<<<<<<<
 *     @property
 *     def finite_edges(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_edges_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2578
 *         r"""Delaunay3_edge_range: Iterable for all edges in the
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_edges_end)
 *     @property
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2575
 *         return Delaunay3_edge_iter(self, 'all_end')
 *     @property
 *     def all_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_range: Iterable for all edges in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_edges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2581
 *                                     self.all_edges_end)
 *     @property
 *     def finite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_range: Iterable for finite edges in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_edges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_edges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_edges___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_edges___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2584
 *         r"""Delaunay3_edge_range: Iterable for finite edges in the
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_edges_end, finite = True)
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_edges_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2585
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,
 *                                     self.all_edges_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_edges_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2584
 *         r"""Delaunay3_edge_range: Iterable for finite edges in the
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_edges_end, finite = True)
 * 
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2585
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,
 *                                     self.all_edges_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_finite, Py_True) < 0) __PYX_ERR(0, 2585, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":2584
 *         r"""Delaunay3_edge_range: Iterable for finite edges in the
 *         triangulation."""
 *         return Delaunay3_edge_range(self.all_edges_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_edges_end, finite = True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range), __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2581
 *                                     self.all_edges_end)
 *     @property
 *     def finite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_edge_range: Iterable for finite edges in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.finite_edges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2588
 * 
 *     @property
 *     def all_facets_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_iter: Starting facet for all facets in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16all_facets_begin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16all_facets_begin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16all_facets_begin___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16all_facets_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2591
 *         r"""Delaunay3_facet_iter: Starting facet for all facets in the
 *         triangulation."""
 *         return Delaunay3_facet_iter(self, 'all_begin')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_facets_end(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_begin);
  __Pyx_GIVEREF(__pyx_n_s_all_begin);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_begin);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2588
 * 
 *     @property
 *     def all_facets_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_iter: Starting facet for all facets in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_facets_begin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2593
 *         return Delaunay3_facet_iter(self, 'all_begin')
 *     @property
 *     def all_facets_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_iter: Final facet for all facets in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14all_facets_end_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14all_facets_end_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14all_facets_end___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14all_facets_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2596
 *         r"""Delaunay3_facet_iter: Final facet for all facets in the
 *         triangulation."""
 *         return Delaunay3_facet_iter(self, 'all_end')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_facets(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_end);
  __Pyx_GIVEREF(__pyx_n_s_all_end);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_end);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2593
 *         return Delaunay3_facet_iter(self, 'all_begin')
 *     @property
 *     def all_facets_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_iter: Final facet for all facets in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_facets_end.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2598
 *         return Delaunay3_facet_iter(self, 'all_end')
 *     @property
 *     def all_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_range: Iterable for all facets in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10all_facets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10all_facets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10all_facets___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10all_facets___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2601
 *         r"""Delaunay3_facet_range: Iterable for all facets in the
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,             # <<<<<<<<<<<<<<
 *                                      self.all_facets_end)
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_facets_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2602
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,
 *                                      self.all_facets_end)             # <<<<<<<<<<<<<<
 *     @property
 *     def finite_facets(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_facets_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2601
 *         r"""Delaunay3_facet_range: Iterable for all facets in the
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,             # <<<<<<<<<<<<<<
 *                                      self.all_facets_end)
 *     @property
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2598
 *         return Delaunay3_facet_iter(self, 'all_end')
 *     @property
 *     def all_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_range: Iterable for all facets in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_facets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2604
 *                                      self.all_facets_end)
 *     @property
 *     def finite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_range: Iterable for finite facets in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13finite_facets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13finite_facets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13finite_facets___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13finite_facets___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2607
 *         r"""Delaunay3_facet_range: Iterable for finite facets in the
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,             # <<<<<<<<<<<<<<
 *                                      self.all_facets_end, finite = True)
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_facets_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2608
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,
 *                                      self.all_facets_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_facets_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2607
 *         r"""Delaunay3_facet_range: Iterable for finite facets in the
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,             # <<<<<<<<<<<<<<
 *                                      self.all_facets_end, finite = True)
 * 
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2608
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,
 *                                      self.all_facets_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_finite, Py_True) < 0) __PYX_ERR(0, 2608, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":2607
 *         r"""Delaunay3_facet_range: Iterable for finite facets in the
 *         triangulation."""
 *         return Delaunay3_facet_range(self.all_facets_begin,             # <<<<<<<<<<<<<<
 *                                      self.all_facets_end, finite = True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range), __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2604
 *                                      self.all_facets_end)
 *     @property
 *     def finite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_facet_range: Iterable for finite facets in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.finite_facets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2611
 * 
 *     @property
 *     def all_cells_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_iter: Starting cell for all cells in the triangulation."""
 *         return Delaunay3_cell_iter(self, 'all_begin')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_cells_begin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_cells_begin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_cells_begin___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_cells_begin___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2613
 *     def all_cells_begin(self):
 *         r"""Delaunay3_cell_iter: Starting cell for all cells in the triangulation."""
 *         return Delaunay3_cell_iter(self, 'all_begin')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_cells_end(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_begin);
  __Pyx_GIVEREF(__pyx_n_s_all_begin);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_begin);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2611
 * 
 *     @property
 *     def all_cells_begin(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_iter: Starting cell for all cells in the triangulation."""
 *         return Delaunay3_cell_iter(self, 'all_begin')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_cells_begin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2615
 *         return Delaunay3_cell_iter(self, 'all_begin')
 *     @property
 *     def all_cells_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_iter: Finall cell for all cells in the triangulation."""
 *         return Delaunay3_cell_iter(self, 'all_end')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_cells_end_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_cells_end_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_cells_end___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_cells_end___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2617
 *     def all_cells_end(self):
 *         r"""Delaunay3_cell_iter: Finall cell for all cells in the triangulation."""
 *         return Delaunay3_cell_iter(self, 'all_end')             # <<<<<<<<<<<<<<
 *     @property
 *     def all_cells(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_n_s_all_end);
  __Pyx_GIVEREF(__pyx_n_s_all_end);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_all_end);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2615
 *         return Delaunay3_cell_iter(self, 'all_begin')
 *     @property
 *     def all_cells_end(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_iter: Finall cell for all cells in the triangulation."""
 *         return Delaunay3_cell_iter(self, 'all_end')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_cells_end.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2619
 *         return Delaunay3_cell_iter(self, 'all_end')
 *     @property
 *     def all_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_range: Iterable for all cells in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_cells_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_cells_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_cells___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_cells___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2622
 *         r"""Delaunay3_cell_range: Iterable for all cells in the
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_cells_end)
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_cells_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2623
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,
 *                                     self.all_cells_end)             # <<<<<<<<<<<<<<
 *     @property
 *     def finite_cells(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_cells_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2622
 *         r"""Delaunay3_cell_range: Iterable for all cells in the
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_cells_end)
 *     @property
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2619
 *         return Delaunay3_cell_iter(self, 'all_end')
 *     @property
 *     def all_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_range: Iterable for all cells in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.all_cells.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2625
 *                                     self.all_cells_end)
 *     @property
 *     def finite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_range: Iterable for finite cells in the
 *         triangulation."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_cells_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_cells_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_cells___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_cells___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2628
 *         r"""Delaunay3_cell_range: Iterable for finite cells in the
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_cells_end, finite = True)
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_cells_begin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":2629
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,
 *                                     self.all_cells_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     def is_edge(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_all_cells_end); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2628
 *         r"""Delaunay3_cell_range: Iterable for finite cells in the
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_cells_end, finite = True)
 * 
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2629
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,
 *                                     self.all_cells_end, finite = True)             # <<<<<<<<<<<<<<
 * 
 *     def is_edge(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_finite, Py_True) < 0) __PYX_ERR(0, 2629, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":2628
 *         r"""Delaunay3_cell_range: Iterable for finite cells in the
 *         triangulation."""
 *         return Delaunay3_cell_range(self.all_cells_begin,             # <<<<<<<<<<<<<<
 *                                     self.all_cells_end, finite = True)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range), __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2625
 *                                     self.all_cells_end)
 *     @property
 *     def finite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_cell_range: Iterable for finite cells in the
 *         triangulation."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.finite_cells.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2631
 *                                     self.all_cells_end, finite = True)
 * 
 *     def is_edge(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                 Delaunay3_cell c = Delaunay3_cell(), int i1 = 0, int i2 = 0):
 *         r"""Determine if two vertices form an edge in the triangulation.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_103is_edge(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_102is_edge[] = "Determine if two vertices form an edge in the triangulation.  \n\n        Args:\n            v1 (Delaunay3_vertex): First vertex. \n            v2 (Delaunay3_vertex): Second vertex.\n            c (Delaunay3_cell, optional): If provided and the two vertices \n                form an edge, the cell incident to the edge is stored here.\n            i1 (int, optional): If provided and the two vertices form an edge,\n                the index of v1 in cell c is stored here.\n            i2 (int, optional): If provided and the two vertices form an edge,\n                the index of v2 in cell c is stored here.\n\n        Returns:\n            bool: True if v1 and v2 form an edge, False otherwise. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_103is_edge(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  int __pyx_v_i1;
  int __pyx_v_i2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_edge (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_v1,&__pyx_n_s_v2,&__pyx_n_s_c,&__pyx_n_s_i1,&__pyx_n_s_i2,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[2] = (PyObject *)__pyx_k__64;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("is_edge", 0, 2, 5, 1); __PYX_ERR(0, 2631, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i1);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i2);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "is_edge") < 0)) __PYX_ERR(0, 2631, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v1 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_v2 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[1]);
    __pyx_v_c = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[2]);
    if (values[3]) {
      __pyx_v_i1 = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_i1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2632, __pyx_L3_error)
    } else {
      __pyx_v_i1 = ((int)0);
    }
    if (values[4]) {
      __pyx_v_i2 = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_i2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2632, __pyx_L3_error)
    } else {
      __pyx_v_i2 = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_edge", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2631, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_edge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v1), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v1", 0))) __PYX_ERR(0, 2631, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v2), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v2", 0))) __PYX_ERR(0, 2631, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c", 0))) __PYX_ERR(0, 2632, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_102is_edge(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_v1, __pyx_v_v2, __pyx_v_c, __pyx_v_i1, __pyx_v_i2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_102is_edge(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i1, int __pyx_v_i2) {
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_edge", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2650
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_edge(v1.x, v2.x, c.x, i1, i2)
 *         return <pybool>out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2651
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_edge(v1.x, v2.x, c.x, i1, i2)             # <<<<<<<<<<<<<<
 *         return <pybool>out
 * 
 */
        __pyx_v_out = __pyx_v_self->T->is_edge(__pyx_v_v1->x, __pyx_v_v2->x, __pyx_v_c->x, __pyx_v_i1, __pyx_v_i2);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2650
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_edge(v1.x, v2.x, c.x, i1, i2)
 *         return <pybool>out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2652
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_edge(v1.x, v2.x, c.x, i1, i2)
 *         return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     def is_facet(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 2652, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2631
 *                                     self.all_cells_end, finite = True)
 * 
 *     def is_edge(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                 Delaunay3_cell c = Delaunay3_cell(), int i1 = 0, int i2 = 0):
 *         r"""Determine if two vertices form an edge in the triangulation.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_edge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2654
 *         return <pybool>out
 * 
 *     def is_facet(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                  Delaunay3_vertex v3, Delaunay3_cell c = Delaunay3_cell(),
 *                  int i1 = 0, int i2 = 0, int i3 = 0):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_105is_facet(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_104is_facet[] = "Determine if two vertices form a facet in the triangulation.  \n\n        Args:\n            v1 (Delaunay3_vertex): First vertex. \n            v2 (Delaunay3_vertex): Second vertex.\n            v3 (Delaunay3_vertex): Third vertex.\n            c (Delaunay3_cell, optional): If provided and the two vertices \n                form a facet, the cell incident to the facet is stored here.\n            i1 (int, optional): If provided and the two vertices form a facet,\n                the index of v1 in cell c is stored here.\n            i2 (int, optional): If provided and the two vertices form a facet,\n                the index of v2 in cell c is stored here.\n            i3 (int, optional): If provided and the two vertices form a facet,\n                the index of v3 in cell c is stored here.\n\n        Returns:\n            bool: True if v1, v2, and v3 form a facet, False otherwise. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_105is_facet(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  int __pyx_v_i1;
  int __pyx_v_i2;
  int __pyx_v_i3;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_facet (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_v1,&__pyx_n_s_v2,&__pyx_n_s_v3,&__pyx_n_s_c,&__pyx_n_s_i1,&__pyx_n_s_i2,&__pyx_n_s_i3,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    values[3] = (PyObject *)__pyx_k__65;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("is_facet", 0, 3, 7, 1); __PYX_ERR(0, 2654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("is_facet", 0, 3, 7, 2); __PYX_ERR(0, 2654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i1);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i2);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i3);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "is_facet") < 0)) __PYX_ERR(0, 2654, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v1 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_v2 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[1]);
    __pyx_v_v3 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[2]);
    __pyx_v_c = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[3]);
    if (values[4]) {
      __pyx_v_i1 = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_i1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2656, __pyx_L3_error)
    } else {
      __pyx_v_i1 = ((int)0);
    }
    if (values[5]) {
      __pyx_v_i2 = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_i2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2656, __pyx_L3_error)
    } else {
      __pyx_v_i2 = ((int)0);
    }
    if (values[6]) {
      __pyx_v_i3 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_i3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2656, __pyx_L3_error)
    } else {
      __pyx_v_i3 = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_facet", 0, 3, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2654, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_facet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v1), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v1", 0))) __PYX_ERR(0, 2654, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v2), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v2", 0))) __PYX_ERR(0, 2654, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v3), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v3", 0))) __PYX_ERR(0, 2655, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c", 0))) __PYX_ERR(0, 2655, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_104is_facet(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_v1, __pyx_v_v2, __pyx_v_v3, __pyx_v_c, __pyx_v_i1, __pyx_v_i2, __pyx_v_i3);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_104is_facet(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i1, int __pyx_v_i2, int __pyx_v_i3) {
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_facet", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2677
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_facet(v1.x, v2.x, v3.x, c.x, i1, i2, i3)
 *         return <pybool>out
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2678
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_facet(v1.x, v2.x, v3.x, c.x, i1, i2, i3)             # <<<<<<<<<<<<<<
 *         return <pybool>out
 * 
 */
        __pyx_v_out = __pyx_v_self->T->is_facet(__pyx_v_v1->x, __pyx_v_v2->x, __pyx_v_v3->x, __pyx_v_c->x, __pyx_v_i1, __pyx_v_i2, __pyx_v_i3);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2677
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_facet(v1.x, v2.x, v3.x, c.x, i1, i2, i3)
 *         return <pybool>out
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2679
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_facet(v1.x, v2.x, v3.x, c.x, i1, i2, i3)
 *         return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     def is_cell(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2679, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 2679, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2654
 *         return <pybool>out
 * 
 *     def is_facet(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                  Delaunay3_vertex v3, Delaunay3_cell c = Delaunay3_cell(),
 *                  int i1 = 0, int i2 = 0, int i3 = 0):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_facet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2681
 *         return <pybool>out
 * 
 *     def is_cell(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                 Delaunay3_vertex v3, Delaunay3_vertex v4,
 *                 Delaunay3_cell c = Delaunay3_cell(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_107is_cell(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_106is_cell[] = "Determine if two vertices form a cell in the triangulation.  \n\n        Args:\n            v1 (Delaunay3_vertex): First vertex. \n            v2 (Delaunay3_vertex): Second vertex.\n            v3 (Delaunay3_vertex): Third vertex.\n            v4 (Delaunay3_vertex): Fourth vertex.\n            c (Delaunay3_cell, optional): If provided and the two vertices \n                form a cell, the cell they form is stored here.\n            i1 (int, optional): If provided and the two vertices form a cell,\n                the index of v1 in cell c is stored here.\n            i2 (int, optional): If provided and the two vertices form a cell,\n                the index of v2 in cell c is stored here.\n            i3 (int, optional): If provided and the two vertices form a cell,\n                the index of v3 in cell c is stored here.\n            i3 (int, optional): If provided and the two vertices form a cell,\n                the index of v4 in cell c is stored here.\n\n        Returns:\n            bool: True if v1, v2, v3, and v4 form a cell, False otherwise. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_107is_cell(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v4 = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  int __pyx_v_i1;
  int __pyx_v_i2;
  int __pyx_v_i3;
  int __pyx_v_i4;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_cell (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_v1,&__pyx_n_s_v2,&__pyx_n_s_v3,&__pyx_n_s_v4,&__pyx_n_s_c,&__pyx_n_s_i1,&__pyx_n_s_i2,&__pyx_n_s_i3,&__pyx_n_s_i4,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    values[4] = (PyObject *)__pyx_k__66;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("is_cell", 0, 4, 9, 1); __PYX_ERR(0, 2681, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("is_cell", 0, 4, 9, 2); __PYX_ERR(0, 2681, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_v4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("is_cell", 0, 4, 9, 3); __PYX_ERR(0, 2681, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i1);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i2);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i3);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i4);
          if (value) { values[8] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "is_cell") < 0)) __PYX_ERR(0, 2681, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v1 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[0]);
    __pyx_v_v2 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[1]);
    __pyx_v_v3 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[2]);
    __pyx_v_v4 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)values[3]);
    __pyx_v_c = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[4]);
    if (values[5]) {
      __pyx_v_i1 = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_i1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2684, __pyx_L3_error)
    } else {
      __pyx_v_i1 = ((int)0);
    }
    if (values[6]) {
      __pyx_v_i2 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_i2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2684, __pyx_L3_error)
    } else {
      __pyx_v_i2 = ((int)0);
    }
    if (values[7]) {
      __pyx_v_i3 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_i3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2684, __pyx_L3_error)
    } else {
      __pyx_v_i3 = ((int)0);
    }
    if (values[8]) {
      __pyx_v_i4 = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_i4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2684, __pyx_L3_error)
    } else {
      __pyx_v_i4 = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_cell", 0, 4, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2681, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_cell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v1), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v1", 0))) __PYX_ERR(0, 2681, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v2), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v2", 0))) __PYX_ERR(0, 2681, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v3), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v3", 0))) __PYX_ERR(0, 2682, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v4), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, 1, "v4", 0))) __PYX_ERR(0, 2682, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "c", 0))) __PYX_ERR(0, 2683, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_106is_cell(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_v1, __pyx_v_v2, __pyx_v_v3, __pyx_v_v4, __pyx_v_c, __pyx_v_i1, __pyx_v_i2, __pyx_v_i3, __pyx_v_i4);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_106is_cell(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v1, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v2, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v3, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v4, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c, int __pyx_v_i1, int __pyx_v_i2, int __pyx_v_i3, int __pyx_v_i4) {
  bool __pyx_v_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_cell", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2708
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_cell(v1.x, v2.x, v3.x, v4.x,
 *                                  c.x, i1, i2, i3, i4)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2709
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             out = self.T.is_cell(v1.x, v2.x, v3.x, v4.x,             # <<<<<<<<<<<<<<
 *                                  c.x, i1, i2, i3, i4)
 *         return <pybool>out
 */
        __pyx_v_out = __pyx_v_self->T->is_cell(__pyx_v_v1->x, __pyx_v_v2->x, __pyx_v_v3->x, __pyx_v_v4->x, __pyx_v_c->x, __pyx_v_i1, __pyx_v_i2, __pyx_v_i3, __pyx_v_i4);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2708
 *         """
 *         cdef cbool out
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             out = self.T.is_cell(v1.x, v2.x, v3.x, v4.x,
 *                                  c.x, i1, i2, i3, i4)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2711
 *             out = self.T.is_cell(v1.x, v2.x, v3.x, v4.x,
 *                                  c.x, i1, i2, i3, i4)
 *         return <pybool>out             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_out); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2711, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_7cpython_4bool_bool)))) __PYX_ERR(0, 2711, __pyx_L1_error)
  __Pyx_INCREF(((PyBoolObject *)__pyx_t_1));
  __pyx_r = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2681
 *         return <pybool>out
 * 
 *     def is_cell(self, Delaunay3_vertex v1, Delaunay3_vertex v2,             # <<<<<<<<<<<<<<
 *                 Delaunay3_vertex v3, Delaunay3_vertex v4,
 *                 Delaunay3_cell c = Delaunay3_cell(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.is_cell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2715
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def nearest_vertex(self, np.ndarray[np.float64_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *         r"""Determine which vertex is closes to a given set of x,y coordinates.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_109nearest_vertex(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_108nearest_vertex[] = "Determine which vertex is closes to a given set of x,y coordinates.\n\n        Args:\n            x (:obj:`ndarray` of float64): x,y coordinates. \n\n        Returns: \n            Delaunay3_vertex: Vertex closest to x. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_109nearest_vertex(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nearest_vertex (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5numpy_ndarray, 1, "x", 0))) __PYX_ERR(0, 2715, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_108nearest_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyArrayObject *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_108nearest_vertex(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_x) {
  Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex __pyx_v_vc;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *__pyx_v_v = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("nearest_vertex", 0);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2715, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2725
 * 
 *         """
 *         assert(len(x) == 3)             # <<<<<<<<<<<<<<
 *         cdef Delaunay_with_info_3[info_t].Vertex vc
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_x)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2725, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2725, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2727
 *         assert(len(x) == 3)
 *         cdef Delaunay_with_info_3[info_t].Vertex vc
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             vc = self.T.nearest_vertex(&x[0])
 *         cdef Delaunay3_vertex v = Delaunay3_vertex()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2728
 *         cdef Delaunay_with_info_3[info_t].Vertex vc
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             vc = self.T.nearest_vertex(&x[0])             # <<<<<<<<<<<<<<
 *         cdef Delaunay3_vertex v = Delaunay3_vertex()
 *         v.assign(self.T, vc)
 */
        __pyx_t_2 = 0;
        __pyx_v_vc = __pyx_v_self->T->nearest_vertex((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_x.diminfo[0].strides))));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2727
 *         assert(len(x) == 3)
 *         cdef Delaunay_with_info_3[info_t].Vertex vc
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             vc = self.T.nearest_vertex(&x[0])
 *         cdef Delaunay3_vertex v = Delaunay3_vertex()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2729
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             vc = self.T.nearest_vertex(&x[0])
 *         cdef Delaunay3_vertex v = Delaunay3_vertex()             # <<<<<<<<<<<<<<
 *         v.assign(self.T, vc)
 *         return v
 */
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_v = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2730
 *             vc = self.T.nearest_vertex(&x[0])
 *         cdef Delaunay3_vertex v = Delaunay3_vertex()
 *         v.assign(self.T, vc)             # <<<<<<<<<<<<<<
 *         return v
 * 
 */
  ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)__pyx_v_v->__pyx_vtab)->assign(__pyx_v_v, __pyx_v_self->T, __pyx_v_vc);

  /* "cgal4py/delaunay/delaunay3.pyx":2731
 *         cdef Delaunay3_vertex v = Delaunay3_vertex()
 *         v.assign(self.T, vc)
 *         return v             # <<<<<<<<<<<<<<
 * 
 *     def mirror_facet(self, Delaunay3_facet x):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_v));
  __pyx_r = ((PyObject *)__pyx_v_v);
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2715
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def nearest_vertex(self, np.ndarray[np.float64_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *         r"""Determine which vertex is closes to a given set of x,y coordinates.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.nearest_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2733
 *         return v
 * 
 *     def mirror_facet(self, Delaunay3_facet x):             # <<<<<<<<<<<<<<
 *         r"""Get the same facet as referenced from its other incident cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_111mirror_facet(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_110mirror_facet[] = "Get the same facet as referenced from its other incident cell. \n\n        Args:\n            x (Delaunay3_facet): Facet to mirror.\n\n        Returns:\n            Delaunay3_facet: The same facet as x, but referenced from the \n                other cell incident to x.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_111mirror_facet(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mirror_facet (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, 1, "x", 0))) __PYX_ERR(0, 2733, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_110mirror_facet(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_110mirror_facet(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("mirror_facet", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2744
 * 
 *         """
 *         return x.mirror             # <<<<<<<<<<<<<<
 * 
 *     def mirror_index(self, Delaunay3_cell x, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_mirror); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2733
 *         return v
 * 
 *     def mirror_facet(self, Delaunay3_facet x):             # <<<<<<<<<<<<<<
 *         r"""Get the same facet as referenced from its other incident cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.mirror_facet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2746
 *         return x.mirror
 * 
 *     def mirror_index(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the index of a cell with respect to its ith neighbor.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_113mirror_index(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_112mirror_index[] = "Get the index of a cell with respect to its ith neighbor. \n\n        Args: \n            x (Delaunay3_cell): Cell to get mirrored index for. \n            i (int): Index of neighbor that should be used to determine the \n                mirrored index. \n\n        Returns: \n            int: Index of cell x with respect to its ith neighbor. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_113mirror_index(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x = 0;
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mirror_index (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_i,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("mirror_index", 1, 2, 2, 1); __PYX_ERR(0, 2746, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mirror_index") < 0)) __PYX_ERR(0, 2746, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_i = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2746, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mirror_index", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2746, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.mirror_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "x", 0))) __PYX_ERR(0, 2746, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_112mirror_index(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_x, __pyx_v_i);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_112mirror_index(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("mirror_index", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2758
 * 
 *         """
 *         return x.mirror_index(i)             # <<<<<<<<<<<<<<
 * 
 *     def mirror_vertex(self, Delaunay3_cell x, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_mirror_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2758, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2758, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2758, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2758, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2758, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2746
 *         return x.mirror
 * 
 *     def mirror_index(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the index of a cell with respect to its ith neighbor.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.mirror_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2760
 *         return x.mirror_index(i)
 * 
 *     def mirror_vertex(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex of a cell's ith neighbor opposite to the cell.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_115mirror_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_114mirror_vertex[] = "Get the vertex of a cell's ith neighbor opposite to the cell. \n\n        Args: \n            x (Delaunay3_cell): Cell. \n            i (int): Index of neighbor that should be used to determine the \n                mirrored vertex. \n\n        Returns:\n            Delaunay3_vertex: Vertex in the ith neighboring cell of cell x, \n                that is opposite to cell x. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_115mirror_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x = 0;
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mirror_vertex (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_i,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("mirror_vertex", 1, 2, 2, 1); __PYX_ERR(0, 2760, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mirror_vertex") < 0)) __PYX_ERR(0, 2760, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[0]);
    __pyx_v_i = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2760, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mirror_vertex", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2760, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.mirror_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "x", 0))) __PYX_ERR(0, 2760, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_114mirror_vertex(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_x, __pyx_v_i);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_114mirror_vertex(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_x, int __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("mirror_vertex", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":2773
 * 
 *         """
 *         return x.mirror_vertex(i)             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_mirror_vertex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2773, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2773, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2773, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2760
 *         return x.mirror_index(i)
 * 
 *     def mirror_vertex(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Get the vertex of a cell's ith neighbor opposite to the cell.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.mirror_vertex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2777
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def get_boundary_of_conflicts(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                                   Delaunay3_cell start):
 *         r"""Get the facets bounding the zone in conflict with a given point.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_117get_boundary_of_conflicts(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_116get_boundary_of_conflicts[] = "Get the facets bounding the zone in conflict with a given point. \n\n        Args: \n            pos (:obj:`ndarray` of float64): x,y,z coordinates. \n            start (Delaunay3_cell): Cell to start list of facets at. \n\n        Returns: \n            :obj:`list` of Delaunay3_facet: Facets bounding the zone in conflict \n                 with pos. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_117get_boundary_of_conflicts(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_boundary_of_conflicts (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_start,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_start)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_boundary_of_conflicts", 1, 2, 2, 1); __PYX_ERR(0, 2777, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_boundary_of_conflicts") < 0)) __PYX_ERR(0, 2777, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_start = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_boundary_of_conflicts", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2777, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_boundary_of_conflicts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2777, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_start), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "start", 0))) __PYX_ERR(0, 2778, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_116get_boundary_of_conflicts(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_pos, __pyx_v_start);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_116get_boundary_of_conflicts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start) {
  std::pair<std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ,std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> >  __pyx_v_cv;
  PyObject *__pyx_v_out_facets = 0;
  __pyx_t_5numpy_uint32_t __pyx_v_i;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_f = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ::size_type __pyx_t_4;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ::size_type __pyx_t_5;
  __pyx_t_5numpy_uint32_t __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("get_boundary_of_conflicts", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2777, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2790
 * 
 *         """
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2790, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2790, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2793
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2794
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             cv = self.T.find_conflicts(&pos[0], start.x)             # <<<<<<<<<<<<<<
 *         cdef object out_facets = []
 *         cdef np.uint32_t i
 */
        __pyx_t_2 = 0;
        __pyx_v_cv = __pyx_v_self->T->find_conflicts((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_pos.diminfo[0].strides))), __pyx_v_start->x);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2793
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2795
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []             # <<<<<<<<<<<<<<
 *         cdef np.uint32_t i
 *         cdef Delaunay3_facet f
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_out_facets = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2798
 *         cdef np.uint32_t i
 *         cdef Delaunay3_facet f
 *         for i in range(cv.second.size()):             # <<<<<<<<<<<<<<
 *             f = Delaunay3_facet()
 *             f.assign(self.T, cv.second[i])
 */
  __pyx_t_4 = __pyx_v_cv.second.size();
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2799
 *         cdef Delaunay3_facet f
 *         for i in range(cv.second.size()):
 *             f = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *             f.assign(self.T, cv.second[i])
 *             out_facets.append(f)
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2799, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_f, ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2800
 *         for i in range(cv.second.size()):
 *             f = Delaunay3_facet()
 *             f.assign(self.T, cv.second[i])             # <<<<<<<<<<<<<<
 *             out_facets.append(f)
 *         return out_facets
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_f->__pyx_vtab)->assign(__pyx_v_f, __pyx_v_self->T, (__pyx_v_cv.second[__pyx_v_i]));

    /* "cgal4py/delaunay/delaunay3.pyx":2801
 *             f = Delaunay3_facet()
 *             f.assign(self.T, cv.second[i])
 *             out_facets.append(f)             # <<<<<<<<<<<<<<
 *         return out_facets
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_v_out_facets, ((PyObject *)__pyx_v_f)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 2801, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2802
 *             f.assign(self.T, cv.second[i])
 *             out_facets.append(f)
 *         return out_facets             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out_facets);
  __pyx_r = __pyx_v_out_facets;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2777
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def get_boundary_of_conflicts(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                                   Delaunay3_cell start):
 *         r"""Get the facets bounding the zone in conflict with a given point.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_boundary_of_conflicts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_out_facets);
  __Pyx_XDECREF((PyObject *)__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2806
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def get_conflicts(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                       Delaunay3_cell start):
 *         r"""Get the cells in conflict with a given point.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_119get_conflicts(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_118get_conflicts[] = "Get the cells in conflict with a given point.\n\n        Args: \n            pos (:obj:`ndarray` of float64): x,y,z coordinates. \n            start (Delaunay3_cell): Cell to start list of facets at. \n\n        Returns: \n            :obj:`list` of Delaunay3_cell: Cells in conflict with pos. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_119get_conflicts(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_conflicts (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_start,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_start)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_conflicts", 1, 2, 2, 1); __PYX_ERR(0, 2806, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_conflicts") < 0)) __PYX_ERR(0, 2806, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_start = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_conflicts", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2806, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_conflicts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2806, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_start), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "start", 0))) __PYX_ERR(0, 2807, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_118get_conflicts(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_pos, __pyx_v_start);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_118get_conflicts(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start) {
  std::pair<std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ,std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> >  __pyx_v_cv;
  PyObject *__pyx_v_out_cells = 0;
  __pyx_t_5numpy_uint32_t __pyx_v_i;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ::size_type __pyx_t_4;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ::size_type __pyx_t_5;
  __pyx_t_5numpy_uint32_t __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("get_conflicts", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2806, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2818
 * 
 *         """
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2818, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2818, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2821
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_cells = []
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2822
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             cv = self.T.find_conflicts(&pos[0], start.x)             # <<<<<<<<<<<<<<
 *         cdef object out_cells = []
 *         cdef np.uint32_t i
 */
        __pyx_t_2 = 0;
        __pyx_v_cv = __pyx_v_self->T->find_conflicts((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_pos.diminfo[0].strides))), __pyx_v_start->x);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2821
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_cells = []
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2823
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_cells = []             # <<<<<<<<<<<<<<
 *         cdef np.uint32_t i
 *         cdef Delaunay3_cell c
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_out_cells = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2826
 *         cdef np.uint32_t i
 *         cdef Delaunay3_cell c
 *         for i in range(cv.first.size()):             # <<<<<<<<<<<<<<
 *             c = Delaunay3_cell()
 *             c.assign(self.T, cv.first[i])
 */
  __pyx_t_4 = __pyx_v_cv.first.size();
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2827
 *         cdef Delaunay3_cell c
 *         for i in range(cv.first.size()):
 *             c = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             c.assign(self.T, cv.first[i])
 *             out_cells.append(c)
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2827, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_c, ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2828
 *         for i in range(cv.first.size()):
 *             c = Delaunay3_cell()
 *             c.assign(self.T, cv.first[i])             # <<<<<<<<<<<<<<
 *             out_cells.append(c)
 *         return out_cells
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_c->__pyx_vtab)->assign(__pyx_v_c, __pyx_v_self->T, (__pyx_v_cv.first[__pyx_v_i]));

    /* "cgal4py/delaunay/delaunay3.pyx":2829
 *             c = Delaunay3_cell()
 *             c.assign(self.T, cv.first[i])
 *             out_cells.append(c)             # <<<<<<<<<<<<<<
 *         return out_cells
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_v_out_cells, ((PyObject *)__pyx_v_c)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 2829, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2830
 *             c.assign(self.T, cv.first[i])
 *             out_cells.append(c)
 *         return out_cells             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out_cells);
  __pyx_r = __pyx_v_out_cells;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2806
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def get_conflicts(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                       Delaunay3_cell start):
 *         r"""Get the cells in conflict with a given point.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_conflicts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_out_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2834
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def get_conflicts_and_boundary(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                                    Delaunay3_cell start):
 *         r"""Get the cells in conflict with a given point and the facets bounding
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_121get_conflicts_and_boundary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_120get_conflicts_and_boundary[] = "Get the cells in conflict with a given point and the facets bounding \n            the zone in conflict.\n\n        Args: \n            pos (:obj:`ndarray` of float64): x,y,z coordinates. \n            start (Delaunay3_cell): Cell to start list of facets at. \n\n        Returns: \n            tuple: :obj:`list` of Delaunay3_cells in conflict with pos and \n                :obj:`list` of Delaunay3_facets bounding the zone in conflict.\n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_121get_conflicts_and_boundary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_conflicts_and_boundary (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_start,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_start)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_conflicts_and_boundary", 1, 2, 2, 1); __PYX_ERR(0, 2834, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_conflicts_and_boundary") < 0)) __PYX_ERR(0, 2834, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_start = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_conflicts_and_boundary", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2834, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_conflicts_and_boundary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) __PYX_ERR(0, 2834, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_start), __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, 1, "start", 0))) __PYX_ERR(0, 2835, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_120get_conflicts_and_boundary(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_pos, __pyx_v_start);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_120get_conflicts_and_boundary(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_start) {
  std::pair<std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ,std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> >  __pyx_v_cv;
  PyObject *__pyx_v_out_facets = 0;
  PyObject *__pyx_v_out_cells = 0;
  __pyx_t_5numpy_uint32_t __pyx_v_i;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *__pyx_v_c = 0;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *__pyx_v_f = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ::size_type __pyx_t_4;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ::size_type __pyx_t_5;
  __pyx_t_5numpy_uint32_t __pyx_t_6;
  int __pyx_t_7;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ::size_type __pyx_t_8;
  std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ::size_type __pyx_t_9;
  __Pyx_RefNannySetupContext("get_conflicts_and_boundary", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2834, __pyx_L1_error)
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2848
 * 
 *         """
 *         assert(len(pos) == 3)             # <<<<<<<<<<<<<<
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2848, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2848, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2851
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2852
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             cv = self.T.find_conflicts(&pos[0], start.x)             # <<<<<<<<<<<<<<
 *         cdef object out_facets = []
 *         cdef object out_cells = []
 */
        __pyx_t_2 = 0;
        __pyx_v_cv = __pyx_v_self->T->find_conflicts((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_pos.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_pos.diminfo[0].strides))), __pyx_v_start->x);
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2851
 *         cdef pair[vector[Delaunay_with_info_3[info_t].Cell],
 *                   vector[Delaunay_with_info_3[info_t].Facet]] cv
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2853
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []             # <<<<<<<<<<<<<<
 *         cdef object out_cells = []
 *         cdef np.uint32_t i
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_out_facets = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2854
 *             cv = self.T.find_conflicts(&pos[0], start.x)
 *         cdef object out_facets = []
 *         cdef object out_cells = []             # <<<<<<<<<<<<<<
 *         cdef np.uint32_t i
 *         cdef Delaunay3_cell c
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_out_cells = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2858
 *         cdef Delaunay3_cell c
 *         cdef Delaunay3_facet f
 *         for i in range(cv.first.size()):             # <<<<<<<<<<<<<<
 *             c = Delaunay3_cell()
 *             c.assign(self.T, cv.first[i])
 */
  __pyx_t_4 = __pyx_v_cv.first.size();
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2859
 *         cdef Delaunay3_facet f
 *         for i in range(cv.first.size()):
 *             c = Delaunay3_cell()             # <<<<<<<<<<<<<<
 *             c.assign(self.T, cv.first[i])
 *             out_cells.append(c)
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2859, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_c, ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2860
 *         for i in range(cv.first.size()):
 *             c = Delaunay3_cell()
 *             c.assign(self.T, cv.first[i])             # <<<<<<<<<<<<<<
 *             out_cells.append(c)
 *         for i in range(cv.second.size()):
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_v_c->__pyx_vtab)->assign(__pyx_v_c, __pyx_v_self->T, (__pyx_v_cv.first[__pyx_v_i]));

    /* "cgal4py/delaunay/delaunay3.pyx":2861
 *             c = Delaunay3_cell()
 *             c.assign(self.T, cv.first[i])
 *             out_cells.append(c)             # <<<<<<<<<<<<<<
 *         for i in range(cv.second.size()):
 *             f = Delaunay3_facet()
 */
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_v_out_cells, ((PyObject *)__pyx_v_c)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 2861, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2862
 *             c.assign(self.T, cv.first[i])
 *             out_cells.append(c)
 *         for i in range(cv.second.size()):             # <<<<<<<<<<<<<<
 *             f = Delaunay3_facet()
 *             f.assign(self.T, cv.second[i])
 */
  __pyx_t_8 = __pyx_v_cv.second.size();
  __pyx_t_9 = __pyx_t_8;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_9; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2863
 *             out_cells.append(c)
 *         for i in range(cv.second.size()):
 *             f = Delaunay3_facet()             # <<<<<<<<<<<<<<
 *             f.assign(self.T, cv.second[i])
 *             out_facets.append(f)
 */
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2863, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_f, ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2864
 *         for i in range(cv.second.size()):
 *             f = Delaunay3_facet()
 *             f.assign(self.T, cv.second[i])             # <<<<<<<<<<<<<<
 *             out_facets.append(f)
 *         return out_cells, out_facets
 */
    ((struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)__pyx_v_f->__pyx_vtab)->assign(__pyx_v_f, __pyx_v_self->T, (__pyx_v_cv.second[__pyx_v_i]));

    /* "cgal4py/delaunay/delaunay3.pyx":2865
 *             f = Delaunay3_facet()
 *             f.assign(self.T, cv.second[i])
 *             out_facets.append(f)             # <<<<<<<<<<<<<<
 *         return out_cells, out_facets
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_v_out_facets, ((PyObject *)__pyx_v_f)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 2865, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2866
 *             f.assign(self.T, cv.second[i])
 *             out_facets.append(f)
 *         return out_cells, out_facets             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_out_cells);
  __Pyx_GIVEREF(__pyx_v_out_cells);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_out_cells);
  __Pyx_INCREF(__pyx_v_out_facets);
  __Pyx_GIVEREF(__pyx_v_out_facets);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_out_facets);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2834
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def get_conflicts_and_boundary(self, np.ndarray[np.float64_t, ndim=1] pos,             # <<<<<<<<<<<<<<
 *                                    Delaunay3_cell start):
 *         r"""Get the cells in conflict with a given point and the facets bounding
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.get_conflicts_and_boundary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_out_facets);
  __Pyx_XDECREF(__pyx_v_out_cells);
  __Pyx_XDECREF((PyObject *)__pyx_v_c);
  __Pyx_XDECREF((PyObject *)__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2870
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def outgoing_points(self,             # <<<<<<<<<<<<<<
 *                         np.ndarray[np.float64_t, ndim=2] left_edges,
 *                         np.ndarray[np.float64_t, ndim=2] right_edges):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_123outgoing_points(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_122outgoing_points[] = "Get the indices of points in tets that intersect a set of boxes.\n\n        Args: \n            left_edges (np.ndarray of float64): (m, n) array of m box mins in n \n                dimensions. \n            right_edges (np.ndarray of float64): (m, n) array of m box maxs in n \n                dimensions. \n\n        Returns: \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_123outgoing_points(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_left_edges = 0;
  PyArrayObject *__pyx_v_right_edges = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outgoing_points (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_left_edges,&__pyx_n_s_right_edges,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_left_edges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_right_edges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outgoing_points", 1, 2, 2, 1); __PYX_ERR(0, 2870, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outgoing_points") < 0)) __PYX_ERR(0, 2870, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_left_edges = ((PyArrayObject *)values[0]);
    __pyx_v_right_edges = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outgoing_points", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2870, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.outgoing_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_left_edges), __pyx_ptype_5numpy_ndarray, 1, "left_edges", 0))) __PYX_ERR(0, 2871, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_right_edges), __pyx_ptype_5numpy_ndarray, 1, "right_edges", 0))) __PYX_ERR(0, 2872, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_122outgoing_points(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_left_edges, __pyx_v_right_edges);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_122outgoing_points(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_left_edges, PyArrayObject *__pyx_v_right_edges) {
  uint64_t __pyx_v_nbox;
  std::vector<std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> >  __pyx_v_vout;
  uint64_t __pyx_v_i;
  uint64_t __pyx_v_j;
  PyObject *__pyx_v_out = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_left_edges;
  __Pyx_Buffer __pyx_pybuffer_left_edges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_right_edges;
  __Pyx_Buffer __pyx_pybuffer_right_edges;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  std::vector<std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> > ::size_type __pyx_t_7;
  std::vector<std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> > ::size_type __pyx_t_8;
  uint64_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::size_type __pyx_t_15;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::size_type __pyx_t_16;
  uint64_t __pyx_t_17;
  __Pyx_RefNannySetupContext("outgoing_points", 0);
  __pyx_pybuffer_left_edges.pybuffer.buf = NULL;
  __pyx_pybuffer_left_edges.refcount = 0;
  __pyx_pybuffernd_left_edges.data = NULL;
  __pyx_pybuffernd_left_edges.rcbuffer = &__pyx_pybuffer_left_edges;
  __pyx_pybuffer_right_edges.pybuffer.buf = NULL;
  __pyx_pybuffer_right_edges.refcount = 0;
  __pyx_pybuffernd_right_edges.data = NULL;
  __pyx_pybuffernd_right_edges.rcbuffer = &__pyx_pybuffer_right_edges;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_left_edges.rcbuffer->pybuffer, (PyObject*)__pyx_v_left_edges, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2870, __pyx_L1_error)
  }
  __pyx_pybuffernd_left_edges.diminfo[0].strides = __pyx_pybuffernd_left_edges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_left_edges.diminfo[0].shape = __pyx_pybuffernd_left_edges.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_left_edges.diminfo[1].strides = __pyx_pybuffernd_left_edges.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_left_edges.diminfo[1].shape = __pyx_pybuffernd_left_edges.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_right_edges.rcbuffer->pybuffer, (PyObject*)__pyx_v_right_edges, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2870, __pyx_L1_error)
  }
  __pyx_pybuffernd_right_edges.diminfo[0].strides = __pyx_pybuffernd_right_edges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_right_edges.diminfo[0].shape = __pyx_pybuffernd_right_edges.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_right_edges.diminfo[1].strides = __pyx_pybuffernd_right_edges.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_right_edges.diminfo[1].shape = __pyx_pybuffernd_right_edges.rcbuffer->pybuffer.shape[1];

  /* "cgal4py/delaunay/delaunay3.pyx":2884
 * 
 *         """
 *         assert(left_edges.shape[1] == 3)             # <<<<<<<<<<<<<<
 *         assert(left_edges.shape[0] == right_edges.shape[0])
 *         assert(left_edges.shape[1] == right_edges.shape[1])
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_left_edges->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2884, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2885
 *         """
 *         assert(left_edges.shape[1] == 3)
 *         assert(left_edges.shape[0] == right_edges.shape[0])             # <<<<<<<<<<<<<<
 *         assert(left_edges.shape[1] == right_edges.shape[1])
 *         cdef uint64_t nbox = <uint64_t>left_edges.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_left_edges->dimensions[0]) == (__pyx_v_right_edges->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2885, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2886
 *         assert(left_edges.shape[1] == 3)
 *         assert(left_edges.shape[0] == right_edges.shape[0])
 *         assert(left_edges.shape[1] == right_edges.shape[1])             # <<<<<<<<<<<<<<
 *         cdef uint64_t nbox = <uint64_t>left_edges.shape[0]
 *         cdef vector[vector[info_t]] vout
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_left_edges->dimensions[1]) == (__pyx_v_right_edges->dimensions[1])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2886, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2887
 *         assert(left_edges.shape[0] == right_edges.shape[0])
 *         assert(left_edges.shape[1] == right_edges.shape[1])
 *         cdef uint64_t nbox = <uint64_t>left_edges.shape[0]             # <<<<<<<<<<<<<<
 *         cdef vector[vector[info_t]] vout
 *         if (nbox > 0):
 */
  __pyx_v_nbox = ((uint64_t)(__pyx_v_left_edges->dimensions[0]));

  /* "cgal4py/delaunay/delaunay3.pyx":2889
 *         cdef uint64_t nbox = <uint64_t>left_edges.shape[0]
 *         cdef vector[vector[info_t]] vout
 *         if (nbox > 0):             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 vout = self.T.outgoing_points(nbox,
 */
  __pyx_t_1 = ((__pyx_v_nbox > 0) != 0);
  if (__pyx_t_1) {

    /* "cgal4py/delaunay/delaunay3.pyx":2890
 *         cdef vector[vector[info_t]] vout
 *         if (nbox > 0):
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 vout = self.T.outgoing_points(nbox,
 *                                               &left_edges[0,0],
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save;
        Py_UNBLOCK_THREADS
        __Pyx_FastGIL_Remember();
        #endif
        /*try:*/ {

          /* "cgal4py/delaunay/delaunay3.pyx":2892
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 vout = self.T.outgoing_points(nbox,
 *                                               &left_edges[0,0],             # <<<<<<<<<<<<<<
 *                                               &right_edges[0,0])
 *         assert(vout.size() == nbox)
 */
          __pyx_t_2 = 0;
          __pyx_t_3 = 0;

          /* "cgal4py/delaunay/delaunay3.pyx":2893
 *                 vout = self.T.outgoing_points(nbox,
 *                                               &left_edges[0,0],
 *                                               &right_edges[0,0])             # <<<<<<<<<<<<<<
 *         assert(vout.size() == nbox)
 *         # Transfer values to array
 */
          __pyx_t_4 = 0;
          __pyx_t_5 = 0;

          /* "cgal4py/delaunay/delaunay3.pyx":2891
 *         if (nbox > 0):
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 vout = self.T.outgoing_points(nbox,             # <<<<<<<<<<<<<<
 *                                               &left_edges[0,0],
 *                                               &right_edges[0,0])
 */
          __pyx_v_vout = ((std::vector<std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> > )__pyx_v_self->T->outgoing_points(__pyx_v_nbox, (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_left_edges.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_left_edges.diminfo[0].strides, __pyx_t_3, __pyx_pybuffernd_left_edges.diminfo[1].strides))), (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_right_edges.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_right_edges.diminfo[0].strides, __pyx_t_5, __pyx_pybuffernd_right_edges.diminfo[1].strides)))));
        }

        /* "cgal4py/delaunay/delaunay3.pyx":2890
 *         cdef vector[vector[info_t]] vout
 *         if (nbox > 0):
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *                 vout = self.T.outgoing_points(nbox,
 *                                               &left_edges[0,0],
 */
        /*finally:*/ {
          /*normal exit:*/{
            #ifdef WITH_THREAD
            __Pyx_FastGIL_Forget();
            Py_BLOCK_THREADS
            #endif
            goto __pyx_L6;
          }
          __pyx_L6:;
        }
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2889
 *         cdef uint64_t nbox = <uint64_t>left_edges.shape[0]
 *         cdef vector[vector[info_t]] vout
 *         if (nbox > 0):             # <<<<<<<<<<<<<<
 *             with nogil, cython.boundscheck(False), cython.wraparound(False):
 *                 vout = self.T.outgoing_points(nbox,
 */
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2894
 *                                               &left_edges[0,0],
 *                                               &right_edges[0,0])
 *         assert(vout.size() == nbox)             # <<<<<<<<<<<<<<
 *         # Transfer values to array
 *         cdef uint64_t i, j
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_vout.size() == __pyx_v_nbox) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2894, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2897
 *         # Transfer values to array
 *         cdef uint64_t i, j
 *         cdef object out = [None for i in range(vout.size())]             # <<<<<<<<<<<<<<
 *         for i in range(vout.size()):
 *             out[i] = np.empty(vout[i].size(), np_info)
 */
  __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __pyx_v_vout.size();
  __pyx_t_8 = __pyx_t_7;
  for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
    __pyx_v_i = __pyx_t_9;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_6, (PyObject*)Py_None))) __PYX_ERR(0, 2897, __pyx_L1_error)
  }
  __pyx_v_out = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2898
 *         cdef uint64_t i, j
 *         cdef object out = [None for i in range(vout.size())]
 *         for i in range(vout.size()):             # <<<<<<<<<<<<<<
 *             out[i] = np.empty(vout[i].size(), np_info)
 *             for j in range(vout[i].size()):
 */
  __pyx_t_7 = __pyx_v_vout.size();
  __pyx_t_8 = __pyx_t_7;
  for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
    __pyx_v_i = __pyx_t_9;

    /* "cgal4py/delaunay/delaunay3.pyx":2899
 *         cdef object out = [None for i in range(vout.size())]
 *         for i in range(vout.size()):
 *             out[i] = np.empty(vout[i].size(), np_info)             # <<<<<<<<<<<<<<
 *             for j in range(vout[i].size()):
 *                 out[i][j] = vout[i][j]
 */
    __pyx_t_10 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_empty); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyInt_FromSize_t((__pyx_v_vout[__pyx_v_i]).size()); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_12 = NULL;
    __pyx_t_13 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
        __pyx_t_13 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_11)) {
      PyObject *__pyx_temp[3] = {__pyx_t_12, __pyx_t_10, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_11, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2899, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_11)) {
      PyObject *__pyx_temp[3] = {__pyx_t_12, __pyx_t_10, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_11, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2899, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else
    #endif
    {
      __pyx_t_14 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2899, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      if (__pyx_t_12) {
        __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_12); __pyx_t_12 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_13, __pyx_t_10);
      __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_13, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __pyx_t_10 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_11, __pyx_t_14, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2899, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(__Pyx_SetItemInt(__pyx_v_out, __pyx_v_i, __pyx_t_6, uint64_t, 0, __Pyx_PyInt_From_uint64_t, 0, 0, 0) < 0)) __PYX_ERR(0, 2899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2900
 *         for i in range(vout.size()):
 *             out[i] = np.empty(vout[i].size(), np_info)
 *             for j in range(vout[i].size()):             # <<<<<<<<<<<<<<
 *                 out[i][j] = vout[i][j]
 *         return out
 */
    __pyx_t_15 = (__pyx_v_vout[__pyx_v_i]).size();
    __pyx_t_16 = __pyx_t_15;
    for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
      __pyx_v_j = __pyx_t_17;

      /* "cgal4py/delaunay/delaunay3.pyx":2901
 *             out[i] = np.empty(vout[i].size(), np_info)
 *             for j in range(vout[i].size()):
 *                 out[i][j] = vout[i][j]             # <<<<<<<<<<<<<<
 *         return out
 * 
 */
      __pyx_t_6 = __Pyx_PyInt_From_uint32_t(((__pyx_v_vout[__pyx_v_i])[__pyx_v_j])); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2901, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_out, __pyx_v_i, uint64_t, 0, __Pyx_PyInt_From_uint64_t, 0, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2901, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (unlikely(__Pyx_SetItemInt(__pyx_t_11, __pyx_v_j, __pyx_t_6, uint64_t, 0, __Pyx_PyInt_From_uint64_t, 0, 0, 0) < 0)) __PYX_ERR(0, 2901, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2902
 *             for j in range(vout[i].size()):
 *                 out[i][j] = vout[i][j]
 *         return out             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2870
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def outgoing_points(self,             # <<<<<<<<<<<<<<
 *                         np.ndarray[np.float64_t, ndim=2] left_edges,
 *                         np.ndarray[np.float64_t, ndim=2] right_edges):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_14);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_left_edges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_right_edges.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.outgoing_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_left_edges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_right_edges.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":2906
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def boundary_points(self,             # <<<<<<<<<<<<<<
 *                         np.ndarray[np.float64_t, ndim=1] left_edge,
 *                         np.ndarray[np.float64_t, ndim=1] right_edge,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_125boundary_points(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_124boundary_points[] = "Get the indices of points in tets that border a box. \n\n        Args:                                                                                                                                                                      \n            left_edge (`np.ndarray` of `np.float64_t`): Minimum boundary of \n                box in each dimension. \n            right_edge (`np.ndarray` of `np.float64_t`): Maximum boundary of \n                box in each dimension. \n            periodic (bool): True if the domain is periodic, False otherwise. \n\n        Returns: \n            tuple: 3 groupings of indices: \n                lind: list of np.ndarray indices of points in tets bordering the \n                    left edge of the box in each direction. \n                rind: list of np.ndarray indices of points in tets bordering the \n                    right edge of the box in each direction. \n                iind: indices of points in tets that are infinite. This will be \n                    empty if `periodic == True`. \n\n        ";
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_125boundary_points(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_left_edge = 0;
  PyArrayObject *__pyx_v_right_edge = 0;
  PyBoolObject *__pyx_v_periodic = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("boundary_points (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_left_edge,&__pyx_n_s_right_edge,&__pyx_n_s_periodic,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_left_edge)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_right_edge)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("boundary_points", 1, 3, 3, 1); __PYX_ERR(0, 2906, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_periodic)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("boundary_points", 1, 3, 3, 2); __PYX_ERR(0, 2906, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "boundary_points") < 0)) __PYX_ERR(0, 2906, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_left_edge = ((PyArrayObject *)values[0]);
    __pyx_v_right_edge = ((PyArrayObject *)values[1]);
    __pyx_v_periodic = ((PyBoolObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("boundary_points", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2906, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.boundary_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_left_edge), __pyx_ptype_5numpy_ndarray, 1, "left_edge", 0))) __PYX_ERR(0, 2907, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_right_edge), __pyx_ptype_5numpy_ndarray, 1, "right_edge", 0))) __PYX_ERR(0, 2908, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_periodic), __pyx_ptype_7cpython_4bool_bool, 1, "periodic", 0))) __PYX_ERR(0, 2909, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_124boundary_points(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), __pyx_v_left_edge, __pyx_v_right_edge, __pyx_v_periodic);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_124boundary_points(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyArrayObject *__pyx_v_left_edge, PyArrayObject *__pyx_v_right_edge, PyBoolObject *__pyx_v_periodic) {
  int __pyx_v_i;
  int __pyx_v_j;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_lr;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_lx;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_ly;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_lz;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_rx;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_ry;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_rz;
  std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  __pyx_v_alln;
  bool __pyx_v_cperiodic;
  PyObject *__pyx_v_lind = 0;
  PyObject *__pyx_v_rind = 0;
  __pyx_t_7cgal4py_8delaunay_9delaunay3_info_t __pyx_v_iN;
  PyArrayObject *__pyx_v_iind = 0;
  PyArrayObject *__pyx_v_lr_arr = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_iind;
  __Pyx_Buffer __pyx_pybuffer_iind;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_left_edge;
  __Pyx_Buffer __pyx_pybuffer_left_edge;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_lr_arr;
  __Pyx_Buffer __pyx_pybuffer_lr_arr;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_right_edge;
  __Pyx_Buffer __pyx_pybuffer_right_edge;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  bool __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  PyArrayObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_t_17;
  PyArrayObject *__pyx_t_18 = NULL;
  __Pyx_RefNannySetupContext("boundary_points", 0);
  __pyx_pybuffer_iind.pybuffer.buf = NULL;
  __pyx_pybuffer_iind.refcount = 0;
  __pyx_pybuffernd_iind.data = NULL;
  __pyx_pybuffernd_iind.rcbuffer = &__pyx_pybuffer_iind;
  __pyx_pybuffer_lr_arr.pybuffer.buf = NULL;
  __pyx_pybuffer_lr_arr.refcount = 0;
  __pyx_pybuffernd_lr_arr.data = NULL;
  __pyx_pybuffernd_lr_arr.rcbuffer = &__pyx_pybuffer_lr_arr;
  __pyx_pybuffer_left_edge.pybuffer.buf = NULL;
  __pyx_pybuffer_left_edge.refcount = 0;
  __pyx_pybuffernd_left_edge.data = NULL;
  __pyx_pybuffernd_left_edge.rcbuffer = &__pyx_pybuffer_left_edge;
  __pyx_pybuffer_right_edge.pybuffer.buf = NULL;
  __pyx_pybuffer_right_edge.refcount = 0;
  __pyx_pybuffernd_right_edge.data = NULL;
  __pyx_pybuffernd_right_edge.rcbuffer = &__pyx_pybuffer_right_edge;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_left_edge.rcbuffer->pybuffer, (PyObject*)__pyx_v_left_edge, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2906, __pyx_L1_error)
  }
  __pyx_pybuffernd_left_edge.diminfo[0].strides = __pyx_pybuffernd_left_edge.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_left_edge.diminfo[0].shape = __pyx_pybuffernd_left_edge.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_right_edge.rcbuffer->pybuffer, (PyObject*)__pyx_v_right_edge, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2906, __pyx_L1_error)
  }
  __pyx_pybuffernd_right_edge.diminfo[0].strides = __pyx_pybuffernd_right_edge.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_right_edge.diminfo[0].shape = __pyx_pybuffernd_right_edge.rcbuffer->pybuffer.shape[0];

  /* "cgal4py/delaunay/delaunay3.pyx":2929
 * 
 *         """
 *         assert(len(left_edge)==3)             # <<<<<<<<<<<<<<
 *         assert(len(right_edge)==3)
 *         global np_info
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_left_edge)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2929, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2929, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2930
 *         """
 *         assert(len(left_edge)==3)
 *         assert(len(right_edge)==3)             # <<<<<<<<<<<<<<
 *         global np_info
 *         cdef int i, j, k
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_right_edge)); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2930, __pyx_L1_error)
    if (unlikely(!((__pyx_t_1 == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 2930, __pyx_L1_error)
    }
  }
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":2934
 *         cdef int i, j, k
 *         cdef vector[info_t] lr, lx, ly, lz, rx, ry, rz, alln
 *         cdef cbool cperiodic = <cbool>periodic             # <<<<<<<<<<<<<<
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.boundary_points(&left_edge[0], &right_edge[0], cperiodic,
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_periodic)); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2934, __pyx_L1_error)
  __pyx_v_cperiodic = ((bool)__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2935
 *         cdef vector[info_t] lr, lx, ly, lz, rx, ry, rz, alln
 *         cdef cbool cperiodic = <cbool>periodic
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.boundary_points(&left_edge[0], &right_edge[0], cperiodic,
 *                                    lx, ly, lz, rx, ry, lz, alln)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "cgal4py/delaunay/delaunay3.pyx":2936
 *         cdef cbool cperiodic = <cbool>periodic
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.boundary_points(&left_edge[0], &right_edge[0], cperiodic,             # <<<<<<<<<<<<<<
 *                                    lx, ly, lz, rx, ry, lz, alln)
 *         # Get counts to preallocate
 */
        __pyx_t_3 = 0;
        __pyx_t_4 = 0;

        /* "cgal4py/delaunay/delaunay3.pyx":2937
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 *             self.T.boundary_points(&left_edge[0], &right_edge[0], cperiodic,
 *                                    lx, ly, lz, rx, ry, lz, alln)             # <<<<<<<<<<<<<<
 *         # Get counts to preallocate
 *         cdef object lind = [None, None, None]
 */
        __pyx_v_self->T->boundary_points((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_left_edge.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_left_edge.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_float64_t *, __pyx_pybuffernd_right_edge.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_right_edge.diminfo[0].strides))), __pyx_v_cperiodic, ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_lx), ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_ly), ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_lz), ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_rx), ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_ry), ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_lz), ((std::vector<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  &)__pyx_v_alln));
      }

      /* "cgal4py/delaunay/delaunay3.pyx":2935
 *         cdef vector[info_t] lr, lx, ly, lz, rx, ry, rz, alln
 *         cdef cbool cperiodic = <cbool>periodic
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):             # <<<<<<<<<<<<<<
 *             self.T.boundary_points(&left_edge[0], &right_edge[0], cperiodic,
 *                                    lx, ly, lz, rx, ry, lz, alln)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L5:;
      }
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2939
 *                                    lx, ly, lz, rx, ry, lz, alln)
 *         # Get counts to preallocate
 *         cdef object lind = [None, None, None]             # <<<<<<<<<<<<<<
 *         cdef object rind = [None, None, None]
 *         cdef info_t iN = 0
 */
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_5, 0, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_5, 1, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_5, 2, Py_None);
  __pyx_v_lind = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2940
 *         # Get counts to preallocate
 *         cdef object lind = [None, None, None]
 *         cdef object rind = [None, None, None]             # <<<<<<<<<<<<<<
 *         cdef info_t iN = 0
 *         for i in range(3):
 */
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_5, 0, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_5, 1, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyList_SET_ITEM(__pyx_t_5, 2, Py_None);
  __pyx_v_rind = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2941
 *         cdef object lind = [None, None, None]
 *         cdef object rind = [None, None, None]
 *         cdef info_t iN = 0             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             if   i == 0: lr = lx
 */
  __pyx_v_iN = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2942
 *         cdef object rind = [None, None, None]
 *         cdef info_t iN = 0
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             if   i == 0: lr = lx
 *             elif i == 1: lr = ly
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2943
 *         cdef info_t iN = 0
 *         for i in range(3):
 *             if   i == 0: lr = lx             # <<<<<<<<<<<<<<
 *             elif i == 1: lr = ly
 *             elif i == 2: lr = lz
 */
    switch (__pyx_v_i) {
      case 0:
      __pyx_v_lr = __pyx_v_lx;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2944
 *         for i in range(3):
 *             if   i == 0: lr = lx
 *             elif i == 1: lr = ly             # <<<<<<<<<<<<<<
 *             elif i == 2: lr = lz
 *             iN = <info_t>lr.size()
 */
      case 1:
      __pyx_v_lr = __pyx_v_ly;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2945
 *             if   i == 0: lr = lx
 *             elif i == 1: lr = ly
 *             elif i == 2: lr = lz             # <<<<<<<<<<<<<<
 *             iN = <info_t>lr.size()
 *             lind[i] = np.zeros(iN, np_info)
 */
      case 2:
      __pyx_v_lr = __pyx_v_lz;
      break;
      default: break;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2946
 *             elif i == 1: lr = ly
 *             elif i == 2: lr = lz
 *             iN = <info_t>lr.size()             # <<<<<<<<<<<<<<
 *             lind[i] = np.zeros(iN, np_info)
 *         for i in range(3):
 */
    __pyx_v_iN = ((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_v_lr.size());

    /* "cgal4py/delaunay/delaunay3.pyx":2947
 *             elif i == 2: lr = lz
 *             iN = <info_t>lr.size()
 *             lind[i] = np.zeros(iN, np_info)             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             if   i == 0: lr = rx
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyInt_From_uint32_t(__pyx_v_iN); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_10 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_t_7, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2947, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_t_7, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2947, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    {
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2947, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __pyx_t_7 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2947, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__Pyx_SetItemInt(__pyx_v_lind, __pyx_v_i, __pyx_t_5, int, 1, __Pyx_PyInt_From_int, 0, 0, 0) < 0)) __PYX_ERR(0, 2947, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2948
 *             iN = <info_t>lr.size()
 *             lind[i] = np.zeros(iN, np_info)
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             if   i == 0: lr = rx
 *             elif i == 1: lr = ry
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2949
 *             lind[i] = np.zeros(iN, np_info)
 *         for i in range(3):
 *             if   i == 0: lr = rx             # <<<<<<<<<<<<<<
 *             elif i == 1: lr = ry
 *             elif i == 2: lr = rz
 */
    switch (__pyx_v_i) {
      case 0:
      __pyx_v_lr = __pyx_v_rx;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2950
 *         for i in range(3):
 *             if   i == 0: lr = rx
 *             elif i == 1: lr = ry             # <<<<<<<<<<<<<<
 *             elif i == 2: lr = rz
 *             iN = <info_t>lr.size()
 */
      case 1:
      __pyx_v_lr = __pyx_v_ry;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2951
 *             if   i == 0: lr = rx
 *             elif i == 1: lr = ry
 *             elif i == 2: lr = rz             # <<<<<<<<<<<<<<
 *             iN = <info_t>lr.size()
 *             rind[i] = np.zeros(iN, np_info)
 */
      case 2:
      __pyx_v_lr = __pyx_v_rz;
      break;
      default: break;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2952
 *             elif i == 1: lr = ry
 *             elif i == 2: lr = rz
 *             iN = <info_t>lr.size()             # <<<<<<<<<<<<<<
 *             rind[i] = np.zeros(iN, np_info)
 *         # Fill in
 */
    __pyx_v_iN = ((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_v_lr.size());

    /* "cgal4py/delaunay/delaunay3.pyx":2953
 *             elif i == 2: lr = rz
 *             iN = <info_t>lr.size()
 *             rind[i] = np.zeros(iN, np_info)             # <<<<<<<<<<<<<<
 *         # Fill in
 *         cdef np.ndarray[info_t] iind
 */
    __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_zeros); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyInt_From_uint32_t(__pyx_v_iN); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
        __pyx_t_10 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_11)) {
      PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_8, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_11, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2953, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_11)) {
      PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_8, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_11, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2953, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_10, __pyx_t_8);
      __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_10, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_11, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(__Pyx_SetItemInt(__pyx_v_rind, __pyx_v_i, __pyx_t_5, int, 1, __Pyx_PyInt_From_int, 0, 0, 0) < 0)) __PYX_ERR(0, 2953, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2957
 *         cdef np.ndarray[info_t] iind
 *         cdef np.ndarray[info_t] lr_arr
 *         iN = alln.size()             # <<<<<<<<<<<<<<
 *         iind = np.array([alln[j] for j in range(<int>iN)], np_info)
 *         for i in range(3):
 */
  __pyx_v_iN = __pyx_v_alln.size();

  /* "cgal4py/delaunay/delaunay3.pyx":2958
 *         cdef np.ndarray[info_t] lr_arr
 *         iN = alln.size()
 *         iind = np.array([alln[j] for j in range(<int>iN)], np_info)             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             if   i == 0: lr = lx
 */
  __pyx_t_11 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_array); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_t_11 = PyList_New(0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_6 = ((int)__pyx_v_iN);
  __pyx_t_10 = __pyx_t_6;
  for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
    __pyx_v_j = __pyx_t_12;
    __pyx_t_8 = __Pyx_PyInt_From_uint32_t((__pyx_v_alln[__pyx_v_j])); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_11, (PyObject*)__pyx_t_8))) __PYX_ERR(0, 2958, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __pyx_t_8 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_9)) {
    PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_t_11, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2958, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
    PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_t_11, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
    __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2958, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_8) {
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8); __pyx_t_8 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_11);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_11);
    __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
    __pyx_t_11 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2958, __pyx_L1_error)
  __pyx_t_13 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_iind.rcbuffer->pybuffer);
    __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_iind.rcbuffer->pybuffer, (PyObject*)__pyx_t_13, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_6 < 0)) {
      PyErr_Fetch(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_iind.rcbuffer->pybuffer, (PyObject*)__pyx_v_iind, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_14); Py_XDECREF(__pyx_t_15); Py_XDECREF(__pyx_t_16);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_14, __pyx_t_15, __pyx_t_16);
      }
      __pyx_t_14 = __pyx_t_15 = __pyx_t_16 = 0;
    }
    __pyx_pybuffernd_iind.diminfo[0].strides = __pyx_pybuffernd_iind.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_iind.diminfo[0].shape = __pyx_pybuffernd_iind.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 2958, __pyx_L1_error)
  }
  __pyx_t_13 = 0;
  __pyx_v_iind = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2959
 *         iN = alln.size()
 *         iind = np.array([alln[j] for j in range(<int>iN)], np_info)
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             if   i == 0: lr = lx
 *             elif i == 1: lr = ly
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2960
 *         iind = np.array([alln[j] for j in range(<int>iN)], np_info)
 *         for i in range(3):
 *             if   i == 0: lr = lx             # <<<<<<<<<<<<<<
 *             elif i == 1: lr = ly
 *             elif i == 2: lr = lz
 */
    switch (__pyx_v_i) {
      case 0:
      __pyx_v_lr = __pyx_v_lx;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2961
 *         for i in range(3):
 *             if   i == 0: lr = lx
 *             elif i == 1: lr = ly             # <<<<<<<<<<<<<<
 *             elif i == 2: lr = lz
 *             iN = <info_t>lr.size()
 */
      case 1:
      __pyx_v_lr = __pyx_v_ly;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2962
 *             if   i == 0: lr = lx
 *             elif i == 1: lr = ly
 *             elif i == 2: lr = lz             # <<<<<<<<<<<<<<
 *             iN = <info_t>lr.size()
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 */
      case 2:
      __pyx_v_lr = __pyx_v_lz;
      break;
      default: break;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2963
 *             elif i == 1: lr = ly
 *             elif i == 2: lr = lz
 *             iN = <info_t>lr.size()             # <<<<<<<<<<<<<<
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 *             lind[i] = lr_arr
 */
    __pyx_v_iN = ((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_v_lr.size());

    /* "cgal4py/delaunay/delaunay3.pyx":2964
 *             elif i == 2: lr = lz
 *             iN = <info_t>lr.size()
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)             # <<<<<<<<<<<<<<
 *             lind[i] = lr_arr
 *         for i in range(3):
 */
    __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_array); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyList_New(0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = ((int)__pyx_v_iN);
    __pyx_t_12 = __pyx_t_10;
    for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_12; __pyx_t_17+=1) {
      __pyx_v_j = __pyx_t_17;
      __pyx_t_11 = __Pyx_PyInt_From_uint32_t((__pyx_v_lr[__pyx_v_j])); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_9, (PyObject*)__pyx_t_11))) __PYX_ERR(0, 2964, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __pyx_t_11 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_10 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_7)) {
      PyObject *__pyx_temp[3] = {__pyx_t_11, __pyx_t_9, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2964, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
      PyObject *__pyx_temp[3] = {__pyx_t_11, __pyx_t_9, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2964, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_11) {
        __Pyx_GIVEREF(__pyx_t_11); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_11); __pyx_t_11 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_10, __pyx_t_9);
      __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_10, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __pyx_t_9 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2964, __pyx_L1_error)
    __pyx_t_18 = ((PyArrayObject *)__pyx_t_5);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer);
      __pyx_t_10 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer, (PyObject*)__pyx_t_18, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_10 < 0)) {
        PyErr_Fetch(&__pyx_t_16, &__pyx_t_15, &__pyx_t_14);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer, (PyObject*)__pyx_v_lr_arr, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_16); Py_XDECREF(__pyx_t_15); Py_XDECREF(__pyx_t_14);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_16, __pyx_t_15, __pyx_t_14);
        }
        __pyx_t_16 = __pyx_t_15 = __pyx_t_14 = 0;
      }
      __pyx_pybuffernd_lr_arr.diminfo[0].strides = __pyx_pybuffernd_lr_arr.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_lr_arr.diminfo[0].shape = __pyx_pybuffernd_lr_arr.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 2964, __pyx_L1_error)
    }
    __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_lr_arr, ((PyArrayObject *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2965
 *             iN = <info_t>lr.size()
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 *             lind[i] = lr_arr             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             if   i == 0: lr = rx
 */
    if (unlikely(__Pyx_SetItemInt(__pyx_v_lind, __pyx_v_i, ((PyObject *)__pyx_v_lr_arr), int, 1, __Pyx_PyInt_From_int, 0, 0, 0) < 0)) __PYX_ERR(0, 2965, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2966
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 *             lind[i] = lr_arr
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             if   i == 0: lr = rx
 *             elif i == 1: lr = ry
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "cgal4py/delaunay/delaunay3.pyx":2967
 *             lind[i] = lr_arr
 *         for i in range(3):
 *             if   i == 0: lr = rx             # <<<<<<<<<<<<<<
 *             elif i == 1: lr = ry
 *             elif i == 2: lr = rz
 */
    switch (__pyx_v_i) {
      case 0:
      __pyx_v_lr = __pyx_v_rx;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2968
 *         for i in range(3):
 *             if   i == 0: lr = rx
 *             elif i == 1: lr = ry             # <<<<<<<<<<<<<<
 *             elif i == 2: lr = rz
 *             iN = <info_t>lr.size()
 */
      case 1:
      __pyx_v_lr = __pyx_v_ry;
      break;

      /* "cgal4py/delaunay/delaunay3.pyx":2969
 *             if   i == 0: lr = rx
 *             elif i == 1: lr = ry
 *             elif i == 2: lr = rz             # <<<<<<<<<<<<<<
 *             iN = <info_t>lr.size()
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 */
      case 2:
      __pyx_v_lr = __pyx_v_rz;
      break;
      default: break;
    }

    /* "cgal4py/delaunay/delaunay3.pyx":2970
 *             elif i == 1: lr = ry
 *             elif i == 2: lr = rz
 *             iN = <info_t>lr.size()             # <<<<<<<<<<<<<<
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 *             rind[i] = lr_arr
 */
    __pyx_v_iN = ((__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t)__pyx_v_lr.size());

    /* "cgal4py/delaunay/delaunay3.pyx":2971
 *             elif i == 2: lr = rz
 *             iN = <info_t>lr.size()
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)             # <<<<<<<<<<<<<<
 *             rind[i] = lr_arr
 *         # Return
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_array); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_10 = ((int)__pyx_v_iN);
    __pyx_t_12 = __pyx_t_10;
    for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_12; __pyx_t_17+=1) {
      __pyx_v_j = __pyx_t_17;
      __pyx_t_9 = __Pyx_PyInt_From_uint32_t((__pyx_v_lr[__pyx_v_j])); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_7, (PyObject*)__pyx_t_9))) __PYX_ERR(0, 2971, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __pyx_t_9 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_10 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_t_7, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2971, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_t_7, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2971, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    {
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_INCREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __Pyx_GIVEREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
      __pyx_t_7 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2971, __pyx_L1_error)
    __pyx_t_18 = ((PyArrayObject *)__pyx_t_5);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer);
      __pyx_t_10 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer, (PyObject*)__pyx_t_18, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_10 < 0)) {
        PyErr_Fetch(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer, (PyObject*)__pyx_v_lr_arr, &__Pyx_TypeInfo_nn___pyx_t_7cgal4py_8delaunay_9delaunay3_info_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_14); Py_XDECREF(__pyx_t_15); Py_XDECREF(__pyx_t_16);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_14, __pyx_t_15, __pyx_t_16);
        }
        __pyx_t_14 = __pyx_t_15 = __pyx_t_16 = 0;
      }
      __pyx_pybuffernd_lr_arr.diminfo[0].strides = __pyx_pybuffernd_lr_arr.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_lr_arr.diminfo[0].shape = __pyx_pybuffernd_lr_arr.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 2971, __pyx_L1_error)
    }
    __pyx_t_18 = 0;
    __Pyx_XDECREF_SET(__pyx_v_lr_arr, ((PyArrayObject *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "cgal4py/delaunay/delaunay3.pyx":2972
 *             iN = <info_t>lr.size()
 *             lr_arr = np.array([lr[j] for j in range(<int>iN)], np_info)
 *             rind[i] = lr_arr             # <<<<<<<<<<<<<<
 *         # Return
 *         return lind, rind, iind
 */
    if (unlikely(__Pyx_SetItemInt(__pyx_v_rind, __pyx_v_i, ((PyObject *)__pyx_v_lr_arr), int, 1, __Pyx_PyInt_From_int, 0, 0, 0) < 0)) __PYX_ERR(0, 2972, __pyx_L1_error)
  }

  /* "cgal4py/delaunay/delaunay3.pyx":2974
 *             rind[i] = lr_arr
 *         # Return
 *         return lind, rind, iind             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2974, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_lind);
  __Pyx_GIVEREF(__pyx_v_lind);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_lind);
  __Pyx_INCREF(__pyx_v_rind);
  __Pyx_GIVEREF(__pyx_v_rind);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_rind);
  __Pyx_INCREF(((PyObject *)__pyx_v_iind));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_iind));
  PyTuple_SET_ITEM(__pyx_t_5, 2, ((PyObject *)__pyx_v_iind));
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cgal4py/delaunay/delaunay3.pyx":2906
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def boundary_points(self,             # <<<<<<<<<<<<<<
 *                         np.ndarray[np.float64_t, ndim=1] left_edge,
 *                         np.ndarray[np.float64_t, ndim=1] right_edge,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_iind.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_left_edge.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_right_edge.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.boundary_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_iind.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_left_edge.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_lr_arr.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_right_edge.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_lind);
  __Pyx_XDECREF(__pyx_v_rind);
  __Pyx_XDECREF((PyObject *)__pyx_v_iind);
  __Pyx_XDECREF((PyObject *)__pyx_v_lr_arr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1741
 * 
 *     cdef Delaunay_with_info_3[info_t] *T
 *     cdef readonly int n             # <<<<<<<<<<<<<<
 *     cdef public object n_per_insert
 *     cdef readonly pybool _locked
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1n_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1n_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1n___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1n___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->n); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.n.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1742
 *     cdef Delaunay_with_info_3[info_t] *T
 *     cdef readonly int n
 *     cdef public object n_per_insert             # <<<<<<<<<<<<<<
 *     cdef readonly pybool _locked
 *     cdef public object _cache_to_clear_on_update
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->n_per_insert);
  __pyx_r = __pyx_v_self->n_per_insert;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_2__set__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_2__set__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->n_per_insert);
  __Pyx_DECREF(__pyx_v_self->n_per_insert);
  __pyx_v_self->n_per_insert = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_4__del__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_4__del__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->n_per_insert);
  __Pyx_DECREF(__pyx_v_self->n_per_insert);
  __pyx_v_self->n_per_insert = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1743
 *     cdef readonly int n
 *     cdef public object n_per_insert
 *     cdef readonly pybool _locked             # <<<<<<<<<<<<<<
 *     cdef public object _cache_to_clear_on_update
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_locked_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_locked_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_locked___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_locked___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_locked));
  __pyx_r = ((PyObject *)__pyx_v_self->_locked);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cgal4py/delaunay/delaunay3.pyx":1744
 *     cdef public object n_per_insert
 *     cdef readonly pybool _locked
 *     cdef public object _cache_to_clear_on_update             # <<<<<<<<<<<<<<
 * 
 *     @cython.boundscheck(False)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update___get__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update___get__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_cache_to_clear_on_update);
  __pyx_r = __pyx_v_self->_cache_to_clear_on_update;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_2__set__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_2__set__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_cache_to_clear_on_update);
  __Pyx_DECREF(__pyx_v_self->_cache_to_clear_on_update);
  __pyx_v_self->_cache_to_clear_on_update = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_4__del__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_4__del__(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_cache_to_clear_on_update);
  __Pyx_DECREF(__pyx_v_self->_cache_to_clear_on_update);
  __pyx_v_self->_cache_to_clear_on_update = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_127__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_127__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_126__reduce_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_126__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_129__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_129__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_128__setstate_cython__(((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cgal4py_8delaunay_9delaunay3_9Delaunay3_128__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__68, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cgal4py.delaunay.delaunay3.Delaunay3.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":215
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  char *__pyx_t_8;
  if (__pyx_v_info == NULL) {
    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
    return -1;
  }
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":222
 * 
 *             cdef int i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":223
 *             cdef int i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":225
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":227
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":228
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":227
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (unlikely(__pyx_t_1)) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 229, __pyx_L1_error)

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":227
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L7_bool_binop_done;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":232
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L7_bool_binop_done:;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (unlikely(__pyx_t_1)) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 233, __pyx_L1_error)

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":235
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":236
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":240
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyObject_Malloc((((sizeof(Py_ssize_t)) * 2) * ((size_t)__pyx_v_ndim))));

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":241
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":242
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    __pyx_t_5 = __pyx_t_4;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":243
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":244
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L9;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":246
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":247
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L9:;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":249
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":250
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":253
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":254
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             cdef int offset
 * 
 *             info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not PyDataType_HASFIELDS(descr):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *             info.obj = self
 * 
 *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(PyDataType_HASFIELDS(__pyx_v_descr) != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":260
 * 
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L15_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L14_bool_binop_done;
    }
    __pyx_L15_next_or:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":262
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L14_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L14_bool_binop_done:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (unlikely(__pyx_t_1)) {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 263, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 263, __pyx_L1_error)

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":264
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":265
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = ((char *)"B");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = ((char *)"h");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = ((char *)"H");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = ((char *)"i");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = ((char *)"I");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = ((char *)"l");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = ((char *)"L");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = ((char *)"q");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = ((char *)"Q");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = ((char *)"f");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = ((char *)"d");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = ((char *)"g");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":277
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = ((char *)"Zf");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = ((char *)"Zd");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = ((char *)"Zg");
      break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 282, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 282, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 282, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 282, __pyx_L1_error)
      break;
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *             info.obj = self
 * 
 *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":286
 *                 return
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)PyObject_Malloc(0xFF));

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":287
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":288
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":289
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_8 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_8 == ((char *)NULL))) __PYX_ERR(2, 289, __pyx_L1_error)
    __pyx_v_f = __pyx_t_8;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":292
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":215
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":295
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":296
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)
 */
    PyObject_Free(__pyx_v_info->format);

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":295
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":297
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":298
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    PyObject_Free(__pyx_v_info->strides);

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":297
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":775
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":776
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":775
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":778
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":779
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":778
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":781
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":782
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":781
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":784
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":785
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":784
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":787
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":788
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":787
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":790
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":791
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":792
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":791
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":790
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":796
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":801
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":802
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":805
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(2, 805, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 805, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":806
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 806, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(2, 806, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":807
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(2, 807, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 807, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(2, 807, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":809
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 809, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (unlikely(__pyx_t_6)) {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":810
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__72, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 810, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 810, __pyx_L1_error)

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":809
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":812
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":812
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (unlikely(__pyx_t_6)) {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":814
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 814, __pyx_L1_error)

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":812
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":824
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 824, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 824, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":825
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":826
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":829
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":832
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (unlikely(__pyx_t_6)) {

        /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 834, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 834, __pyx_L1_error)

        /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":837
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":838
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":839
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":843
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 843, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 843, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 843, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 844, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 844, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 844, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":845
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 845, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 845, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 845, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":846
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 846, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 846, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 846, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":847
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 847, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 847, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 847, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":848
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 848, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 848, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 848, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":849
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 849, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 849, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 849, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":850
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 850, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 850, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 850, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":851
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 851, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 851, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 851, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":852
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 852, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 852, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 852, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":853
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (likely(__pyx_t_6)) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":855
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 855, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 855, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 855, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":856
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":860
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(2, 860, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":805
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":861
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":796
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":979
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":980
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":979
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":982
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":983
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":984
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":985
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":987
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":988
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":989
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":988
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":991
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":987
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":996
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":997
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 998, __pyx_L3_error)

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":997
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":999
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 999, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1000
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__75, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1000, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1000, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":997
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":996
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1002
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1003
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1004
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1004, __pyx_L3_error)

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1003
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1005
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1005, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1006
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__76, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1006, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1006, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1003
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1002
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1008
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1009
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1010
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1010, __pyx_L3_error)

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1009
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1011
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1011, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1012
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__77, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1012, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1012, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1009
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1008
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex;
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_point(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5point_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_index(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5index_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_dual_volume(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11dual_volume_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_cell(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4cell_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex[] = {
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_5is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_4is_infinite},
  {"set_point", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_7set_point, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_6set_point},
  {"set_cell", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_9set_cell, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_8set_cell},
  {"incident_vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_11incident_vertices, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_10incident_vertices},
  {"incident_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_13incident_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_12incident_edges},
  {"incident_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_15incident_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_14incident_facets},
  {"incident_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_17incident_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_16incident_cells},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_19__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_21__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex[] = {
  {(char *)"point", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_point, 0, (char *)":obj:`ndarray` of :obj:`float64`: The cartesian (x,y,z) coordinates \n        of the vertex.", 0},
  {(char *)"index", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_index, 0, (char *)"info_t: The index of the vertex point in the input array.", 0},
  {(char *)"dual_volume", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_dual_volume, 0, (char *)"float64: The volume of the dual Voronoi cell. If the volume is \n        infinite, -1.0 is returned.", 0},
  {(char *)"cell", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_cell, 0, (char *)"Delaunay3_cell: Designated cell for this vertex.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_vertex", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_1__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation vertex.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this vertex belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].Vertex`): C++ vertex object \n            Direct interaction with this object is not recommended. \n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)o);
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_verts_iter();
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_vertex(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6vertex_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter[] = {
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_5is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_4is_infinite},
  {"increment", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_7increment, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_6increment},
  {"decrement", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_9decrement, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_8decrement},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter[] = {
  {(char *)"vertex", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_vertex, 0, (char *)"Delaunay3_vertex: Corresponding vertex object.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_vertex_iter", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation vertex iterator.\n\n    Args:\n        T (Delaunay3): Triangulation that this vertex belongs to.\n        vert (:obj:`str`, optional): String specifying the vertex that \n            should be referenced. Valid options include: \n            * 'all_begin': The first vertex in an iteration over all vertices.  \n            * 'all_end': The last vertex in an iteration over all vertices. \n \n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this vertex belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].All_verts_iter`): C++ vertex \n            object. Direct interaction with this object is not recommended. \n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_vertex_iter_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)o);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)Py_None); Py_INCREF(Py_None);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)Py_None); Py_INCREF(Py_None);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->x);
  Py_CLEAR(p->xstop);
  Py_CLEAR(p->finite);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)o;
  if (p->x) {
    e = (*v)(((PyObject *)p->x), a); if (e) return e;
  }
  if (p->xstop) {
    e = (*v)(((PyObject *)p->xstop), a); if (e) return e;
  }
  if (p->finite) {
    e = (*v)(((PyObject *)p->finite), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range *)o;
  tmp = ((PyObject*)p->x);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->xstop);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->finite);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_5__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_vertex_range", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Wrapper class for iterating over a range of triangulation vertices\n\n    Args:\n        xstart (Delaunay3_vertex_iter): The starting vertex.  \n        xstop (Delaunay3_vertex_iter): Final vertex that will end the iteration. \n        finite (:obj:`bool`, optional): If True, only finite verts are \n            iterated over. Otherwise, all verts are iterated over. Defaults \n            False.\n\n    Attributes:\n        x (Delaunay3_vertex_iter): The current vertex. \n        xstop (Delaunay3_vertex_iter): Final vertex that will end the iteration. \n        finite (bool): If True, only finite verts are iterater over. Otherwise\n            all verts are iterated over. \n\n    ", /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_3__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_vertex_range_5__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector;
  new((void*)&(p->v)) std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex> ();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->v);
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_3__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Delaunay3_vertex_vector = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Delaunay3_vertex_vector = {
  0, /*mp_length*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_vertex_vector", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Delaunay3_vertex_vector, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Delaunay3_vertex_vector, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a vector of vertices.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ triangulation object.\n            Direct interaction with this object is not recommended.\n        v (:obj:`vector[Delaunay_with_info_3[info_t].Vertex]`): Vector of C++ \n            vertices.\n        n (int): The number of vertices in the vector.\n        i (int): The index of the currect vertex.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_1__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_3__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge;
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_vertex1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex1_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_vertex2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7vertex2_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_cell(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4cell_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_ind1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind1_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_ind2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_4ind2_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_center(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6center_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_midpoint(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8midpoint_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_length(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6length_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge[] = {
  {"from_cell", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_1from_cell, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_from_cell},
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_7is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_6is_infinite},
  {"is_Gabriel", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_9is_Gabriel, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_8is_Gabriel},
  {"is_equivalent", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_11is_equivalent, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_10is_equivalent},
  {"vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_13vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_12vertex},
  {"incident_vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_15incident_vertices, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_14incident_vertices},
  {"incident_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_17incident_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_16incident_edges},
  {"incident_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_19incident_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_18incident_facets},
  {"incident_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_21incident_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_20incident_cells},
  {"side", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_23side, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_22side},
  {"flip", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_25flip, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_24flip},
  {"flip_flippable", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_27flip_flippable, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_26flip_flippable},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_29__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_31__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge[] = {
  {(char *)"vertex1", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_vertex1, 0, (char *)"Delaunay3_vertex: The first vertex in the edge.", 0},
  {(char *)"vertex2", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_vertex2, 0, (char *)"Delaunay3_vertex: The second vertex in the edge.", 0},
  {(char *)"cell", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_cell, 0, (char *)"Delaunay3_cell: The cell this edge is assigned to.", 0},
  {(char *)"ind1", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_ind1, 0, (char *)"int: The index of the 1st vertex of this edge in its cell.", 0},
  {(char *)"ind2", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_ind2, 0, (char *)"int: The index of the 2nd vertex of this edge in its cell.", 0},
  {(char *)"center", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_center, 0, (char *)":obj:`ndarray` of float64: x,y,z coordinates of edge center.", 0},
  {(char *)"midpoint", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_midpoint, 0, (char *)":obj:`ndarray` of float64: x,y,z coordinates of edge midpoint.", 0},
  {(char *)"length", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_length, 0, (char *)"float64: The length of the edge. If infinite, -1 is returned", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_edge", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_3__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation edge.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this edge belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].Edge`): C++ edge object \n            Direct interaction with this object is not recommended. \n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_5__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)o);
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_edges_iter();
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_edge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4edge_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter[] = {
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_5is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_4is_infinite},
  {"increment", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_7increment, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_6increment},
  {"decrement", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_9decrement, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_8decrement},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter[] = {
  {(char *)"edge", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_edge, 0, (char *)"Delaunay3_edge: Corresponding edge object.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_edge_iter", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation edge iterator.\n\n    Args:\n        T (Delaunay3): Triangulation that this edge belongs to.\n        edge (:obj:`str`, optional): String specifying the edge that \n            should be referenced. Valid options include: \n            * 'all_begin': The first edge in an iteration over all edges.\n            * 'all_end': The last edge in an iteration over all edges.\n \n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this edge belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].All_edges_iter`): C++ edge  \n            object. Direct interaction with this object is not recommended. \n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_edge_iter_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)o);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)Py_None); Py_INCREF(Py_None);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)Py_None); Py_INCREF(Py_None);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->x);
  Py_CLEAR(p->xstop);
  Py_CLEAR(p->finite);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)o;
  if (p->x) {
    e = (*v)(((PyObject *)p->x), a); if (e) return e;
  }
  if (p->xstop) {
    e = (*v)(((PyObject *)p->xstop), a); if (e) return e;
  }
  if (p->finite) {
    e = (*v)(((PyObject *)p->finite), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range *)o;
  tmp = ((PyObject*)p->x);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->xstop);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->finite);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_5__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_edge_range", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Wrapper class for iterating over a range of triangulation edges.\n\n    Args:\n        xstart (Delaunay3_edge_iter): The starting edge.  \n        xstop (Delaunay3_edge_iter): Final edge that will end the iteration. \n        finite (:obj:`bool`, optional): If True, only finite edges are \n            iterated over. Otherwise, all edges are iterated over. Defaults \n            False.\n\n    Attributes:\n        x (Delaunay3_edge_iter): The currentedge. \n        xstop (Delaunay3_edge_iter): Final edge that will end the iteration. \n        finite (bool): If True, only finite edges are iterater over. Otherwise\n            all edges are iterated over. \n\n    ", /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_3__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_edge_range_5__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector;
  new((void*)&(p->v)) std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge> ();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->v);
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_3__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Delaunay3_edge_vector = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Delaunay3_edge_vector = {
  0, /*mp_length*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_edge_vector", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Delaunay3_edge_vector, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Delaunay3_edge_vector, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a vector of edges.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ triangulation object.\n            Direct interaction with this object is not recommended.\n        v (:obj:`vector[Delaunay_with_info_3[info_t].Edge]`): Vector of C++ \n            edges.\n        n (int): The number of edges in the vector.\n        i (int): The index of the currect edge.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_1__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_3__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet;
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_center(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6center_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_area(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4area_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_cell(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_4cell_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_ind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3ind_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_mirror(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6mirror_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet[] = {
  {"from_cell", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_1from_cell, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_from_cell},
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_7is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_6is_infinite},
  {"is_Gabriel", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_9is_Gabriel, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_8is_Gabriel},
  {"is_equivalent", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_11is_equivalent, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_10is_equivalent},
  {"vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_13vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_12vertex},
  {"edge", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_15edge, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_14edge},
  {"incident_vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_17incident_vertices, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_16incident_vertices},
  {"incident_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_19incident_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_18incident_edges},
  {"incident_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_21incident_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_20incident_facets},
  {"incident_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_23incident_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_22incident_cells},
  {"side", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_25side, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_24side},
  {"flip", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_27flip, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_26flip},
  {"flip_flippable", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_29flip_flippable, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_28flip_flippable},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_31__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_33__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet[] = {
  {(char *)"center", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_center, 0, (char *)":obj:`ndarray` of float64: x,y,z coordinates of cell center.", 0},
  {(char *)"area", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_area, 0, (char *)"float64: The area of the facet. If infinite, -1 is returned", 0},
  {(char *)"cell", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_cell, 0, (char *)"Delaunay3_cell: The cell this facet is assigned to.", 0},
  {(char *)"ind", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_ind, 0, (char *)"int: The index of the vertex this facet is opposite on its cell.", 0},
  {(char *)"mirror", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_mirror, 0, (char *)"Delaunay3_facet: The same facet as this one, but referenced from its \n        other incident cell", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_facet", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_3__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation facet.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this facet belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].Facet`): C++ facet object \n            Direct interaction with this object is not recommended. \n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_5__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)o);
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_facets_iter();
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_facet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5facet_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter[] = {
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_5is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_4is_infinite},
  {"increment", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_7increment, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_6increment},
  {"decrement", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_9decrement, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_8decrement},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter[] = {
  {(char *)"facet", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_facet, 0, (char *)"Delaunay3_facet: Corresponding facet object.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_facet_iter", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation facet iterator.\n\n    Args:\n        T (Delaunay3): Triangulation that this facet belongs to.\n        facet (:obj:`str`, optional): String specifying the facet that \n            should be referenced. Valid options include: \n            * 'all_begin': The first facet in an iteration over all facets.\n            * 'all_end': The last facet in an iteration over all facets.\n \n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this facet belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].All_facets_iter`): C++ facet  \n            object. Direct interaction with this object is not recommended. \n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_facet_iter_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)o);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)Py_None); Py_INCREF(Py_None);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)Py_None); Py_INCREF(Py_None);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->x);
  Py_CLEAR(p->xstop);
  Py_CLEAR(p->finite);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)o;
  if (p->x) {
    e = (*v)(((PyObject *)p->x), a); if (e) return e;
  }
  if (p->xstop) {
    e = (*v)(((PyObject *)p->xstop), a); if (e) return e;
  }
  if (p->finite) {
    e = (*v)(((PyObject *)p->finite), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range *)o;
  tmp = ((PyObject*)p->x);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->xstop);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->finite);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_5__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_facet_range", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Wrapper class for iterating over a range of triangulation facets.\n\n    Args:\n        xstart (Delaunay3_facet_iter): The starting facet.  \n        xstop (Delaunay3_facet_iter): Final facet that will end the iteration. \n        finite (:obj:`bool`, optional): If True, only finite facets are \n            iterated over. Otherwise, all facets are iterated over. Defaults \n            False.\n\n    Attributes:\n        x (Delaunay3_facet_iter): The currentfacet. \n        xstop (Delaunay3_facet_iter): Final facet that will end the iteration. \n        finite (bool): If True, only finite facets are iterater over. Otherwise\n            all facets are iterated over. \n\n    ", /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_3__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_facet_range_5__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector;
  new((void*)&(p->v)) std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->v);
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_3__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Delaunay3_facet_vector = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Delaunay3_facet_vector = {
  0, /*mp_length*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_facet_vector", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Delaunay3_facet_vector, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Delaunay3_facet_vector, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a vector of facets.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ triangulation object.\n            Direct interaction with this object is not recommended.\n        v (:obj:`vector[Delaunay_with_info_3[info_t].Facet]`): Vector of C++ \n            facets.\n        n (int): The number of facets in the vector.\n        i (int): The index of the currect facet.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_1__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_3__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell;
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_center(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6center_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_circumcenter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12circumcenter_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_min_angle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9min_angle_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell[] = {
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_5is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_4is_infinite},
  {"mirror_index", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_7mirror_index, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_6mirror_index},
  {"mirror_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_9mirror_vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_8mirror_vertex},
  {"facet", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_11facet, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_10facet},
  {"vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_13vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_12vertex},
  {"has_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_15has_vertex, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_14has_vertex},
  {"ind_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_17ind_vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_16ind_vertex},
  {"neighbor", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_19neighbor, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_18neighbor},
  {"has_neighbor", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_21has_neighbor, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_20has_neighbor},
  {"ind_neighbor", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_23ind_neighbor, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_22ind_neighbor},
  {"set_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_25set_vertex, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_24set_vertex},
  {"set_vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_27set_vertices, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_26set_vertices},
  {"reset_vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_29reset_vertices, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_28reset_vertices},
  {"set_neighbor", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_31set_neighbor, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_30set_neighbor},
  {"set_neighbors", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_33set_neighbors, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_32set_neighbors},
  {"reset_neighbors", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_35reset_neighbors, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_34reset_neighbors},
  {"incident_vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_37incident_vertices, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_36incident_vertices},
  {"incident_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_39incident_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_38incident_edges},
  {"incident_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_41incident_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_40incident_facets},
  {"incident_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_43incident_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_42incident_cells},
  {"side", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_45side, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_44side},
  {"side_of_sphere", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_47side_of_sphere, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_46side_of_sphere},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_49__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_51__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell[] = {
  {(char *)"center", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_center, 0, (char *)":obj:`ndarray` of float64: x,y,z coordinates of cell center.", 0},
  {(char *)"circumcenter", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_circumcenter, 0, (char *)":obj:`ndarray` of float64: x,y,z coordinates of cell circumcenter.", 0},
  {(char *)"min_angle", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_min_angle, 0, (char *)"double: The smallest solid angle in this cell in steradians.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_cell", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_1__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation cell.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this cell belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].Cell`): C++ cell object. \n            Direct interaction with this object is not recommended.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)o);
  new((void*)&(p->x)) Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::All_cells_iter();
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->x);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_cell(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4cell_1__get__(o);
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter[] = {
  {"is_infinite", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_5is_infinite, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_4is_infinite},
  {"increment", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_7increment, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_6increment},
  {"decrement", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_9decrement, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_8decrement},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter[] = {
  {(char *)"cell", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_cell, 0, (char *)"Delaunay3_cell: Corresponding cell object.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_cell_iter", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a triangulation cell iteration.\n\n    Args:\n        T (Delaunay3): Triangulation that this cell belongs to. \n        cell (:obj:`str`, optional): String specifying the cell that\n            should be referenced. Valid options include: \n            * 'all_begin': The first cell in an iteration over all cells. \n            * 'all_end': The last cell in an iteration over all cells.\n    \n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ Triangulation object \n            that this cell belongs to. \n        x (:obj:`Delaunay_with_info_3[info_t].All_cells_iter`): C++ cell\n            object. Direct interaction with this object is not recommended.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_19Delaunay3_cell_iter_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)o);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)Py_None); Py_INCREF(Py_None);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)Py_None); Py_INCREF(Py_None);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->x);
  Py_CLEAR(p->xstop);
  Py_CLEAR(p->finite);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)o;
  if (p->x) {
    e = (*v)(((PyObject *)p->x), a); if (e) return e;
  }
  if (p->xstop) {
    e = (*v)(((PyObject *)p->xstop), a); if (e) return e;
  }
  if (p->finite) {
    e = (*v)(((PyObject *)p->finite), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range *)o;
  tmp = ((PyObject*)p->x);
  p->x = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->xstop);
  p->xstop = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->finite);
  p->finite = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_5__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_cell_range", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Wrapper class for iterating over a range of triangulation cells.\n\n    Args:\n        xstart (Delaunay3_cell_iter): The starting cell. \n        xstop (Delaunay3_cell_iter): Final cell that will end the iteration. \n        finite (:obj:`bool`, optional): If True, only finite cells are \n            iterated over. Otherwise, all cells are iterated over. Defaults\n            to False.  \n\n    Attributes:\n        x (Delaunay3_cell_iter): The current cell. \n        xstop (Delaunay3_cell_iter): Final cell that will end the iteration. \n        finite (bool): If True, only finite cells are iterated over. Otherwise, \n            all cells are iterated over.   \n\n    ", /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_3__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_20Delaunay3_cell_range_5__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector;
  new((void*)&(p->v)) std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ();
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->v);
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector[] = {
  {"__next__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_3__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Delaunay3_cell_vector = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Delaunay3_cell_vector = {
  0, /*mp_length*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3_cell_vector", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Delaunay3_cell_vector, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Delaunay3_cell_vector, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Wrapper class for a vector of cells.\n\n    Attributes:\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ triangulation object.\n            Direct interaction with this object is not recommended.\n        v (:obj:`vector[Delaunay_with_info_3[info_t].Cell]`): Vector of C++ \n            cells.\n        n (int): The number of cells in the vector.\n        i (int): The index of the currect cell.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_1__iter__, /*tp_iter*/
  __pyx_pw_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_3__next__, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)o);
  p->n_per_insert = Py_None; Py_INCREF(Py_None);
  p->_locked = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  p->_cache_to_clear_on_update = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->n_per_insert);
  Py_CLEAR(p->_locked);
  Py_CLEAR(p->_cache_to_clear_on_update);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)o;
  if (p->n_per_insert) {
    e = (*v)(p->n_per_insert, a); if (e) return e;
  }
  if (p->_locked) {
    e = (*v)(((PyObject *)p->_locked), a); if (e) return e;
  }
  if (p->_cache_to_clear_on_update) {
    e = (*v)(p->_cache_to_clear_on_update, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3 *)o;
  tmp = ((PyObject*)p->n_per_insert);
  p->n_per_insert = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_locked);
  p->_locked = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_cache_to_clear_on_update);
  p->_cache_to_clear_on_update = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_verts_begin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_verts_begin_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_verts_end(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_verts_end_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_verts(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_verts_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_verts(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_verts_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_edges_begin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_edges_begin_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_edges_end(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_edges_end_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_edges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_edges_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_edges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_edges_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_facets_begin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16all_facets_begin_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_facets_end(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14all_facets_end_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_facets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_10all_facets_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_facets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13finite_facets_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_cells_begin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15all_cells_begin_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_cells_end(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13all_cells_end_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_cells(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9all_cells_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_cells(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12finite_cells_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_n(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_1n_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_n_per_insert(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_1__get__(o);
}

static int __pyx_setprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_n_per_insert(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_12n_per_insert_5__del__(o);
  }
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3__locked(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_locked_1__get__(o);
}

static PyObject *__pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3__cache_to_clear_on_update(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_1__get__(o);
}

static int __pyx_setprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3__cache_to_clear_on_update(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25_cache_to_clear_on_update_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3[] = {
  {"_lock", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_3_lock, METH_NOARGS, 0},
  {"_unlock", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_5_unlock, METH_NOARGS, 0},
  {"_set_updated", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_7_set_updated, METH_NOARGS, 0},
  {"_update_tess", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_9_update_tess, METH_NOARGS, 0},
  {"_update_to_tess", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_11_update_to_tess, METH_VARARGS|METH_KEYWORDS, 0},
  {"_dependent_property", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13_dependent_property, METH_VARARGS|METH_KEYWORDS, 0},
  {"is_valid", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_15is_valid, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_14is_valid},
  {"is_equivalent", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_17is_equivalent, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_16is_equivalent},
  {"from_file", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_19from_file, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_18from_file},
  {"from_serial", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_21from_serial, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_20from_serial},
  {"from_serial_buffer", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_23from_serial_buffer, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_22from_serial_buffer},
  {"serialize_to_buffer", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_25serialize_to_buffer, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_24serialize_to_buffer},
  {"deserialize_from_buffer", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_27deserialize_from_buffer, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_26deserialize_from_buffer},
  {"write_to_file", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_29write_to_file, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_28write_to_file},
  {"read_from_file", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_31read_from_file, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_30read_from_file},
  {"serialize", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_33serialize, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_32serialize},
  {"_serialize_info2idx_int32", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_35_serialize_info2idx_int32, METH_VARARGS|METH_KEYWORDS, 0},
  {"_serialize_info2idx_uint32", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_37_serialize_info2idx_uint32, METH_VARARGS|METH_KEYWORDS, 0},
  {"_serialize_info2idx_int64", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_39_serialize_info2idx_int64, METH_VARARGS|METH_KEYWORDS, 0},
  {"_serialize_info2idx_uint64", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_41_serialize_info2idx_uint64, METH_VARARGS|METH_KEYWORDS, 0},
  {"serialize_info2idx", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_43serialize_info2idx, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_42serialize_info2idx},
  {"deserialize", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_45deserialize, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_44deserialize},
  {"deserialize_with_info", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_47deserialize_with_info, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_46deserialize_with_info},
  {"plot", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_49plot, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_48plot},
  {"num_finite_verts", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_51num_finite_verts, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_50num_finite_verts},
  {"num_finite_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_53num_finite_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_52num_finite_edges},
  {"num_finite_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_55num_finite_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_54num_finite_facets},
  {"num_finite_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_57num_finite_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_56num_finite_cells},
  {"num_infinite_verts", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_59num_infinite_verts, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_58num_infinite_verts},
  {"num_infinite_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_61num_infinite_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_60num_infinite_edges},
  {"num_infinite_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_63num_infinite_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_62num_infinite_facets},
  {"num_infinite_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_65num_infinite_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_64num_infinite_cells},
  {"num_verts", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_67num_verts, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_66num_verts},
  {"num_edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_69num_edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_68num_edges},
  {"num_facets", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_71num_facets, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_70num_facets},
  {"num_cells", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_73num_cells, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_72num_cells},
  {"infinite_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_75infinite_vertex, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_74infinite_vertex},
  {"insert", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_77insert, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_76insert},
  {"clear", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_79clear, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_78clear},
  {"vertices", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_81vertices, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_80vertices},
  {"edges", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_83edges, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_82edges},
  {"voronoi_volumes", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_85voronoi_volumes, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_84voronoi_volumes},
  {"minimum_angles", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_87minimum_angles, METH_NOARGS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_86minimum_angles},
  {"remove", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_89remove, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_88remove},
  {"move", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_91move, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_90move},
  {"move_if_no_collision", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_93move_if_no_collision, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_92move_if_no_collision},
  {"flip", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_95flip, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_94flip},
  {"flip_flippable", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_97flip_flippable, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_96flip_flippable},
  {"get_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_99get_vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_98get_vertex},
  {"locate", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_101locate, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_100locate},
  {"is_edge", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_103is_edge, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_102is_edge},
  {"is_facet", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_105is_facet, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_104is_facet},
  {"is_cell", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_107is_cell, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_106is_cell},
  {"nearest_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_109nearest_vertex, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_108nearest_vertex},
  {"mirror_facet", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_111mirror_facet, METH_O, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_110mirror_facet},
  {"mirror_index", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_113mirror_index, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_112mirror_index},
  {"mirror_vertex", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_115mirror_vertex, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_114mirror_vertex},
  {"get_boundary_of_conflicts", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_117get_boundary_of_conflicts, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_116get_boundary_of_conflicts},
  {"get_conflicts", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_119get_conflicts, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_118get_conflicts},
  {"get_conflicts_and_boundary", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_121get_conflicts_and_boundary, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_120get_conflicts_and_boundary},
  {"outgoing_points", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_123outgoing_points, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_122outgoing_points},
  {"boundary_points", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_125boundary_points, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cgal4py_8delaunay_9delaunay3_9Delaunay3_124boundary_points},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_127__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7cgal4py_8delaunay_9delaunay3_9Delaunay3_129__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3[] = {
  {(char *)"all_verts_begin", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_verts_begin, 0, (char *)"Delaunay3_vertex_iter: Starting vertex for all vertices in the \n        triangulation.", 0},
  {(char *)"all_verts_end", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_verts_end, 0, (char *)"Delaunay3_vertex_iter: Final vertex for all vertices in the \n        triangulation.", 0},
  {(char *)"all_verts", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_verts, 0, (char *)"Delaunay3_vertex_range: Iterable for all vertices in the \n        triangulation.", 0},
  {(char *)"finite_verts", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_verts, 0, (char *)"Delaunay3_vertex_range: Iterable for finite vertices in the \n        triangulation.", 0},
  {(char *)"all_edges_begin", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_edges_begin, 0, (char *)"Delaunay3_edge_iter: Starting edge for all edges in the \n        triangulation.", 0},
  {(char *)"all_edges_end", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_edges_end, 0, (char *)"Delaunay3_edge_iter: Final edge for all edges in the \n        triangulation.", 0},
  {(char *)"all_edges", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_edges, 0, (char *)"Delaunay3_edge_range: Iterable for all edges in the \n        triangulation.", 0},
  {(char *)"finite_edges", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_edges, 0, (char *)"Delaunay3_edge_range: Iterable for finite edges in the \n        triangulation.", 0},
  {(char *)"all_facets_begin", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_facets_begin, 0, (char *)"Delaunay3_facet_iter: Starting facet for all facets in the \n        triangulation.", 0},
  {(char *)"all_facets_end", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_facets_end, 0, (char *)"Delaunay3_facet_iter: Final facet for all facets in the \n        triangulation.", 0},
  {(char *)"all_facets", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_facets, 0, (char *)"Delaunay3_facet_range: Iterable for all facets in the \n        triangulation.", 0},
  {(char *)"finite_facets", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_facets, 0, (char *)"Delaunay3_facet_range: Iterable for finite facets in the \n        triangulation.", 0},
  {(char *)"all_cells_begin", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_cells_begin, 0, (char *)"Delaunay3_cell_iter: Starting cell for all cells in the triangulation.", 0},
  {(char *)"all_cells_end", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_cells_end, 0, (char *)"Delaunay3_cell_iter: Finall cell for all cells in the triangulation.", 0},
  {(char *)"all_cells", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_all_cells, 0, (char *)"Delaunay3_cell_range: Iterable for all cells in the\n        triangulation.", 0},
  {(char *)"finite_cells", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_finite_cells, 0, (char *)"Delaunay3_cell_range: Iterable for finite cells in the\n        triangulation.", 0},
  {(char *)"n", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_n, 0, (char *)0, 0},
  {(char *)"n_per_insert", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_n_per_insert, __pyx_setprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3_n_per_insert, (char *)0, 0},
  {(char *)"_locked", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3__locked, 0, (char *)0, 0},
  {(char *)"_cache_to_clear_on_update", __pyx_getprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3__cache_to_clear_on_update, __pyx_setprop_7cgal4py_8delaunay_9delaunay3_9Delaunay3__cache_to_clear_on_update, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.Delaunay3", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3_Delaunay3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Wrapper class for a 3D Delaunay triangulation.\n\n    Attributes:\n        n (int): The number of points inserted into the triangulation.\n        T (:obj:`Delaunay_with_info_3[info_t]`): C++ triangulation object. \n            Direct interaction with this object is not recommended. \n        n_per_insert (list of int): The number of points inserted at each\n            insert.\n\n    ", /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3_Delaunay3, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3_Delaunay3, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cgal4py_8delaunay_9delaunay3_Delaunay3, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cgal4py_8delaunay_9delaunay3_Delaunay3, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3_Delaunay3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *__pyx_freelist_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess[8];
static int __pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess = 0;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess)))) {
    o = (PyObject*)__pyx_freelist_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess[--__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess];
    memset(o, 0, sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_func);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess)))) {
    __pyx_freelist_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess[__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess++] = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *)o;
  if (p->__pyx_v_func) {
    e = (*v)(p->__pyx_v_func, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess *)o;
  tmp = ((PyObject*)p->__pyx_v_func);
  p->__pyx_v_func = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.__pyx_scope_struct___update_to_tess", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *__pyx_freelist_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property[8];
static int __pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property = 0;

static PyObject *__pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property)))) {
    o = (PyObject*)__pyx_freelist_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property[--__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property];
    memset(o, 0, sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property(PyObject *o) {
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_attr);
  Py_CLEAR(p->__pyx_v_fget);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property)))) {
    __pyx_freelist_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property[__pyx_freecount_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property++] = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *)o;
  if (p->__pyx_v_attr) {
    e = (*v)(p->__pyx_v_attr, a); if (e) return e;
  }
  if (p->__pyx_v_fget) {
    e = (*v)(p->__pyx_v_fget, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *p = (struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property *)o;
  tmp = ((PyObject*)p->__pyx_v_attr);
  p->__pyx_v_attr = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_fget);
  p->__pyx_v_fget = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property = {
  PyVarObject_HEAD_INIT(0, 0)
  "cgal4py.delaunay.delaunay3.__pyx_scope_struct_1__dependent_property", /*tp_name*/
  sizeof(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property, /*tp_traverse*/
  __pyx_tp_clear_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_delaunay3(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_delaunay3},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "delaunay3",
    __pyx_k_delaunay3_pyx_Wrapper_for_CGAL, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_Cannot_get_dependent_property_wh, __pyx_k_Cannot_get_dependent_property_wh, sizeof(__pyx_k_Cannot_get_dependent_property_wh), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay2_cell, __pyx_k_Delaunay2_cell, sizeof(__pyx_k_Delaunay2_cell), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_cell_vector_indices_mu, __pyx_k_Delaunay3_cell_vector_indices_mu, sizeof(__pyx_k_Delaunay3_cell_vector_indices_mu), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_edge, __pyx_k_Delaunay3_edge, sizeof(__pyx_k_Delaunay3_edge), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_edge_vector_indices_mu, __pyx_k_Delaunay3_edge_vector_indices_mu, sizeof(__pyx_k_Delaunay3_edge_vector_indices_mu), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_facet, __pyx_k_Delaunay3_facet, sizeof(__pyx_k_Delaunay3_facet), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_facet_vector_indices_m, __pyx_k_Delaunay3_facet_vector_indices_m, sizeof(__pyx_k_Delaunay3_facet_vector_indices_m), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_vertex_at_7_2e_7_2e_7, __pyx_k_Delaunay3_vertex_at_7_2e_7_2e_7, sizeof(__pyx_k_Delaunay3_vertex_at_7_2e_7_2e_7), 0, 0, 1, 0},
  {&__pyx_kp_s_Delaunay3_vertex_vector_indices, __pyx_k_Delaunay3_vertex_vector_indices, sizeof(__pyx_k_Delaunay3_vertex_vector_indices), 0, 0, 1, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_PY_MAJOR_VERSION, __pyx_k_PY_MAJOR_VERSION, sizeof(__pyx_k_PY_MAJOR_VERSION), 0, 0, 1, 1},
  {&__pyx_kp_s_Point_is_outside_the_affine_hull, __pyx_k_Point_is_outside_the_affine_hull, sizeof(__pyx_k_Point_is_outside_the_affine_hull), 0, 0, 1, 0},
  {&__pyx_kp_s_Point_is_outside_the_convex_hull, __pyx_k_Point_is_outside_the_convex_hull, sizeof(__pyx_k_Point_is_outside_the_convex_hull), 0, 0, 1, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_StopIteration, __pyx_k_StopIteration, sizeof(__pyx_k_StopIteration), 0, 0, 1, 1},
  {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_s_Value_of_not_expected_from_CGAL, __pyx_k_Value_of_not_expected_from_CGAL, sizeof(__pyx_k_Value_of_not_expected_from_CGAL), 0, 0, 1, 0},
  {&__pyx_n_s__59, __pyx_k__59, sizeof(__pyx_k__59), 0, 0, 1, 1},
  {&__pyx_n_s_all_begin, __pyx_k_all_begin, sizeof(__pyx_k_all_begin), 0, 0, 1, 1},
  {&__pyx_n_s_all_cells_begin, __pyx_k_all_cells_begin, sizeof(__pyx_k_all_cells_begin), 0, 0, 1, 1},
  {&__pyx_n_s_all_cells_end, __pyx_k_all_cells_end, sizeof(__pyx_k_all_cells_end), 0, 0, 1, 1},
  {&__pyx_n_s_all_edges_begin, __pyx_k_all_edges_begin, sizeof(__pyx_k_all_edges_begin), 0, 0, 1, 1},
  {&__pyx_n_s_all_edges_end, __pyx_k_all_edges_end, sizeof(__pyx_k_all_edges_end), 0, 0, 1, 1},
  {&__pyx_n_s_all_end, __pyx_k_all_end, sizeof(__pyx_k_all_end), 0, 0, 1, 1},
  {&__pyx_n_s_all_facets_begin, __pyx_k_all_facets_begin, sizeof(__pyx_k_all_facets_begin), 0, 0, 1, 1},
  {&__pyx_n_s_all_facets_end, __pyx_k_all_facets_end, sizeof(__pyx_k_all_facets_end), 0, 0, 1, 1},
  {&__pyx_n_s_all_verts_begin, __pyx_k_all_verts_begin, sizeof(__pyx_k_all_verts_begin), 0, 0, 1, 1},
  {&__pyx_n_s_all_verts_end, __pyx_k_all_verts_end, sizeof(__pyx_k_all_verts_end), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_arange, __pyx_k_arange, sizeof(__pyx_k_arange), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_ascii, __pyx_k_ascii, sizeof(__pyx_k_ascii), 0, 0, 1, 1},
  {&__pyx_n_s_astype, __pyx_k_astype, sizeof(__pyx_k_astype), 0, 0, 1, 1},
  {&__pyx_n_s_attr, __pyx_k_attr, sizeof(__pyx_k_attr), 0, 0, 1, 1},
  {&__pyx_n_s_buf, __pyx_k_buf, sizeof(__pyx_k_buf), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_s_c1, __pyx_k_c1, sizeof(__pyx_k_c1), 0, 0, 1, 1},
  {&__pyx_n_s_c2, __pyx_k_c2, sizeof(__pyx_k_c2), 0, 0, 1, 1},
  {&__pyx_n_s_c3, __pyx_k_c3, sizeof(__pyx_k_c3), 0, 0, 1, 1},
  {&__pyx_n_s_c4, __pyx_k_c4, sizeof(__pyx_k_c4), 0, 0, 1, 1},
  {&__pyx_n_s_cache_to_clear_on_update, __pyx_k_cache_to_clear_on_update, sizeof(__pyx_k_cache_to_clear_on_update), 0, 0, 1, 1},
  {&__pyx_n_s_calcsize, __pyx_k_calcsize, sizeof(__pyx_k_calcsize), 0, 0, 1, 1},
  {&__pyx_n_s_cc, __pyx_k_cc, sizeof(__pyx_k_cc), 0, 0, 1, 1},
  {&__pyx_n_s_cell, __pyx_k_cell, sizeof(__pyx_k_cell), 0, 0, 1, 1},
  {&__pyx_n_s_cells, __pyx_k_cells, sizeof(__pyx_k_cells), 0, 0, 1, 1},
  {&__pyx_n_s_center, __pyx_k_center, sizeof(__pyx_k_center), 0, 0, 1, 1},
  {&__pyx_n_s_cgal4py, __pyx_k_cgal4py, sizeof(__pyx_k_cgal4py), 0, 0, 1, 1},
  {&__pyx_n_s_cgal4py_delaunay_delaunay3, __pyx_k_cgal4py_delaunay_delaunay3, sizeof(__pyx_k_cgal4py_delaunay_delaunay3), 0, 0, 1, 1},
  {&__pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_k_cgal4py_delaunay_delaunay3_pyx, sizeof(__pyx_k_cgal4py_delaunay_delaunay3_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_char, __pyx_k_char, sizeof(__pyx_k_char), 0, 0, 1, 1},
  {&__pyx_n_s_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_count, __pyx_k_count, sizeof(__pyx_k_count), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_dependent_property, __pyx_k_dependent_property, sizeof(__pyx_k_dependent_property), 0, 0, 1, 1},
  {&__pyx_n_s_dependent_property_locals_wrapp, __pyx_k_dependent_property_locals_wrapp, sizeof(__pyx_k_dependent_property_locals_wrapp), 0, 0, 1, 1},
  {&__pyx_n_s_deserialize, __pyx_k_deserialize, sizeof(__pyx_k_deserialize), 0, 0, 1, 1},
  {&__pyx_n_s_deserialize_from_buffer, __pyx_k_deserialize_from_buffer, sizeof(__pyx_k_deserialize_from_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_deserialize_with_info, __pyx_k_deserialize_with_info, sizeof(__pyx_k_deserialize_with_info), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_edge, __pyx_k_edge, sizeof(__pyx_k_edge), 0, 0, 1, 1},
  {&__pyx_n_s_edges, __pyx_k_edges, sizeof(__pyx_k_edges), 0, 0, 1, 1},
  {&__pyx_n_s_empty, __pyx_k_empty, sizeof(__pyx_k_empty), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_encoding, __pyx_k_encoding, sizeof(__pyx_k_encoding), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_facet, __pyx_k_facet, sizeof(__pyx_k_facet), 0, 0, 1, 1},
  {&__pyx_n_s_fget, __pyx_k_fget, sizeof(__pyx_k_fget), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_finite, __pyx_k_finite, sizeof(__pyx_k_finite), 0, 0, 1, 1},
  {&__pyx_n_s_flip, __pyx_k_flip, sizeof(__pyx_k_flip), 0, 0, 1, 1},
  {&__pyx_n_s_flip_flippable, __pyx_k_flip_flippable, sizeof(__pyx_k_flip_flippable), 0, 0, 1, 1},
  {&__pyx_n_s_float, __pyx_k_float, sizeof(__pyx_k_float), 0, 0, 1, 1},
  {&__pyx_n_s_float64, __pyx_k_float64, sizeof(__pyx_k_float64), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_from_cell, __pyx_k_from_cell, sizeof(__pyx_k_from_cell), 0, 0, 1, 1},
  {&__pyx_n_s_from_file, __pyx_k_from_file, sizeof(__pyx_k_from_file), 0, 0, 1, 1},
  {&__pyx_n_s_from_serial, __pyx_k_from_serial, sizeof(__pyx_k_from_serial), 0, 0, 1, 1},
  {&__pyx_n_s_from_serial_buffer, __pyx_k_from_serial_buffer, sizeof(__pyx_k_from_serial_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_frombuffer, __pyx_k_frombuffer, sizeof(__pyx_k_frombuffer), 0, 0, 1, 1},
  {&__pyx_n_s_func, __pyx_k_func, sizeof(__pyx_k_func), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_i1, __pyx_k_i1, sizeof(__pyx_k_i1), 0, 0, 1, 1},
  {&__pyx_n_s_i2, __pyx_k_i2, sizeof(__pyx_k_i2), 0, 0, 1, 1},
  {&__pyx_n_s_i3, __pyx_k_i3, sizeof(__pyx_k_i3), 0, 0, 1, 1},
  {&__pyx_n_s_i4, __pyx_k_i4, sizeof(__pyx_k_i4), 0, 0, 1, 1},
  {&__pyx_n_s_idx, __pyx_k_idx, sizeof(__pyx_k_idx), 0, 0, 1, 1},
  {&__pyx_kp_s_idx_dtype_is_not_supported, __pyx_k_idx_dtype_is_not_supported, sizeof(__pyx_k_idx_dtype_is_not_supported), 0, 0, 1, 0},
  {&__pyx_n_s_idx_inf, __pyx_k_idx_inf, sizeof(__pyx_k_idx_inf), 0, 0, 1, 1},
  {&__pyx_n_s_iinfo, __pyx_k_iinfo, sizeof(__pyx_k_iinfo), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_increment, __pyx_k_increment, sizeof(__pyx_k_increment), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_inf, __pyx_k_inf, sizeof(__pyx_k_inf), 0, 0, 1, 1},
  {&__pyx_n_s_infinite_vertex, __pyx_k_infinite_vertex, sizeof(__pyx_k_infinite_vertex), 0, 0, 1, 1},
  {&__pyx_n_s_info, __pyx_k_info, sizeof(__pyx_k_info), 0, 0, 1, 1},
  {&__pyx_n_s_insert, __pyx_k_insert, sizeof(__pyx_k_insert), 0, 0, 1, 1},
  {&__pyx_n_s_int32, __pyx_k_int32, sizeof(__pyx_k_int32), 0, 0, 1, 1},
  {&__pyx_n_s_int64, __pyx_k_int64, sizeof(__pyx_k_int64), 0, 0, 1, 1},
  {&__pyx_n_s_is_infinite, __pyx_k_is_infinite, sizeof(__pyx_k_is_infinite), 0, 0, 1, 1},
  {&__pyx_n_s_is_valid, __pyx_k_is_valid, sizeof(__pyx_k_is_valid), 0, 0, 1, 1},
  {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
  {&__pyx_n_s_left_edge, __pyx_k_left_edge, sizeof(__pyx_k_left_edge), 0, 0, 1, 1},
  {&__pyx_n_s_left_edges, __pyx_k_left_edges, sizeof(__pyx_k_left_edges), 0, 0, 1, 1},
  {&__pyx_n_s_lock, __pyx_k_lock, sizeof(__pyx_k_lock), 0, 0, 1, 1},
  {&__pyx_n_s_locked, __pyx_k_locked, sizeof(__pyx_k_locked), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_max, __pyx_k_max, sizeof(__pyx_k_max), 0, 0, 1, 1},
  {&__pyx_n_s_max_info, __pyx_k_max_info, sizeof(__pyx_k_max_info), 0, 0, 1, 1},
  {&__pyx_n_s_mirror, __pyx_k_mirror, sizeof(__pyx_k_mirror), 0, 0, 1, 1},
  {&__pyx_n_s_mirror_index, __pyx_k_mirror_index, sizeof(__pyx_k_mirror_index), 0, 0, 1, 1},
  {&__pyx_n_s_mirror_vertex, __pyx_k_mirror_vertex, sizeof(__pyx_k_mirror_vertex), 0, 0, 1, 1},
  {&__pyx_n_s_move, __pyx_k_move, sizeof(__pyx_k_move), 0, 0, 1, 1},
  {&__pyx_n_s_move_if_no_collision, __pyx_k_move_if_no_collision, sizeof(__pyx_k_move_if_no_collision), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_neighbors, __pyx_k_neighbors, sizeof(__pyx_k_neighbors), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_kp_s_not, __pyx_k_not, sizeof(__pyx_k_not), 0, 0, 1, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_num_cells, __pyx_k_num_cells, sizeof(__pyx_k_num_cells), 0, 0, 1, 1},
  {&__pyx_n_s_num_edges, __pyx_k_num_edges, sizeof(__pyx_k_num_edges), 0, 0, 1, 1},
  {&__pyx_n_s_num_facets, __pyx_k_num_facets, sizeof(__pyx_k_num_facets), 0, 0, 1, 1},
  {&__pyx_n_s_num_finite_cells, __pyx_k_num_finite_cells, sizeof(__pyx_k_num_finite_cells), 0, 0, 1, 1},
  {&__pyx_n_s_num_finite_edges, __pyx_k_num_finite_edges, sizeof(__pyx_k_num_finite_edges), 0, 0, 1, 1},
  {&__pyx_n_s_num_finite_facets, __pyx_k_num_finite_facets, sizeof(__pyx_k_num_finite_facets), 0, 0, 1, 1},
  {&__pyx_n_s_num_finite_verts, __pyx_k_num_finite_verts, sizeof(__pyx_k_num_finite_verts), 0, 0, 1, 1},
  {&__pyx_n_s_num_infinite_cells, __pyx_k_num_infinite_cells, sizeof(__pyx_k_num_infinite_cells), 0, 0, 1, 1},
  {&__pyx_n_s_num_infinite_edges, __pyx_k_num_infinite_edges, sizeof(__pyx_k_num_infinite_edges), 0, 0, 1, 1},
  {&__pyx_n_s_num_infinite_facets, __pyx_k_num_infinite_facets, sizeof(__pyx_k_num_infinite_facets), 0, 0, 1, 1},
  {&__pyx_n_s_num_infinite_verts, __pyx_k_num_infinite_verts, sizeof(__pyx_k_num_infinite_verts), 0, 0, 1, 1},
  {&__pyx_n_s_num_verts, __pyx_k_num_verts, sizeof(__pyx_k_num_verts), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_ones, __pyx_k_ones, sizeof(__pyx_k_ones), 0, 0, 1, 1},
  {&__pyx_n_s_out, __pyx_k_out, sizeof(__pyx_k_out), 0, 0, 1, 1},
  {&__pyx_n_s_pack, __pyx_k_pack, sizeof(__pyx_k_pack), 0, 0, 1, 1},
  {&__pyx_n_s_periodic, __pyx_k_periodic, sizeof(__pyx_k_periodic), 0, 0, 1, 1},
  {&__pyx_n_s_plot, __pyx_k_plot, sizeof(__pyx_k_plot), 0, 0, 1, 1},
  {&__pyx_n_s_plot3D, __pyx_k_plot3D, sizeof(__pyx_k_plot3D), 0, 0, 1, 1},
  {&__pyx_n_s_point, __pyx_k_point, sizeof(__pyx_k_point), 0, 0, 1, 1},
  {&__pyx_n_s_pos, __pyx_k_pos, sizeof(__pyx_k_pos), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_property, __pyx_k_property, sizeof(__pyx_k_property), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_read_from_file, __pyx_k_read_from_file, sizeof(__pyx_k_read_from_file), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_refcheck, __pyx_k_refcheck, sizeof(__pyx_k_refcheck), 0, 0, 1, 1},
  {&__pyx_n_s_remove, __pyx_k_remove, sizeof(__pyx_k_remove), 0, 0, 1, 1},
  {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
  {&__pyx_n_s_resize, __pyx_k_resize, sizeof(__pyx_k_resize), 0, 0, 1, 1},
  {&__pyx_n_s_return_index, __pyx_k_return_index, sizeof(__pyx_k_return_index), 0, 0, 1, 1},
  {&__pyx_n_s_right_edge, __pyx_k_right_edge, sizeof(__pyx_k_right_edge), 0, 0, 1, 1},
  {&__pyx_n_s_right_edges, __pyx_k_right_edges, sizeof(__pyx_k_right_edges), 0, 0, 1, 1},
  {&__pyx_kp_s_self_T_self_v_cannot_be_converte, __pyx_k_self_T_self_v_cannot_be_converte, sizeof(__pyx_k_self_T_self_v_cannot_be_converte), 0, 0, 1, 0},
  {&__pyx_kp_s_self_T_self_x_cannot_be_converte, __pyx_k_self_T_self_x_cannot_be_converte, sizeof(__pyx_k_self_T_self_x_cannot_be_converte), 0, 0, 1, 0},
  {&__pyx_n_s_serialize, __pyx_k_serialize, sizeof(__pyx_k_serialize), 0, 0, 1, 1},
  {&__pyx_n_s_serialize_info2idx_int32, __pyx_k_serialize_info2idx_int32, sizeof(__pyx_k_serialize_info2idx_int32), 0, 0, 1, 1},
  {&__pyx_n_s_serialize_info2idx_int64, __pyx_k_serialize_info2idx_int64, sizeof(__pyx_k_serialize_info2idx_int64), 0, 0, 1, 1},
  {&__pyx_n_s_serialize_info2idx_uint32, __pyx_k_serialize_info2idx_uint32, sizeof(__pyx_k_serialize_info2idx_uint32), 0, 0, 1, 1},
  {&__pyx_n_s_serialize_info2idx_uint64, __pyx_k_serialize_info2idx_uint64, sizeof(__pyx_k_serialize_info2idx_uint64), 0, 0, 1, 1},
  {&__pyx_n_s_set_updated, __pyx_k_set_updated, sizeof(__pyx_k_set_updated), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_solf, __pyx_k_solf, sizeof(__pyx_k_solf), 0, 0, 1, 1},
  {&__pyx_n_s_sort, __pyx_k_sort, sizeof(__pyx_k_sort), 0, 0, 1, 1},
  {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_struct, __pyx_k_struct, sizeof(__pyx_k_struct), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_tobytes, __pyx_k_tobytes, sizeof(__pyx_k_tobytes), 0, 0, 1, 1},
  {&__pyx_n_s_uint32, __pyx_k_uint32, sizeof(__pyx_k_uint32), 0, 0, 1, 1},
  {&__pyx_n_s_uint64, __pyx_k_uint64, sizeof(__pyx_k_uint64), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_unlock, __pyx_k_unlock, sizeof(__pyx_k_unlock), 0, 0, 1, 1},
  {&__pyx_n_s_unpack, __pyx_k_unpack, sizeof(__pyx_k_unpack), 0, 0, 1, 1},
  {&__pyx_n_s_update_tess, __pyx_k_update_tess, sizeof(__pyx_k_update_tess), 0, 0, 1, 1},
  {&__pyx_n_s_update_to_tess, __pyx_k_update_to_tess, sizeof(__pyx_k_update_to_tess), 0, 0, 1, 1},
  {&__pyx_n_s_update_to_tess_locals_wrapped_f, __pyx_k_update_to_tess_locals_wrapped_f, sizeof(__pyx_k_update_to_tess_locals_wrapped_f), 0, 0, 1, 1},
  {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
  {&__pyx_n_s_v1, __pyx_k_v1, sizeof(__pyx_k_v1), 0, 0, 1, 1},
  {&__pyx_n_s_v2, __pyx_k_v2, sizeof(__pyx_k_v2), 0, 0, 1, 1},
  {&__pyx_n_s_v3, __pyx_k_v3, sizeof(__pyx_k_v3), 0, 0, 1, 1},
  {&__pyx_n_s_v4, __pyx_k_v4, sizeof(__pyx_k_v4), 0, 0, 1, 1},
  {&__pyx_n_s_vert, __pyx_k_vert, sizeof(__pyx_k_vert), 0, 0, 1, 1},
  {&__pyx_n_s_vertex, __pyx_k_vertex, sizeof(__pyx_k_vertex), 0, 0, 1, 1},
  {&__pyx_n_s_vertex1, __pyx_k_vertex1, sizeof(__pyx_k_vertex1), 0, 0, 1, 1},
  {&__pyx_n_s_vertex2, __pyx_k_vertex2, sizeof(__pyx_k_vertex2), 0, 0, 1, 1},
  {&__pyx_n_s_vertices, __pyx_k_vertices, sizeof(__pyx_k_vertices), 0, 0, 1, 1},
  {&__pyx_n_s_wrapped_fget, __pyx_k_wrapped_fget, sizeof(__pyx_k_wrapped_fget), 0, 0, 1, 1},
  {&__pyx_n_s_wrapped_func, __pyx_k_wrapped_func, sizeof(__pyx_k_wrapped_func), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_xstart, __pyx_k_xstart, sizeof(__pyx_k_xstart), 0, 0, 1, 1},
  {&__pyx_n_s_xstop, __pyx_k_xstop, sizeof(__pyx_k_xstop), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 384, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_StopIteration = __Pyx_GetBuiltinName(__pyx_n_s_StopIteration); if (!__pyx_builtin_StopIteration) __PYX_ERR(0, 298, __pyx_L1_error)
  __pyx_builtin_property = __Pyx_GetBuiltinName(__pyx_n_s_property); if (!__pyx_builtin_property) __PYX_ERR(0, 1789, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 1784, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 2798, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(2, 229, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 1000, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "cgal4py/delaunay/delaunay3.pyx":110
 *         of the vertex."""
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')             # <<<<<<<<<<<<<<
 *             if self.is_infinite():
 *                 out[:] = np.float('inf')
 */
  __pyx_tuple_ = PyTuple_Pack(2, __pyx_int_3, __pyx_n_s_float64); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "cgal4py/delaunay/delaunay3.pyx":112
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')
 *             if self.is_infinite():
 *                 out[:] = np.float('inf')             # <<<<<<<<<<<<<<
 *             else:
 *                 self.x.point(&out[0])
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_n_s_inf); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);
  __pyx_slice__3 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__3);
  __Pyx_GIVEREF(__pyx_slice__3);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "cgal4py/delaunay/delaunay3.pyx":503
 *         def __get__(self):
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')             # <<<<<<<<<<<<<<
 *             else:
 *                 return (self.vertex1.point + self.vertex2.point)/2.0
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_n_s_inf); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_tuple__13 = PyTuple_Pack(2, __pyx_int_3, __pyx_n_s_float64); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "cgal4py/delaunay/delaunay3.pyx":815
 * 
 *     def __repr__(self):
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),             # <<<<<<<<<<<<<<
 *                                                   repr(self.vertex(1)),
 *                                                   repr(self.vertex(2)))
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "cgal4py/delaunay/delaunay3.pyx":816
 *     def __repr__(self):
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),
 *                                                   repr(self.vertex(1)),             # <<<<<<<<<<<<<<
 *                                                   repr(self.vertex(2)))
 * 
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_int_1); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 816, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "cgal4py/delaunay/delaunay3.pyx":817
 *         return "Delaunay3_facet[{},{},{}]".format(repr(self.vertex(0)),
 *                                                   repr(self.vertex(1)),
 *                                                   repr(self.vertex(2)))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_facet self, Delaunay3_facet solf, int op):
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "cgal4py/delaunay/delaunay3.pyx":896
 *         def __get__(self):
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')             # <<<<<<<<<<<<<<
 *             else:
 *                 return (self.vertex(0).point + \
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_n_s_inf); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_int_3, __pyx_n_s_float64); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "cgal4py/delaunay/delaunay3.pyx":898
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "cgal4py/delaunay/delaunay3.pyx":899
 *             else:
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(2).point)/3.0
 * 
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_int_1); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "cgal4py/delaunay/delaunay3.pyx":900
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point)/3.0             # <<<<<<<<<<<<<<
 * 
 *     property area:
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 900, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "cgal4py/delaunay/delaunay3.pyx":1225
 * 
 *     def __repr__(self):
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),             # <<<<<<<<<<<<<<
 *                                                     repr(self.vertex(1)),
 *                                                     repr(self.vertex(2)),
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "cgal4py/delaunay/delaunay3.pyx":1226
 *     def __repr__(self):
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),
 *                                                     repr(self.vertex(1)),             # <<<<<<<<<<<<<<
 *                                                     repr(self.vertex(2)),
 *                                                     repr(self.vertex(3)))
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_int_1); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "cgal4py/delaunay/delaunay3.pyx":1227
 *         return "Delaunay2_cell[{},{},{},{}]".format(repr(self.vertex(0)),
 *                                                     repr(self.vertex(1)),
 *                                                     repr(self.vertex(2)),             # <<<<<<<<<<<<<<
 *                                                     repr(self.vertex(3)))
 * 
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "cgal4py/delaunay/delaunay3.pyx":1228
 *                                                     repr(self.vertex(1)),
 *                                                     repr(self.vertex(2)),
 *                                                     repr(self.vertex(3)))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Delaunay3_cell self, Delaunay3_cell solf, int op):
 */
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "cgal4py/delaunay/delaunay3.pyx":1465
 *         def __get__(self):
 *             if self.is_infinite():
 *                 return np.float('inf')*np.ones(3, 'float64')             # <<<<<<<<<<<<<<
 *             else:
 *                 return (self.vertex(0).point + \
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_n_s_inf); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_tuple__43 = PyTuple_Pack(2, __pyx_int_3, __pyx_n_s_float64); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "cgal4py/delaunay/delaunay3.pyx":1467
 *                 return np.float('inf')*np.ones(3, 'float64')
 *             else:
 *                 return (self.vertex(0).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "cgal4py/delaunay/delaunay3.pyx":1468
 *             else:
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_int_1); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "cgal4py/delaunay/delaunay3.pyx":1469
 *                 return (self.vertex(0).point + \
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \             # <<<<<<<<<<<<<<
 *                         self.vertex(3).point)/4.0
 * 
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 1469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "cgal4py/delaunay/delaunay3.pyx":1470
 *                         self.vertex(1).point + \
 *                         self.vertex(2).point + \
 *                         self.vertex(3).point)/4.0             # <<<<<<<<<<<<<<
 * 
 *     property circumcenter:
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 1470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "cgal4py/delaunay/delaunay3.pyx":1475
 *         """:obj:`ndarray` of float64: x,y,z coordinates of cell circumcenter."""
 *         def __get__(self):
 *             cdef np.ndarray[np.float64_t] out = np.zeros(3, 'float64')             # <<<<<<<<<<<<<<
 *             self.T.circumcenter(self.x, &out[0])
 *             return out
 */
  __pyx_tuple__48 = PyTuple_Pack(2, __pyx_int_3, __pyx_n_s_float64); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.x cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_x_cannot_be_converte); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__51 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__52 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__53 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__54 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__55 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "(tree fragment)":4
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.T,self.v cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__56 = PyTuple_Pack(1, __pyx_kp_s_self_T_self_v_cannot_be_converte); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "cgal4py/delaunay/delaunay3.pyx":1770
 *     @staticmethod
 *     def _update_to_tess(func):
 *         def wrapped_func(solf, *args, **kwargs):             # <<<<<<<<<<<<<<
 *             solf._lock()
 *             out = func(solf, *args, **kwargs)
 */
  __pyx_tuple__57 = PyTuple_Pack(4, __pyx_n_s_solf, __pyx_n_s_args, __pyx_n_s_kwargs, __pyx_n_s_out); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 1770, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);
  __pyx_codeobj__58 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_wrapped_func, 1770, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__58)) __PYX_ERR(0, 1770, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":1782
 *     def _dependent_property(fget):
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):             # <<<<<<<<<<<<<<
 *             if solf._locked:
 *                 raise RuntimeError("Cannot get dependent property '{}' while triangulation is locked.".format(attr))
 */
  __pyx_tuple__60 = PyTuple_Pack(1, __pyx_n_s_solf); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 1782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_wrapped_fget, 1782, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 1782, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":1921
 *         cdef bytes ibfmt, fbfmt
 *         if PY_MAJOR_VERSION == 2:
 *             (ffmt, ifmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))             # <<<<<<<<<<<<<<
 *         else:
 *             (fbfmt, ibfmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 */
  __pyx_tuple__62 = PyTuple_Pack(1, __pyx_n_s_cc); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 1921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "cgal4py/delaunay/delaunay3.pyx":1923
 *             (ffmt, ifmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))
 *         else:
 *             (fbfmt, ibfmt) = struct.unpack('cc', buf.read(struct.calcsize('cc')))             # <<<<<<<<<<<<<<
 *             ffmt = fbfmt.decode()
 *             ifmt = ibfmt.decode()
 */
  __pyx_tuple__63 = PyTuple_Pack(1, __pyx_n_s_cc); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 1923, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__67 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__69 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__70 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(2, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__71 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(2, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":810
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__72 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(2, 810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":814
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__73 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(2, 814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__74 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(2, 834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1000
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__75 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(2, 1000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1006
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__76 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(2, 1006, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1012
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__77 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(2, 1012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);

  /* "cgal4py/delaunay/delaunay3.pyx":31
 * ctypedef np.uint32_t np_info_t
 * 
 * def is_valid():             # <<<<<<<<<<<<<<
 *     if (VALID == 1):
 *         return True
 */
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_is_valid, 31, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(0, 31, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":385
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i, int j):             # <<<<<<<<<<<<<<
 *         r"""Construct an edges from a cell and indices of the two vertices
 *         in the cell that are incident to the edge.
 */
  __pyx_tuple__79 = PyTuple_Pack(5, __pyx_n_s_c, __pyx_n_s_i, __pyx_n_s_j, __pyx_n_s_out, __pyx_n_s_e); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__79, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_from_cell, 385, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(0, 385, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":796
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i):             # <<<<<<<<<<<<<<
 *         r"""Construct a facet from a cell and index of the vertex in the cell
 *         opposite the desired facet.
 */
  __pyx_tuple__81 = PyTuple_Pack(4, __pyx_n_s_c, __pyx_n_s_i, __pyx_n_s_out, __pyx_n_s_e); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_from_cell, 796, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(0, 796, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":1769
 * 
 *     @staticmethod
 *     def _update_to_tess(func):             # <<<<<<<<<<<<<<
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 */
  __pyx_tuple__83 = PyTuple_Pack(3, __pyx_n_s_func, __pyx_n_s_wrapped_func, __pyx_n_s_wrapped_func); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_update_to_tess, 1769, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 1769, __pyx_L1_error)

  /* "cgal4py/delaunay/delaunay3.pyx":1780
 * 
 *     @staticmethod
 *     def _dependent_property(fget):             # <<<<<<<<<<<<<<
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 */
  __pyx_tuple__85 = PyTuple_Pack(4, __pyx_n_s_fget, __pyx_n_s_attr, __pyx_n_s_wrapped_fget, __pyx_n_s_wrapped_fget); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__85, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cgal4py_delaunay_delaunay3_pyx, __pyx_n_s_dependent_property, 1780, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyString_Type_encode.type = (PyObject*)&PyString_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_0 = PyFloat_FromDouble(3.0); if (unlikely(!__pyx_float_3_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_0 = PyFloat_FromDouble(4.0); if (unlikely(!__pyx_float_4_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_modinit_global_init_code(void); /*proto*/
static int __Pyx_modinit_variable_export_code(void); /*proto*/
static int __Pyx_modinit_function_export_code(void); /*proto*/
static int __Pyx_modinit_type_init_code(void); /*proto*/
static int __Pyx_modinit_type_import_code(void); /*proto*/
static int __Pyx_modinit_variable_import_code(void); /*proto*/
static int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __pyx_v_7cgal4py_8delaunay_9delaunay3_np_info = Py_None; Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex))__pyx_f_7cgal4py_8delaunay_9delaunay3_16Delaunay3_vertex_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_vertex", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter) < 0) __PYX_ERR(0, 197, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_vertex_iter", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter) < 0) __PYX_ERR(0, 197, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter) < 0) __PYX_ERR(0, 197, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_iter;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range) < 0) __PYX_ERR(0, 258, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_vertex_range", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range) < 0) __PYX_ERR(0, 258, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range) < 0) __PYX_ERR(0, 258, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_range;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Vertex> ))__pyx_f_7cgal4py_8delaunay_9delaunay3_23Delaunay3_vertex_vector_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector) < 0) __PYX_ERR(0, 300, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector) < 0) __PYX_ERR(0, 300, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_vertex_vector", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector) < 0) __PYX_ERR(0, 300, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector) < 0) __PYX_ERR(0, 300, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_vertex_vector;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge))__pyx_f_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge) < 0) __PYX_ERR(0, 357, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge) < 0) __PYX_ERR(0, 357, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_edge", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge) < 0) __PYX_ERR(0, 357, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge) < 0) __PYX_ERR(0, 357, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_edge_iter", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_iter;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range) < 0) __PYX_ERR(0, 669, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_edge_range", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range) < 0) __PYX_ERR(0, 669, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range) < 0) __PYX_ERR(0, 669, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_range;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Edge> ))__pyx_f_7cgal4py_8delaunay_9delaunay3_21Delaunay3_edge_vector_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector) < 0) __PYX_ERR(0, 711, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector) < 0) __PYX_ERR(0, 711, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_edge_vector", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector) < 0) __PYX_ERR(0, 711, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector) < 0) __PYX_ERR(0, 711, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge_vector;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet))__pyx_f_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet) < 0) __PYX_ERR(0, 768, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet) < 0) __PYX_ERR(0, 768, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_facet", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet) < 0) __PYX_ERR(0, 768, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet) < 0) __PYX_ERR(0, 768, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter) < 0) __PYX_ERR(0, 1036, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_facet_iter", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter) < 0) __PYX_ERR(0, 1036, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter) < 0) __PYX_ERR(0, 1036, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_iter;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_facet_range", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_range;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Facet> ))__pyx_f_7cgal4py_8delaunay_9delaunay3_22Delaunay3_facet_vector_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_facet_vector", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet_vector;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell))__pyx_f_7cgal4py_8delaunay_9delaunay3_14Delaunay3_cell_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell) < 0) __PYX_ERR(0, 1197, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell) < 0) __PYX_ERR(0, 1197, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_cell", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell) < 0) __PYX_ERR(0, 1197, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell) < 0) __PYX_ERR(0, 1197, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter) < 0) __PYX_ERR(0, 1567, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_cell_iter", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter) < 0) __PYX_ERR(0, 1567, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter) < 0) __PYX_ERR(0, 1567, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_iter;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range) < 0) __PYX_ERR(0, 1629, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_cell_range", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range) < 0) __PYX_ERR(0, 1629, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range) < 0) __PYX_ERR(0, 1629, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_range;
  __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector = &__pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector;
  __pyx_vtable_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector.assign = (void (*)(struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector *, Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t>  *, std::vector<Delaunay_with_info_3<__pyx_t_7cgal4py_8delaunay_9delaunay3_info_t> ::Cell> ))__pyx_f_7cgal4py_8delaunay_9delaunay3_21Delaunay3_cell_vector_assign;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector) < 0) __PYX_ERR(0, 1670, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector.tp_dict, __pyx_vtabptr_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector) < 0) __PYX_ERR(0, 1670, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3_cell_vector", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector) < 0) __PYX_ERR(0, 1670, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector) < 0) __PYX_ERR(0, 1670, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell_vector;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3) < 0) __PYX_ERR(0, 1728, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttrString(__pyx_m, "Delaunay3", (PyObject *)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3) < 0) __PYX_ERR(0, 1728, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3) < 0) __PYX_ERR(0, 1728, __pyx_L1_error)
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3 = &__pyx_type_7cgal4py_8delaunay_9delaunay3_Delaunay3;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess) < 0) __PYX_ERR(0, 1769, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess = &__pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct___update_to_tess;
  if (PyType_Ready(&__pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property) < 0) __PYX_ERR(0, 1780, __pyx_L1_error)
  __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property.tp_dictoffset && __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property = &__pyx_type_7cgal4py_8delaunay_9delaunay3___pyx_scope_struct_1__dependent_property;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) __PYX_ERR(4, 8, __pyx_L1_error)
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) __PYX_ERR(5, 15, __pyx_L1_error)
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) __PYX_ERR(2, 164, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) __PYX_ERR(2, 186, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) __PYX_ERR(2, 190, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) __PYX_ERR(2, 199, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) __PYX_ERR(2, 872, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (!(defined(__cplusplus)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 4)))
    #define CYTHON_SMALL_CODE __attribute__((optimize("Os")))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initdelaunay3(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initdelaunay3(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_delaunay3(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_delaunay3(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        result = PyDict_SetItemString(moddict, to_name, value);
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__") < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static int __pyx_pymod_exec_delaunay3(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m && __pyx_m == __pyx_pyinit_module) return 0;
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_delaunay3(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("delaunay3", __pyx_methods, __pyx_k_delaunay3_pyx_Wrapper_for_CGAL, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_cgal4py__delaunay__delaunay3) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "cgal4py.delaunay.delaunay3")) {
      if (unlikely(PyDict_SetItemString(modules, "cgal4py.delaunay.delaunay3", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "cgal4py/delaunay/delaunay3.pyx":9
 * import cython
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * import struct
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":11
 * import numpy as np
 * cimport numpy as np
 * import struct             # <<<<<<<<<<<<<<
 * 
 * from cgal4py import PY_MAJOR_VERSION
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_struct, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_struct, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":13
 * import struct
 * 
 * from cgal4py import PY_MAJOR_VERSION             # <<<<<<<<<<<<<<
 * from cgal4py import plot
 * from cgal4py.delaunay.tools cimport sortSerializedTess
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_PY_MAJOR_VERSION);
  __Pyx_GIVEREF(__pyx_n_s_PY_MAJOR_VERSION);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PY_MAJOR_VERSION);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cgal4py, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_PY_MAJOR_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PY_MAJOR_VERSION, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":14
 * 
 * from cgal4py import PY_MAJOR_VERSION
 * from cgal4py import plot             # <<<<<<<<<<<<<<
 * from cgal4py.delaunay.tools cimport sortSerializedTess
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_plot);
  __Pyx_GIVEREF(__pyx_n_s_plot);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_plot);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_cgal4py, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_plot); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plot, __pyx_t_2) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":28
 * 
 * ctypedef uint32_t info_t
 * cdef object np_info = np.uint32             # <<<<<<<<<<<<<<
 * ctypedef np.uint32_t np_info_t
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_uint32); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info);
  __Pyx_DECREF_SET(__pyx_v_7cgal4py_8delaunay_9delaunay3_np_info, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":31
 * ctypedef np.uint32_t np_info_t
 * 
 * def is_valid():             # <<<<<<<<<<<<<<
 *     if (VALID == 1):
 *         return True
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_1is_valid, NULL, __pyx_n_s_cgal4py_delaunay_delaunay3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_is_valid, __pyx_t_2) < 0) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":385
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i, int j):             # <<<<<<<<<<<<<<
 *         r"""Construct an edges from a cell and indices of the two vertices
 *         in the cell that are incident to the edge.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_14Delaunay3_edge_1from_cell, NULL, __pyx_n_s_cgal4py_delaunay_delaunay3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge->tp_dict, __pyx_n_s_from_cell, __pyx_t_2) < 0) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge);

  /* "cgal4py/delaunay/delaunay3.pyx":384
 *         self.x = x
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def from_cell(Delaunay3_cell c, int i, int j):
 *         r"""Construct an edges from a cell and indices of the two vertices
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge, __pyx_n_s_from_cell); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge->tp_dict, __pyx_n_s_from_cell, __pyx_t_1) < 0) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_edge);

  /* "cgal4py/delaunay/delaunay3.pyx":796
 * 
 *     @staticmethod
 *     def from_cell(Delaunay3_cell c, int i):             # <<<<<<<<<<<<<<
 *         r"""Construct a facet from a cell and index of the vertex in the cell
 *         opposite the desired facet.
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_15Delaunay3_facet_1from_cell, NULL, __pyx_n_s_cgal4py_delaunay_delaunay3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet->tp_dict, __pyx_n_s_from_cell, __pyx_t_1) < 0) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet);

  /* "cgal4py/delaunay/delaunay3.pyx":795
 *         self.x = x
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def from_cell(Delaunay3_cell c, int i):
 *         r"""Construct a facet from a cell and index of the vertex in the cell
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet, __pyx_n_s_from_cell); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet->tp_dict, __pyx_n_s_from_cell, __pyx_t_2) < 0) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_facet);

  /* "cgal4py/delaunay/delaunay3.pyx":1769
 * 
 *     @staticmethod
 *     def _update_to_tess(func):             # <<<<<<<<<<<<<<
 *         def wrapped_func(solf, *args, **kwargs):
 *             solf._lock()
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_11_update_to_tess, NULL, __pyx_n_s_cgal4py_delaunay_delaunay3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_update_to_tess, __pyx_t_2) < 0) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1768
 *             self.T.updated = <cbool>False
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def _update_to_tess(func):
 *         def wrapped_func(solf, *args, **kwargs):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_update_to_tess, __pyx_t_1) < 0) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1780
 * 
 *     @staticmethod
 *     def _dependent_property(fget):             # <<<<<<<<<<<<<<
 *         attr = '_'+fget.__name__
 *         def wrapped_fget(solf):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_7cgal4py_8delaunay_9delaunay3_9Delaunay3_13_dependent_property, NULL, __pyx_n_s_cgal4py_delaunay_delaunay3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_dependent_property, __pyx_t_1) < 0) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1779
 *         return wrapped_func
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def _dependent_property(fget):
 *         attr = '_'+fget.__name__
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_dependent_property, __pyx_t_2) < 0) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1822
 * 
 *     @classmethod
 *     def from_file(cls, fname):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from one saved to a file.
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_from_file); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":1821
 *         return <pybool>(out)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_file(cls, fname):
 *         r"""Create a triangulation from one saved to a file.
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_from_file, __pyx_t_1) < 0) __PYX_ERR(0, 1822, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1838
 * 
 *     @classmethod
 *     def from_serial(cls, *args):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from serialized information.
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_from_serial); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "cgal4py/delaunay/delaunay3.pyx":1837
 *         return T
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_serial(cls, *args):
 *         r"""Create a triangulation from serialized information.
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_from_serial, __pyx_t_2) < 0) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1854
 * 
 *     @classmethod
 *     def from_serial_buffer(cls, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         r"""Create a triangulation from serialized information in a buffer.
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_from_serial_buffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":1853
 *         return T
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_serial_buffer(cls, *args, **kwargs):
 *         r"""Create a triangulation from serialized information in a buffer.
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_from_serial_buffer, __pyx_t_1) < 0) __PYX_ERR(0, 1854, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":1962
 *             self.T.write_to_file(cfname)
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     def read_from_file(self, fname):
 *         r"""Read serialized tessellation information from a file.
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":1963
 * 
 *     @_update_to_tess
 *     def read_from_file(self, fname):             # <<<<<<<<<<<<<<
 *         r"""Read serialized tessellation information from a file.
 * 
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_read_from_file); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1962, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_read_from_file, __pyx_t_1) < 0) __PYX_ERR(0, 1963, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2166
 *             raise TypeError("idx.dtype = {} is not supported.".format(idx.dtype))
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2169
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def deserialize(self, np.ndarray[np.float64_t, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[np_info_t, ndim=2] cells,
 *                     np.ndarray[np_info_t, ndim=2] neighbors,
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_deserialize); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_deserialize, __pyx_t_1) < 0) __PYX_ERR(0, 2169, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2198
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     def deserialize_with_info(self, np.ndarray[np.float64_t, ndim=2] pos,
 *                               np.ndarray[np_info_t, ndim=1] info,
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2199
 *     @cython.wraparound(False)
 *     @_update_to_tess
 *     def deserialize_with_info(self, np.ndarray[np.float64_t, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                               np.ndarray[np_info_t, ndim=1] info,
 *                               np.ndarray[np_info_t, ndim=2] cells,
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_deserialize_with_info); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2198, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2198, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2198, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_deserialize_with_info, __pyx_t_1) < 0) __PYX_ERR(0, 2199, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2238
 *         plot.plot3D(self, *args, **kwargs)
 * 
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_finite_verts(self):
 *         r"""int: The number of finite vertices in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2239
 * 
 *     @_dependent_property
 *     def num_finite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite vertices in the triangulation."""
 *         return self.T.num_finite_verts()
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_finite_verts); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2238, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2238, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2238, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_finite_verts, __pyx_t_1) < 0) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2242
 *         r"""int: The number of finite vertices in the triangulation."""
 *         return self.T.num_finite_verts()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_finite_edges(self):
 *         r"""int: The number of finite edges in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2243
 *         return self.T.num_finite_verts()
 *     @_dependent_property
 *     def num_finite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite edges in the triangulation."""
 *         return self.T.num_finite_edges()
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_finite_edges); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2242, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2242, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2242, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_finite_edges, __pyx_t_1) < 0) __PYX_ERR(0, 2243, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2246
 *         r"""int: The number of finite edges in the triangulation."""
 *         return self.T.num_finite_edges()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_finite_facets(self):
 *         r"""int: The number of finite facets in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2247
 *         return self.T.num_finite_edges()
 *     @_dependent_property
 *     def num_finite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite facets in the triangulation."""
 *         return self.T.num_finite_facets()
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_finite_facets); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_finite_facets, __pyx_t_1) < 0) __PYX_ERR(0, 2247, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2250
 *         r"""int: The number of finite facets in the triangulation."""
 *         return self.T.num_finite_facets()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_finite_cells(self):
 *         r"""int: The number of finite cells in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2251
 *         return self.T.num_finite_facets()
 *     @_dependent_property
 *     def num_finite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of finite cells in the triangulation."""
 *         return self.T.num_finite_cells()
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_finite_cells); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2250, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2250, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2250, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2250, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2250, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_finite_cells, __pyx_t_1) < 0) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2254
 *         r"""int: The number of finite cells in the triangulation."""
 *         return self.T.num_finite_cells()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_infinite_verts(self):
 *         r"""int: The number of infinite vertices in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2255
 *         return self.T.num_finite_cells()
 *     @_dependent_property
 *     def num_infinite_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite vertices in the triangulation."""
 *         return self.T.num_infinite_verts()
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_infinite_verts); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2254, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2254, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2254, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2254, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2254, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_infinite_verts, __pyx_t_1) < 0) __PYX_ERR(0, 2255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2258
 *         r"""int: The number of infinite vertices in the triangulation."""
 *         return self.T.num_infinite_verts()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_infinite_edges(self):
 *         r"""int: The number of infinite edges in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2259
 *         return self.T.num_infinite_verts()
 *     @_dependent_property
 *     def num_infinite_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite edges in the triangulation."""
 *         return self.T.num_infinite_edges()
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_infinite_edges); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2258, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_infinite_edges, __pyx_t_1) < 0) __PYX_ERR(0, 2259, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2262
 *         r"""int: The number of infinite edges in the triangulation."""
 *         return self.T.num_infinite_edges()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_infinite_facets(self):
 *         r"""int: The number of infinite facets in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2263
 *         return self.T.num_infinite_edges()
 *     @_dependent_property
 *     def num_infinite_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite facets in the triangulation."""
 *         return self.T.num_infinite_facets()
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_infinite_facets); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2262, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_infinite_facets, __pyx_t_1) < 0) __PYX_ERR(0, 2263, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2266
 *         r"""int: The number of infinite facets in the triangulation."""
 *         return self.T.num_infinite_facets()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_infinite_cells(self):
 *         r"""int: The number of infinite cells in the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2267
 *         return self.T.num_infinite_facets()
 *     @_dependent_property
 *     def num_infinite_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The number of infinite cells in the triangulation."""
 *         return self.T.num_infinite_cells()
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_infinite_cells); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2266, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2266, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2266, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2266, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2266, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_infinite_cells, __pyx_t_1) < 0) __PYX_ERR(0, 2267, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2270
 *         r"""int: The number of infinite cells in the triangulation."""
 *         return self.T.num_infinite_cells()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_verts(self):
 *         r"""int: The total number of vertices (finite + infinite) in the
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2271
 *         return self.T.num_infinite_cells()
 *     @_dependent_property
 *     def num_verts(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of vertices (finite + infinite) in the
 *         triangulation."""
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_verts); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2270, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2270, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2270, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2270, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2270, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_verts, __pyx_t_1) < 0) __PYX_ERR(0, 2271, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2275
 *         triangulation."""
 *         return self.T.num_verts()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_edges(self):
 *         r"""int: The total number of edges (finite + infinite) in the
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2276
 *         return self.T.num_verts()
 *     @_dependent_property
 *     def num_edges(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of edges (finite + infinite) in the
 *         triangulation."""
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_edges); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2275, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2275, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2275, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2275, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_edges, __pyx_t_1) < 0) __PYX_ERR(0, 2276, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2280
 *         triangulation."""
 *         return self.T.num_edges()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_facets(self):
 *         r"""int: The total number of facets (finite + infinite) in the
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2281
 *         return self.T.num_edges()
 *     @_dependent_property
 *     def num_facets(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of facets (finite + infinite) in the
 *         triangulation."""
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_facets); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2280, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2280, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2280, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2280, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2280, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_facets, __pyx_t_1) < 0) __PYX_ERR(0, 2281, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2285
 *         triangulation."""
 *         return self.T.num_facets()
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def num_cells(self):
 *         r"""int: The total number of cells (finite + infinite) in the
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2286
 *         return self.T.num_facets()
 *     @_dependent_property
 *     def num_cells(self):             # <<<<<<<<<<<<<<
 *         r"""int: The total number of cells (finite + infinite) in the
 *         triangulation."""
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_num_cells); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2285, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2285, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2285, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2285, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2285, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_num_cells, __pyx_t_1) < 0) __PYX_ERR(0, 2286, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2291
 *         return self.T.num_cells()
 * 
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     def infinite_vertex(self):
 *         r"""Delaunay3_vertex: The infinite vertex."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2292
 * 
 *     @_dependent_property
 *     def infinite_vertex(self):             # <<<<<<<<<<<<<<
 *         r"""Delaunay3_vertex: The infinite vertex."""
 *         cdef Delaunay_with_info_3[info_t].Vertex x = self.T.infinite_vertex()
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_infinite_vertex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2291, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2291, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2291, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2291, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2291, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_infinite_vertex, __pyx_t_1) < 0) __PYX_ERR(0, 2292, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2299
 *         return out
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2302
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def insert(self, np.ndarray[double, ndim=2, mode="c"] pts not None):             # <<<<<<<<<<<<<<
 *         r"""Insert points into the triangulation.
 * 
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_insert); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2299, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2299, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2299, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2299, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2299, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_insert, __pyx_t_1) < 0) __PYX_ERR(0, 2302, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2329
 *         # assert(self.n == self.T.num_finite_verts())
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     def clear(self):
 *         r"""Removes all vertices and cells from the triangulation."""
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2330
 * 
 *     @_update_to_tess
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         r"""Removes all vertices and cells from the triangulation."""
 *         with nogil, cython.boundscheck(False), cython.wraparound(False):
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_clear); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2329, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2329, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2329, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2329, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_clear, __pyx_t_1) < 0) __PYX_ERR(0, 2330, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2335
 *             self.T.clear()
 * 
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2338
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def vertices(self):             # <<<<<<<<<<<<<<
 *         r"""ndarray: The x,y,z coordinates of the vertices"""
 *         cdef np.ndarray[np.float64_t, ndim=2] out
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2335, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2335, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2335, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2335, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_vertices, __pyx_t_1) < 0) __PYX_ERR(0, 2338, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2348
 *         return out
 * 
 *     @_dependent_property             # <<<<<<<<<<<<<<
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_dependent_property); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2351
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def edges(self):             # <<<<<<<<<<<<<<
 *         r""":obj:`ndarray` of info_t: Vertex index pairs for edges."""
 *         cdef np.ndarray[np_info_t, ndim=2] out
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_edges); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_edges, __pyx_t_1) < 0) __PYX_ERR(0, 2351, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2389
 *         return out[:nout]
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     def remove(self, Delaunay3_vertex x):
 *         r"""Remove a vertex from the triangulation.
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2390
 * 
 *     @_update_to_tess
 *     def remove(self, Delaunay3_vertex x):             # <<<<<<<<<<<<<<
 *         r"""Remove a vertex from the triangulation.
 * 
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_remove); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2390, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2389, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2389, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2389, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2389, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2389, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_remove, __pyx_t_1) < 0) __PYX_ERR(0, 2390, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2400
 *             self.T.remove(x.x)
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2403
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def move(self, Delaunay3_vertex x, np.ndarray[np.float64_t, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         r"""Move a vertex to a new location. If there is a vertex at the given
 *         given coordinates, return that vertex and remove the one that was being
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_move); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2400, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2400, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2400, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2400, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2400, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_move, __pyx_t_1) < 0) __PYX_ERR(0, 2403, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2425
 *         return out
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2428
 *     @cython.boundscheck(False)
 *     @cython.wraparound(False)
 *     def move_if_no_collision(self, Delaunay3_vertex x,             # <<<<<<<<<<<<<<
 *                              np.ndarray[np.float64_t, ndim=1] pos):
 *         r"""Move a vertex to a new location only if there is not already a
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_move_if_no_collision); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2425, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2425, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2425, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2425, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2425, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_move_if_no_collision, __pyx_t_1) < 0) __PYX_ERR(0, 2428, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2451
 *         return out
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     def flip(self, Delaunay3_cell x, int i):
 *         r"""Flip the facet incident to cell x and neighbor i of cell x. This
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2452
 * 
 *     @_update_to_tess
 *     def flip(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Flip the facet incident to cell x and neighbor i of cell x. This
 *         method first checks if the facet can be flipped.
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_flip); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2451, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2451, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2451, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2451, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2451, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_flip, __pyx_t_1) < 0) __PYX_ERR(0, 2452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2470
 *         return <pybool>out
 * 
 *     @_update_to_tess             # <<<<<<<<<<<<<<
 *     def flip_flippable(self, Delaunay3_cell x, int i):
 *         r"""Same as :meth:`Delaunay3.flip`, but assumes that facet is flippable
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_update_to_tess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cgal4py/delaunay/delaunay3.pyx":2471
 * 
 *     @_update_to_tess
 *     def flip_flippable(self, Delaunay3_cell x, int i):             # <<<<<<<<<<<<<<
 *         r"""Same as :meth:`Delaunay3.flip`, but assumes that facet is flippable
 *         and does not check.
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3, __pyx_n_s_flip_flippable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2470, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2470, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_4, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2470, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2470, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2470, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3->tp_dict, __pyx_n_s_flip_flippable, __pyx_t_1) < 0) __PYX_ERR(0, 2471, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3);

  /* "cgal4py/delaunay/delaunay3.pyx":2632
 * 
 *     def is_edge(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 *                 Delaunay3_cell c = Delaunay3_cell(), int i1 = 0, int i2 = 0):             # <<<<<<<<<<<<<<
 *         r"""Determine if two vertices form an edge in the triangulation.
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__64 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2655
 * 
 *     def is_facet(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 *                  Delaunay3_vertex v3, Delaunay3_cell c = Delaunay3_cell(),             # <<<<<<<<<<<<<<
 *                  int i1 = 0, int i2 = 0, int i3 = 0):
 *         r"""Determine if two vertices form a facet in the triangulation.
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__65 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":2683
 *     def is_cell(self, Delaunay3_vertex v1, Delaunay3_vertex v2,
 *                 Delaunay3_vertex v3, Delaunay3_vertex v4,
 *                 Delaunay3_cell c = Delaunay3_cell(),             # <<<<<<<<<<<<<<
 *                 int i1 = 0, int i2 = 0, int i3 = 0, int i4 = 0):
 *         r"""Determine if two vertices form a cell in the triangulation.
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__66 = ((struct __pyx_obj_7cgal4py_8delaunay_9delaunay3_Delaunay3_cell *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cgal4py/delaunay/delaunay3.pyx":1
 * """             # <<<<<<<<<<<<<<
 * delaunay3.pyx
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../miniconda3/envs/py36/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1008
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init cgal4py.delaunay.delaunay3", 0, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init cgal4py.delaunay.delaunay3");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* IsLittleEndian */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
        CYTHON_FALLTHROUGH;
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
        CYTHON_FALLTHROUGH;
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}

/* BufferGetAndValidate */
  static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (unlikely(info->buf == NULL)) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static int __Pyx__GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  buf->buf = NULL;
  if (unlikely(__Pyx_GetBuffer(obj, buf, flags) == -1)) {
    __Pyx_ZeroBuffer(buf);
    return -1;
  }
  if (unlikely(buf->ndim != nd)) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if (unlikely((unsigned)buf->itemsize != dtype->size)) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_SafeReleaseBuffer(buf);
  return -1;
}

/* BufferIndexError */
  static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}

/* GetModuleGlobalName */
  static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    if (likely(result)) {
        Py_INCREF(result);
    } else if (unlikely(PyErr_Occurred())) {
        result = NULL;
    } else {
#else
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* PyCFunctionFastCall */
      #if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
      #if CYTHON_FAST_PYCALL
#include "frameobject.h"
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = f->f_localsplus;
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCallMethO */
      #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
      #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
      #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* RaiseDoubleKeywords */
        static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
        static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
        static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* BytesEquals */
        static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
        static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* PyFloatBinop */
        #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_DivideObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a, result;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? __Pyx_PyNumber_InPlaceDivide(op1, op2) : __Pyx_PyNumber_Divide(op1, op2));
    }
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* KeywordStringCheck */
          static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* None */
          static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* FetchCommonType */
          static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunction */
          #include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* GetItemInt */
              static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely((0 <= wrapped_i) & (wrapped_i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely((0 <= wrapped_i) & (wrapped_i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
              #if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* RaiseTooManyValuesToUnpack */
              static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
              static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
              static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
              static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* BufferFallbackError */
              static void __Pyx_RaiseBufferFallbackError(void) {
  PyErr_SetString(PyExc_ValueError,
     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
}

/* PyIntBinop */
              #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                #if PyLong_SHIFT < 30 && PyLong_SHIFT != 15
                default: return PyLong_Type.tp_richcompare(op1, op2, Py_EQ);
                #else
                default: Py_RETURN_FALSE;
                #endif
            }
        }
            if (a == b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            if ((double)a == (double)b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    return PyObject_RichCompare(op1, op2, Py_EQ);
}
#endif

/* UnpackUnboundCMethod */
              static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
              #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* decode_c_bytes */
              static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    if (unlikely((start < 0) | (stop < 0))) {
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (stop > length)
        stop = length;
    length = stop - start;
    if (unlikely(length <= 0))
        return PyUnicode_FromUnicode(NULL, 0);
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* PyObjectCallMethod1 */
              static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = NULL;
#if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(function)) {
                PyObject *args[2] = {self, arg};
                result = __Pyx_PyFunction_FastCall(function, args, 2);
                goto done;
            }
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(function)) {
                PyObject *args[2] = {self, arg};
                result = __Pyx_PyCFunction_FastCall(function, args, 2);
                goto done;
            }
            #endif
            args = PyTuple_New(2);
            if (unlikely(!args)) goto done;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
    goto done;
done:
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) return NULL;
    result = __Pyx__PyObject_CallMethod1(method, arg);
    Py_DECREF(method);
    return result;
}

/* append */
              static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* SetItemInt */
              static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return -1;
                    PyErr_Clear();
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o))) {
#else
    if (is_list || PySequence_Check(o)) {
#endif
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

/* DictGetItem */
                #if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* RaiseNoneIterError */
                static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* SaveResetException */
                #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if PY_VERSION_HEX >= 0x030700A2
    *type = tstate->exc_state.exc_type;
    *value = tstate->exc_state.exc_value;
    *tb = tstate->exc_state.exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if PY_VERSION_HEX >= 0x030700A2
    tmp_type = tstate->exc_state.exc_type;
    tmp_value = tstate->exc_state.exc_value;
    tmp_tb = tstate->exc_state.exc_traceback;
    tstate->exc_state.exc_type = type;
    tstate->exc_state.exc_value = value;
    tstate->exc_state.exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
                #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
                #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
#endif
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if PY_VERSION_HEX >= 0x030700A2
    tmp_type = tstate->exc_state.exc_type;
    tmp_value = tstate->exc_state.exc_value;
    tmp_tb = tstate->exc_state.exc_traceback;
    tstate->exc_state.exc_type = local_type;
    tstate->exc_state.exc_value = local_value;
    tstate->exc_state.exc_traceback = local_tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObject_GenericGetAttrNoDict */
                  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
                  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
                  static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* SetupReduce */
                  static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* Import */
                  static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
                  static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* GetNameInClass */
                  static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    return __Pyx_GetModuleGlobalName(name);
}
static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* ClassMethod */
                  static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYSTON || CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method)) {
#else
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (__Pyx_TypeCheck(method, methoddescr_type)) {
#endif
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __Pyx_CyFunction_USED
    else if (__Pyx_TypeCheck(method, __pyx_CyFunctionType)) {
        return PyClassMethod_New(method);
    }
#endif
    PyErr_SetString(PyExc_TypeError,
                   "Class-level classmethod() can only be called on "
                   "a method_descriptor or instance method.");
    return NULL;
}

/* CLineInTraceback */
                    #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
      use_cline = __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback);
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (PyObject_Not(use_cline) != 0) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
                    static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
                    #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (__Pyx_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
        else if (__Pyx_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view);
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


                    /* CIntFromPyVerify */
                    #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint32_t(uint32_t value) {
    const uint32_t neg_one = (uint32_t) -1, const_zero = (uint32_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(uint32_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(uint32_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint32_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(uint32_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint32_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(uint32_t),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(Py_intptr_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int32_t(int32_t value) {
    const int32_t neg_one = (int32_t) -1, const_zero = (int32_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int32_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int32_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int32_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int32_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int32_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int32_t),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int64_t(int64_t value) {
    const int64_t neg_one = (int64_t) -1, const_zero = (int64_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int64_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int64_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int64_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int64_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int64_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int64_t),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint64_t(uint64_t value) {
    const uint64_t neg_one = (uint64_t) -1, const_zero = (uint64_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(uint64_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(uint64_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint64_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(uint64_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint64_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(uint64_t),
                                     little, !is_unsigned);
    }
}

/* Print */
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

/* Declarations */
                    #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
                    #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0, -1);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
                    #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
                    #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
                    static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
                    static CYTHON_INLINE uint32_t __Pyx_PyInt_As_uint32_t(PyObject *x) {
    const uint32_t neg_one = (uint32_t) -1, const_zero = (uint32_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(uint32_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(uint32_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint32_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (uint32_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(uint32_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(uint32_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) >= 2 * PyLong_SHIFT) {
                            return (uint32_t) (((((uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(uint32_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) >= 3 * PyLong_SHIFT) {
                            return (uint32_t) (((((((uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(uint32_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) >= 4 * PyLong_SHIFT) {
                            return (uint32_t) (((((((((uint32_t)digits[3]) << PyLong_SHIFT) | (uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (uint32_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(uint32_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint32_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(uint32_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint32_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (uint32_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(uint32_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(uint32_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(uint32_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) - 1 > 2 * PyLong_SHIFT) {
                            return (uint32_t) (((uint32_t)-1)*(((((uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(uint32_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) - 1 > 2 * PyLong_SHIFT) {
                            return (uint32_t) ((((((uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(uint32_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) - 1 > 3 * PyLong_SHIFT) {
                            return (uint32_t) (((uint32_t)-1)*(((((((uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(uint32_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) - 1 > 3 * PyLong_SHIFT) {
                            return (uint32_t) ((((((((uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(uint32_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) - 1 > 4 * PyLong_SHIFT) {
                            return (uint32_t) (((uint32_t)-1)*(((((((((uint32_t)digits[3]) << PyLong_SHIFT) | (uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(uint32_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint32_t) - 1 > 4 * PyLong_SHIFT) {
                            return (uint32_t) ((((((((((uint32_t)digits[3]) << PyLong_SHIFT) | (uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(uint32_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint32_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(uint32_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint32_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            uint32_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (uint32_t) -1;
        }
    } else {
        uint32_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (uint32_t) -1;
        val = __Pyx_PyInt_As_uint32_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint32_t");
    return (uint32_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint32_t");
    return (uint32_t) -1;
}

/* CIntFromPy */
                    static CYTHON_INLINE npy_uint32 __Pyx_PyInt_As_npy_uint32(PyObject *x) {
    const npy_uint32 neg_one = (npy_uint32) -1, const_zero = (npy_uint32) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(npy_uint32) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(npy_uint32, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (npy_uint32) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (npy_uint32) 0;
                case  1: __PYX_VERIFY_RETURN_INT(npy_uint32, digit, digits[0])
                case 2:
                    if (8 * sizeof(npy_uint32) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) >= 2 * PyLong_SHIFT) {
                            return (npy_uint32) (((((npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(npy_uint32) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) >= 3 * PyLong_SHIFT) {
                            return (npy_uint32) (((((((npy_uint32)digits[2]) << PyLong_SHIFT) | (npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(npy_uint32) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) >= 4 * PyLong_SHIFT) {
                            return (npy_uint32) (((((((((npy_uint32)digits[3]) << PyLong_SHIFT) | (npy_uint32)digits[2]) << PyLong_SHIFT) | (npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (npy_uint32) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(npy_uint32) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_uint32, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(npy_uint32) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_uint32, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (npy_uint32) 0;
                case -1: __PYX_VERIFY_RETURN_INT(npy_uint32, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(npy_uint32,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(npy_uint32) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) - 1 > 2 * PyLong_SHIFT) {
                            return (npy_uint32) (((npy_uint32)-1)*(((((npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(npy_uint32) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) - 1 > 2 * PyLong_SHIFT) {
                            return (npy_uint32) ((((((npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(npy_uint32) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) - 1 > 3 * PyLong_SHIFT) {
                            return (npy_uint32) (((npy_uint32)-1)*(((((((npy_uint32)digits[2]) << PyLong_SHIFT) | (npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(npy_uint32) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) - 1 > 3 * PyLong_SHIFT) {
                            return (npy_uint32) ((((((((npy_uint32)digits[2]) << PyLong_SHIFT) | (npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(npy_uint32) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) - 1 > 4 * PyLong_SHIFT) {
                            return (npy_uint32) (((npy_uint32)-1)*(((((((((npy_uint32)digits[3]) << PyLong_SHIFT) | (npy_uint32)digits[2]) << PyLong_SHIFT) | (npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(npy_uint32) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_uint32, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_uint32) - 1 > 4 * PyLong_SHIFT) {
                            return (npy_uint32) ((((((((((npy_uint32)digits[3]) << PyLong_SHIFT) | (npy_uint32)digits[2]) << PyLong_SHIFT) | (npy_uint32)digits[1]) << PyLong_SHIFT) | (npy_uint32)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(npy_uint32) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_uint32, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(npy_uint32) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_uint32, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            npy_uint32 val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (npy_uint32) -1;
        }
    } else {
        npy_uint32 val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (npy_uint32) -1;
        val = __Pyx_PyInt_As_npy_uint32(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to npy_uint32");
    return (npy_uint32) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to npy_uint32");
    return (npy_uint32) -1;
}

/* CIntFromPy */
                    static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
                    static CYTHON_INLINE uint64_t __Pyx_PyInt_As_uint64_t(PyObject *x) {
    const uint64_t neg_one = (uint64_t) -1, const_zero = (uint64_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(uint64_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(uint64_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint64_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (uint64_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(uint64_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(uint64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) >= 2 * PyLong_SHIFT) {
                            return (uint64_t) (((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(uint64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) >= 3 * PyLong_SHIFT) {
                            return (uint64_t) (((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(uint64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) >= 4 * PyLong_SHIFT) {
                            return (uint64_t) (((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (uint64_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(uint64_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(uint64_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (uint64_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(uint64_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(uint64_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(uint64_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (uint64_t) (((uint64_t)-1)*(((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(uint64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (uint64_t) ((((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (uint64_t) (((uint64_t)-1)*(((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(uint64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (uint64_t) ((((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (uint64_t) (((uint64_t)-1)*(((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(uint64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (uint64_t) ((((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(uint64_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(uint64_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            uint64_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (uint64_t) -1;
        }
    } else {
        uint64_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (uint64_t) -1;
        val = __Pyx_PyInt_As_uint64_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint64_t");
    return (uint64_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint64_t");
    return (uint64_t) -1;
}

/* PrintOne */
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

/* CIntFromPy */
                    static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
                    #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
                    static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
                    #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
                    #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
                    static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
